"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[21265],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(96540);const l={},i=s.createContext(l);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(i.Provider,{value:n},e.children)}},65273:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/\u6587\u4ef6\u5b58\u50a8\u3001\u62a5\u8868\u3001\u58f0\u660e\u5f0f\u670d\u52a1/index","title":"\u4e00\u3001\u6587\u4ef6\u5b58\u50a8","description":"1.1 \u5148\u51b3\u6761\u4ef6: \u5b89\u88c5FastDFS","source":"@site/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/004-\u6587\u4ef6\u5b58\u50a8\u3001\u62a5\u8868\u3001\u58f0\u660e\u5f0f\u670d\u52a1/index.md","sourceDirName":"002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/004-\u6587\u4ef6\u5b58\u50a8\u3001\u62a5\u8868\u3001\u58f0\u660e\u5f0f\u670d\u52a1","slug":"/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/\u6587\u4ef6\u5b58\u50a8\u3001\u62a5\u8868\u3001\u58f0\u660e\u5f0f\u670d\u52a1/","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/\u6587\u4ef6\u5b58\u50a8\u3001\u62a5\u8868\u3001\u58f0\u660e\u5f0f\u670d\u52a1/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/004-\u6587\u4ef6\u5b58\u50a8\u3001\u62a5\u8868\u3001\u58f0\u660e\u5f0f\u670d\u52a1/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"C++\u67b6\u6784","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/C++\u67b6\u6784/"},"next":{"title":"Websocket\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/Websocket\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406/"}}');var l=t(74848),i=t(28453);const r={},a="\u4e00\u3001\u6587\u4ef6\u5b58\u50a8",d={},o=[{value:"1.1 \u5148\u51b3\u6761\u4ef6: \u5b89\u88c5FastDFS",id:"11-\u5148\u51b3\u6761\u4ef6-\u5b89\u88c5fastdfs",level:2},{value:"1.2 \u5927\u81ea\u7136\u7684\u9988\u8d60: FastDfsClient.h",id:"12-\u5927\u81ea\u7136\u7684\u9988\u8d60-fastdfsclienth",level:2},{value:"1.3 \u5982\u4f55\u4f7f\u7528<code>FastDfs</code>",id:"13-\u5982\u4f55\u4f7f\u7528fastdfs",level:2},{value:"1.3.1 include\u306e\u3054\u6ce8\u610f",id:"131-include\u306e\u3054\u6ce8\u610f",level:3},{value:"1.3.2 \u521b\u5efa\u4e00\u4e2a\u7ba1\u7406\u5ba2\u6237\u7aef\u7684\u5bf9\u8c61",id:"132-\u521b\u5efa\u4e00\u4e2a\u7ba1\u7406\u5ba2\u6237\u7aef\u7684\u5bf9\u8c61",level:3},{value:"1.3.3 \u6d4b\u8bd5\u6587\u4ef6\u4e0a\u4f20",id:"133-\u6d4b\u8bd5\u6587\u4ef6\u4e0a\u4f20",level:3},{value:"1.3.4 \u6d4b\u8bd5\u6587\u4ef6\u4e0b\u8f7d",id:"134-\u6d4b\u8bd5\u6587\u4ef6\u4e0b\u8f7d",level:3},{value:"1.3.5 \u6d4b\u8bd5\u6587\u4ef6\u5220\u9664",id:"135-\u6d4b\u8bd5\u6587\u4ef6\u5220\u9664",level:3},{value:"1.4 \u540e\u7aef\u5e94\u7528",id:"14-\u540e\u7aef\u5e94\u7528",level:2},{value:"1.4.1 \u5b9a\u4e49\u7aef\u70b9",id:"141-\u5b9a\u4e49\u7aef\u70b9",level:3},{value:"1.4.2 \u7f16\u5199\u63a7\u5236\u5c42",id:"142-\u7f16\u5199\u63a7\u5236\u5c42",level:3},{value:"2.1 \u5927\u81ea\u7136\u7684\u9988\u8d60: ExcelComponent.h",id:"21-\u5927\u81ea\u7136\u7684\u9988\u8d60-excelcomponenth",level:2},{value:"2.2 include",id:"22-include",level:2},{value:"2.3 \u3054\u6ce8\u610f: UTF-8\u3067C++\u306b\u546a\u3044",id:"23-\u3054\u6ce8\u610f-utf-8\u3067c\u306b\u546a\u3044",level:2},{value:"2.4 \u5c0f\u6d4b\u8bd5",id:"24-\u5c0f\u6d4b\u8bd5",level:2},{value:"3.1 \u4ec0\u4e48\u662f\u58f0\u660e\u5f0f\u670d\u52a1",id:"31-\u4ec0\u4e48\u662f\u58f0\u660e\u5f0f\u670d\u52a1",level:2},{value:"3.2 \u5982\u4f55\u4f7f\u7528",id:"32-\u5982\u4f55\u4f7f\u7528",level:2},{value:"3.2.1 \u6ce8\u5165\u7ec4\u4ef6",id:"321-\u6ce8\u5165\u7ec4\u4ef6",level:3},{value:"3.2.2 \u7f16\u5199 \u63a7\u5236\u5c42",id:"322-\u7f16\u5199-\u63a7\u5236\u5c42",level:3},{value:"3.2.3 \u7f16\u5199 \u670d\u52a1\u5c42 (\u91cd\u4e2d\u4e4b\u91cd)",id:"323-\u7f16\u5199-\u670d\u52a1\u5c42-\u91cd\u4e2d\u4e4b\u91cd",level:3}];function c(e){const n={a:"a",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"\u4e00\u6587\u4ef6\u5b58\u50a8",children:"\u4e00\u3001\u6587\u4ef6\u5b58\u50a8"})}),"\n",(0,l.jsx)(n.h2,{id:"11-\u5148\u51b3\u6761\u4ef6-\u5b89\u88c5fastdfs",children:"1.1 \u5148\u51b3\u6761\u4ef6: \u5b89\u88c5FastDFS"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6309\u7167 doc \u5206\u652f \u7684\u73af\u5883\u642d\u5efa\u6765\u5373\u53ef"}),"\n",(0,l.jsx)(n.li,{children:"\u53ef\u80fd\u9700\u8981: \u5b89\u88c5Nacos"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"12-\u5927\u81ea\u7136\u7684\u9988\u8d60-fastdfsclienth",children:"1.2 \u5927\u81ea\u7136\u7684\u9988\u8d60: FastDfsClient.h"}),"\n",(0,l.jsxs)(n.p,{children:["\u4e8e",(0,l.jsx)(n.code,{children:"\\zero-one-08mes\\mes-cpp\\lib-common\\include\\FastDfsClient.h"})]}),"\n",(0,l.jsxs)(n.p,{children:["\u662f\u4e00\u4e2a ",(0,l.jsx)(n.strong,{children:"FastDFS\u6587\u4ef6\u4e0a\u4f20\u4e0b\u8f7d\u5ba2\u6237\u7aef"}),"(",(0,l.jsx)(n.code,{children:"FastDfsClient"}),"\u7c7b), \u652f\u6301\u8de8\u5e73\u53f0(Linux/Windows)"]}),"\n",(0,l.jsx)(n.p,{children:"\u5e38\u7528\u65b9\u6cd5:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'//************************************\n// Method:    uploadFile\n// FullName:  FastDfsClient::uploadFile\n// Access:    public \n// Returns:   std::string \u4e0a\u4f20\u6210\u529f\u8fd4\u56defastdfs\u5b58\u50a8\u7684\u6587\u4ef6\u540d\uff0c\u5305\u542b\uff1a\u7ec4\u540d+\u6587\u4ef6\u540d\uff0c\u4e0a\u4f20\u5931\u8d25\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\n// Description: \u4e0a\u4f20\u6587\u4ef6\n// Parameter: const std::string & fileName \u5305\u542b\u8def\u5f84\u7684\u4e0a\u4f20\u6587\u4ef6\u540d\n//************************************\nstd::string uploadFile(const std::string& fileName);\n\n//************************************\n// Method:    uploadFile\n// FullName:  FastDfsClient::uploadFile\n// Access:    public \n// Returns:   std::string \u4e0a\u4f20\u6210\u529f\u8fd4\u56defastdfs\u5b58\u50a8\u7684\u6587\u4ef6\u540d\uff0c\u5305\u542b\uff1a\u7ec4\u540d+\u6587\u4ef6\u540d\uff0c\u4e0a\u4f20\u5931\u8d25\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\n// Description: \u4e0a\u4f20\u6587\u4ef6\n// Parameter: const char * buff \u6587\u4ef6\u4e8c\u8fdb\u5236\u5b57\u8282\u6570\u636e\n// Parameter: size_t size \u6587\u4ef6\u5927\u5c0f\n// Parameter: const std::string& extName \u6587\u4ef6\u540e\u7f00\u540d\n//************************************\nstd::string uploadFile(const char* buff, size_t size, const std::string& extName = "");\n\n//************************************\n// Method:    downloadFile\n// FullName:  FastDfsClient::downloadFile\n// Access:    public \n// Returns:   std::string \u8fd4\u56de\u5305\u542b\u8def\u5f84\u7684\u6587\u4ef6\u540d\n// Description: \u4e0b\u8f7d\u6587\u4ef6\n// Parameter: const std::string & fieldName fastdfs\u5bf9\u5e94\u7684\u6587\u4ef6\u540d\uff0c\u5305\u542b\uff1a\u7ec4\u540d+\u6587\u4ef6\u540d\n// Parameter: std::string * savePath \u4fdd\u5b58\u6587\u4ef6\u6839\u76ee\u5f55\uff0c\u8981\u6c42\u5b57\u7b26\u4e32\u7ed3\u5c3e\u4e0d\u5e26//\u6216\\\n//************************************\nstd::string downloadFile(const std::string& fieldName, std::string* savePath);\n\n//************************************\n// Method:    deleteFile\n// FullName:  FastDfsClient::deleteFile\n// Access:    public \n// Returns:   bool \u5220\u9664\u6210\u529f\u8fd4\u56detrue\n// Description: \u5220\u9664\u6587\u4ef6\n// Parameter: const std::string & fieldName fastdfs\u5bf9\u5e94\u7684\u6587\u4ef6\u540d\uff0c\u5305\u542b\uff1a\u7ec4\u540d+\u6587\u4ef6\u540d\n//************************************\nbool deleteFile(const std::string& fieldName);\n'})}),"\n",(0,l.jsxs)(n.h2,{id:"13-\u5982\u4f55\u4f7f\u7528fastdfs",children:["1.3 \u5982\u4f55\u4f7f\u7528",(0,l.jsx)(n.code,{children:"FastDfs"})]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"zero-one-08mes\\mes-cpp\\arch-tests\\tests\\fastdfs\\test-fastdfs.cpp"}),"\u4e2d\u6709\u793a\u4f8b"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"131-include\u306e\u3054\u6ce8\u610f",children:"1.3.1 include\u306e\u3054\u6ce8\u610f"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'#include ...\n  \n// \u6ce8\u610f: \u7528\u5230FastDfs\u7684\u5730\u65b9\u90fd\u8981\u5728\u6700\u540e\u5728\u5bfc\u5165DFS\u7684\u5934\u6587\u4ef6\n#include "FastDfsClient.h"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"132-\u521b\u5efa\u4e00\u4e2a\u7ba1\u7406\u5ba2\u6237\u7aef\u7684\u5bf9\u8c61",children:"1.3.2 \u521b\u5efa\u4e00\u4e2a\u7ba1\u7406\u5ba2\u6237\u7aef\u7684\u5bf9\u8c61"}),"\n",(0,l.jsxs)(n.p,{children:["\u4ece",(0,l.jsx)(n.code,{children:"zero-one-08mes\\mes-cpp\\arch-tests\\tests\\fastdfs\\test-fastdfs.cpp"}),"\u5230",(0,l.jsx)(n.code,{children:"zero-one-08mes\\mes-cpp\\arch-demo\\controller\\file\\FileController.h"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.del,{children:"\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898: \u4f3c\u4e4e\u65e0\u6cd5\u83b7\u53d6\u5230\u6587\u4ef6\u540d? \u5bfc\u81f4\u65e0\u6cd5\u4fdd\u5b58? \u624b\u52a8\u8bbe\u7f6e\u6587\u4ef6\u540d\u5219\u53ef\u4ee5\u4fdd\u5b58!?"})," <-- \u3042\u307b\u304b\uff01\u4e09\u4e2a\u914d\u7f6e\u6587\u4ef6\u5c31\u6539\u4e86\u4e24\u4e2a!!!"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'// \u6ce8\u610f\uff1a\u7528\u5230FastDfs\u7684\u5730\u65b9\u90fd\u8981\u5728\u6700\u540e\u5728\u5bfc\u5165DFS\u7684\u5934\u6587\u4ef6\n#include "FastDfsClient.h"\n\n// \u5b9a\u4e49\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u7528\u4e8e\u5b58\u50a8\u4e0a\u6b21\u4e0a\u4f20\u6210\u529f\u540e\u7684\u6587\u4ef6field\u540d\u79f0\nstd::string tmpField = "";\n\n/**\n * \u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u5939\u5177\uff0c\u7528\u4e8e\u7ba1\u7406Dfs\u5ba2\u6237\u7aef\u5bf9\u8c61\u521b\u5efa\u8fc7\u7a0b\n */\nclass FastDfsTest : public testing::Test {\nprotected:\n    void SetUp() override\n    {\n        // \u5b9a\u4e49\u4e00\u4e2aNacos\u5ba2\u6237\u7aef\u5bf9\u8c61\uff0c\u7528\u4e8e\u83b7\u53d6\u914d\u7f6e\n        NacosClient ns(TEST_NS_ADDR, TEST_NS_NAMESPACE);\n#ifdef LINUX\n        // \u8bfb\u53d6\u914d\u7f6e\u6570\u636e\u8282\u70b9\n        auto thirdServerConfig = ns.getConfig("third-services.yaml");\n        // \u4eceNacos\u914d\u7f6e\u4e2d\u5fc3\u83b7\u53d6FastDFS\u5ba2\u6237\u7aef\u914d\u7f6e\u6570\u636e\n        std::string config = ns.getConfigText("client.conf");\n        // \u5b9a\u4e49\u5ba2\u6237\u7aef\u5bf9\u8c61\n        this->client = new FastDfsClient(config, false);\n        // \u8bbe\u7f6e\u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u5730\u5740\n        this->filename = "/home/file/1.zip";\n#else\n        // \u8bfb\u53d6\u914d\u7f6e\u6570\u636e\u8282\u70b9\n        auto thirdServerConfig = ns.getConfig("./conf/third-services.yaml");\n        // +FastDFS\u5ba2\u6237\u7aef\u914d\u7f6e\u6570\u636e\n        std::string ipPort = YamlHelper().getString(&thirdServerConfig, "fastdfs.tracker-servers");\n        std::string ip = ipPort.substr(0, ipPort.find(":"));\n        int port = stoi(ipPort.substr(ipPort.find(":") + 1));\n        // \u8bbe\u7f6e\u5ba2\u6237\u7aef\u5bf9\u8c61\n        this->client = new FastDfsClient(ip, port);\n        // \u8bbe\u7f6e\u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u5730\u5740\n        this->filename = "E:/loli.jpg";\n#endif\n        // \u8bbe\u7f6eurl\u524d\u7f00\n        this->urlPrefix = "http://" + YamlHelper().getString(&thirdServerConfig, "fastdfs.nginx-servers") + "/";\n    }\n    void TearDown() override\n    {\n        if (client)\n        {\n            delete client;\n            client = nullptr;\n        }\n    }\n    // DFS\u5ba2\u6237\u7aef\u8fde\u63a5\u5bf9\u8c61\n    FastDfsClient* client = nullptr;\n    // \u6587\u4ef6\u4e0b\u8f7d\u5730\u5740\u524d\u7f00\n    std::string urlPrefix = "";\n    // \u58f0\u660e\u4e00\u4e2a\u4e0a\u4f20\u6587\u4ef6\u7684\u6587\u4ef6\u540d\n    std::string filename = "";\n};\n'})}),"\n",(0,l.jsx)(n.p,{children:"\u6ce8: \u8fd9\u4e2a\u662f\u4e00\u4e2a\u7c97\u7cd9\u7684\u6d4b\u8bd5"}),"\n",(0,l.jsx)(n.h3,{id:"133-\u6d4b\u8bd5\u6587\u4ef6\u4e0a\u4f20",children:"1.3.3 \u6d4b\u8bd5\u6587\u4ef6\u4e0a\u4f20"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'// \u6d4b\u8bd5\u6587\u4ef6\u4e0a\u4f20\nTEST_F(FastDfsTest, Upload) {\n    tmpField = client->uploadFile(filename);\n    ASSERT_NE(tmpField, "");\n    // \u8f93\u51fa\u6587\u4ef6\u4e0b\u8f7d\u5730\u5740\n    std::string downloadUrl = urlPrefix + tmpField;\n    std::cout << "download url: " << downloadUrl << std::endl;\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"134-\u6d4b\u8bd5\u6587\u4ef6\u4e0b\u8f7d",children:"1.3.4 \u6d4b\u8bd5\u6587\u4ef6\u4e0b\u8f7d"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'// \u6d4b\u8bd5\u6587\u4ef6\u4e0b\u8f7d\nTEST_F(FastDfsTest, Download) {\n    if (tmpField.empty())\n        return;\n    std::string path = "./public/fastdfs";\n    std::string fullPath = client->downloadFile(tmpField, &path);\n    ASSERT_NE(fullPath, "");\n    std::cout << "download savepath is : " << fullPath << std::endl;\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"135-\u6d4b\u8bd5\u6587\u4ef6\u5220\u9664",children:"1.3.5 \u6d4b\u8bd5\u6587\u4ef6\u5220\u9664"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:"// \u6d4b\u8bd5\u6587\u4ef6\u5220\u9664\nTEST_F(FastDfsTest, Delete) {\n    if (tmpField.empty())\n        return;\n    bool res = client->deleteFile(tmpField);\n    ASSERT_EQ(res, true);\n}\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.p,{children:"\u4ee5\u4e0a\u53ea\u662f\u8ba9\u4f60\u719f\u6089\u4e00\u4e0b\u6587\u4ef6\u7684\u4e0a\u4f20/\u4e0b\u8f7d/\u5220\u9664\u64cd\u4f5c, \u5b9e\u9645\u7528\u6237\u4f7f\u7528\u7684\u65f6\u5019\u662f\u8fd9\u6837\u7684"}),"\n",(0,l.jsx)(n.h2,{id:"14-\u540e\u7aef\u5e94\u7528",children:"1.4 \u540e\u7aef\u5e94\u7528"}),"\n",(0,l.jsx)(n.h3,{id:"141-\u5b9a\u4e49\u7aef\u70b9",children:"1.4.1 \u5b9a\u4e49\u7aef\u70b9"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'#include "domain/vo/BaseJsonVO.h"\n#include "ApiHelper.h"\n#include "ServerInfo.h"\n#include "domain/vo/file/FileVO.h"\n\n#include OATPP_CODEGEN_BEGIN(ApiController)\n\n/**\n * \u6587\u4ef6\u64cd\u4f5c\u793a\u4f8b\u63a5\u53e3\n */\nclass FileController : public oatpp::web::server::api::ApiController\n{\n    // \u5b9a\u4e49\u63a7\u5236\u5668\u8bbf\u95ee\u5165\u53e3\n    API_ACCESS_DECLARE(FileController);\npublic:\n    // \u5b9a\u4e49\u4e00\u4e2a\u5355\u6587\u4ef6\u4e0a\u4f20\u63a5\u53e3\n    // \u5b9a\u4e49\u63cf\u8ff0\n    API_DEF_ENDPOINT_INFO(ZH_WORDS_GETTER("file.upload.summary"), uploadFile, StringJsonVO::Wrapper);\n    // \u5b9a\u4e49\u7aef\u70b9\n    API_HANDLER_ENDPOINT(API_M_POST, "/file/upload", uploadFile, REQUEST(std::shared_ptr<IncomingRequest>, request), execUploadOne(request));\n\n    // ...\n};\n'})}),"\n",(0,l.jsx)(n.h3,{id:"142-\u7f16\u5199\u63a7\u5236\u5c42",children:"1.4.2 \u7f16\u5199\u63a7\u5236\u5c42"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'// FastDFS\u9700\u8981\u5bfc\u5165\u7684\u5934\n#include "ServerInfo.h"\n#include "NacosClient.h"\n#include "FastDfsClient.h"\n#include "SimpleDateTimeFormat.h"\n\nStringJsonVO::Wrapper FileController::execUploadOne(std::shared_ptr<IncomingRequest> request)\n{\n    // 1 \u521d\u59cb\u5316\n    API_MULTIPART_INIT(container, reader);\n\n    // 2 \u914d\u7f6e\u8bfb\u53d6\u5668\n    API_MULTIPART_CONFIG_MEMO_DEFAULT(reader, -1);\n    //API_MULTIPART_CONFIG_MEMO(reader, "file", -1);\n    //API_MULTIPART_CONFIG_MEMO(reader, "nickname", -1);\n    //API_MULTIPART_CONFIG_MEMO(reader, "age", -1);\n\n    // 3 \u8bfb\u53d6\u6570\u636e\n    request->transferBody(&reader);\n    /* \u6253\u5370\u4e0a\u4f20\u603b\u90e8\u5206\u6570 */\n    OATPP_LOGD("Multipart", "parts_count=%d", container->count());\n\n    // 4 \u89e3\u6790\u6570\u636e\n    /* TODO: \u89e3\u6790\u7684\u6570\u636e\u5177\u4f53\u903b\u8f91\uff0c\u9700\u8981\u6839\u636e\u4f60\u7684\u4e1a\u52a1\u9700\u6c42\u6765\uff0c\u4e0b\u9762\u662f\u4f7f\u7528\u793a\u4f8b\u800c\u5df2\u3002 */\n    /* \u83b7\u53d6\u8868\u5355\u6570\u636e */\n    API_MULTIPART_PARSE_FORM_FIELD_STR(container, "nickname", nickname);\n    API_MULTIPART_PARSE_FORM_FIELD_NUM(container, "age", Int32, age, stoi);\n    /* \u6253\u5370\u8868\u5355\u6570\u636e */\n    if (nickname)\n        OATPP_LOGD("Multipart", "nickname=\'%s\'", nickname.getValue({}).c_str());\n    if (age)\n        OATPP_LOGD("Multipart", "age=%d", age.getValue({}));\n    \n    /* \u83b7\u53d6\u6587\u4ef6\u6570\u636e */\n    API_MULTIPART_PARSE_FILE_FIELD(container, "file", file);\n    if (file)\n    {\n        /* \u6253\u5370\u6587\u4ef6\u540d\u79f0 */\n        string filename = partfile->getFilename().getValue("");\n        OATPP_LOGD("Multipart", "file=\'%s\'", filename.c_str());\n        /* \u6d4b\u8bd5\u5c06\u6587\u4ef6\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\u9762 */\n        // string fullPath = "public/static/file/" + filename;\n        // file.saveToFile(fullPath.c_str());\n\n        /* \u6d4b\u8bd5\u4e0a\u4f20\u5230FastDFS */\n        ZO_CREATE_DFS_CLIENT_URL(dfs, urlPrefix);\n        // \u83b7\u53d6\u6587\u4ef6\u540e\u7f00\u540d\n        string suffix = "";\n        size_t pos = filename.rfind(".");\n        if (pos != string::npos)\n        {\n            suffix = filename.substr(pos + 1);\n        }\n        // \u4e0a\u4f20\u6587\u4ef6\n        string downloadUrl = dfs.uploadFile(file->data(), file->size(), suffix);\n        downloadUrl = urlPrefix + downloadUrl;\n        OATPP_LOGD("Multipart", "download url=\'%s\'", downloadUrl.c_str());\n    }\n\n    // 5 \u54cd\u5e94\u7ed3\u679c\n    /* TODO: \u5177\u4f53\u54cd\u5e94\u4ec0\u4e48\u7ed3\u679c\uff0c\u9700\u8981\u6839\u636e\u4f60\u7684\u4e1a\u52a1\u9700\u6c42\u6765\uff0c\u4e0b\u9762\u662f\u4f7f\u7528\u793a\u4f8b\u800c\u5df2\u3002 */\n    auto jvo = StringJsonVO::createShared();\n    jvo->success("OK");\n    return jvo;\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"\u5177\u4f53\u5e94\u7528\u7684\u65f6\u5019, \u53ef\u80fd\u8fd8\u9700\u8981\u8bbf\u95eemysql\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u56fe\u7247\u7684\u8def\u5f84\u518d\u53bb\u8bbf\u95ee\u6587\u4ef6\u670d\u52a1\u5668\u83b7\u53d6\u5bf9\u5e94\u7684\u8d44\u6e90(\u603b\u4e4b\u5c31\u662f\u53ef\u80fd\u4f1a\u6709\u5176\u4ed6\u7684\u4ea4\u4e92)"}),"\n",(0,l.jsx)(n.h1,{id:"\u4e8c\u62a5\u8868",children:"\u4e8c\u3001\u62a5\u8868"}),"\n",(0,l.jsxs)(n.p,{children:["\u793a\u4f8b: ",(0,l.jsx)(n.code,{children:"zero-one-08mes\\mes-cpp\\arch-tests\\tests\\excel\\test-excel.cpp"})]}),"\n",(0,l.jsx)(n.h2,{id:"21-\u5927\u81ea\u7136\u7684\u9988\u8d60-excelcomponenth",children:"2.1 \u5927\u81ea\u7136\u7684\u9988\u8d60: ExcelComponent.h"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"\\zero-one-08mes\\mes-cpp\\lib-common\\include\\ExcelComponent.h"})}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:"/**\n * Excel\u7ec4\u4ef6\n * \u6ce8\u610f\uff1axlnt\u53ea\u652f\u6301xlsx\u6587\u4ef6\u683c\u5f0f\n */\nclass ExcelComponent\n{\nprivate:\n    xlnt::workbook wb;\n    xlnt::worksheet sheet;\n    // \u884c\u9ad8\n    double rowHeight = 20;\n    // \u5217\u5bbd\n    double colWidth = 20;\n    // \u521b\u5efaSheet\n    void createSheet(const std::string& sheetName);\npublic:\n    ExcelComponent();\n    // \u8bbe\u7f6e\u884c\u9ad8\n    void setRowHeight(double rowHeight);\n    // \u8bbe\u7f6e\u5217\u5bbd\n    void setColWidth(double colWidth);\n    // \u6e05\u7a7a\u5de5\u4f5c\u8584\n    void clearWorkbook();\n    \n    //************************************\n    // Method:    readIntoVector\n    // FullName:  ExcelComponent::readIntoVector\n    // Access:    public \n    // Returns:   std::vector<std::vector<std::string>> \u6307\u5b9a\u9875\u7b7e\u5185\u5bb9\u7684\u4e8c\u7ef4vector\n    // Description: \u8bfb\u53d6\u6307\u5b9a\u6587\u4ef6\u6307\u5b9a\u9875\u7b7e\u7684\u5185\u5bb9\n    // Parameter: const std::string & fileName \u6587\u4ef6\u540d\u79f0\u7684\u5168\u8def\u5f84\uff0c\u6ce8\u610f\u6587\u4ef6\u8def\u5f84\u5206\u9694\u7b26\u4f7f\u7528/\n    // Parameter: const std::string & sheetName \u9875\u7b7e\u540d\u79f0\n    //************************************\n    std::vector<std::vector<std::string>> readIntoVector(const std::string& fileName, const std::string& sheetName);\n    \n    //************************************\n    // Method:    writeVectorToFile\n    // FullName:  ExcelComponent::writeVectorToFile\n    // Access:    public \n    // Returns:   void\n    // Description: \u65b0\u589e\u5185\u5bb9\u5230\u6307\u5b9a\u9875\u7b7e\uff0c\u5e76\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\n    // Parameter: const std::string & fileName \u6587\u4ef6\u540d\u79f0\u7684\u5168\u8def\u5f84\uff0c\u6ce8\u610f\u6587\u4ef6\u8def\u5f84\u5206\u9694\u7b26\u4f7f\u7528/\n    // Parameter: const std::string & sheetName \u65b0\u589e\u5185\u5bb9\u4fdd\u5b58\u5230\u7684\u9875\u7b7e\u540d\u79f0\n    // Parameter: const std::vector<std::vector<std::string>> & data \u65b0\u589e\u4fdd\u5b58\u7684\u6570\u636e\n    //************************************\n    void writeVectorToFile(const std::string& fileName, const std::string& sheetName, const std::vector<std::vector<std::string>>& data);\n\n    // \u52a0\u8f7d\u6307\u5b9aExcel\u6587\u4ef6\u5230\u5185\u5b58\n    void loadFile(const std::string& filename);\n};\n"})}),"\n",(0,l.jsx)(n.h2,{id:"22-include",children:"2.2 include"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'// xlnt\u4f7f\u7528\u9700\u8981\u7684\u76f8\u5173\u5934\u6587\u4ef6\n#include "Macros.h"         // \u83b7\u53d6 yaml \u6587\u4ef6\u914d\u7f6e\n#include "ExcelComponent.h" // xlxs\n'})}),"\n",(0,l.jsx)(n.h2,{id:"23-\u3054\u6ce8\u610f-utf-8\u3067c\u306b\u546a\u3044",children:"2.3 \u3054\u6ce8\u610f: UTF-8\u3067C++\u306b\u546a\u3044"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'/**\n * #TIP \u6ce8\u610f\u4e8b\u9879\uff1a\n * Xlnt\u4e2d\u7684\u5b57\u7b26\u7f16\u7801\u5fc5\u987b\u662futf-8\u6240\u4ee5\u4e0d\u80fd\u518d\u4ee3\u7801\u4e2d\u51fa\u73b0\u4e2d\u6587\u5b57\u786c\u7f16\u7801\u7684\u5f62\u5f0f;\n * \u5982\u679c\u9700\u8981\u5199\u4e2d\u6587\uff0c\u901a\u8fc7yaml\u914d\u7f6e\u6587\u4ef6\u7684\u65b9\u5f0f\u4e66\u5199\u4e2d\u6587\n */\n\n// \u5b9a\u4e49\u4fdd\u5b58\u6570\u636e\u4f4d\u7f6e\u548c\u9875\u7b7e\u540d\u79f0\n// \u6ce8\u610f\uff1a\u6587\u4ef6\u4ef6\u540d\u79f0\u548c\u6587\u4ef6\u8def\u5f84\u4e0d\u80fd\u51fa\u73b0\u4e2d\u6587\nstd::string fileName = "./public/excel/1.xlsx";\n// \u6ce8\u610f\uff1a\u56e0\u4e3axlnt\u4e0d\u80fd\u5b58\u50a8\u975eutf8\u7f16\u7801\u7684\u5b57\u7b26\uff0c\u6240\u4ee5\u4e2d\u6587\u5b57\u9700\u8981\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\nstd::string sheetName = ZH_WORDS_GETTER("excel.sheet.s1");\n'})}),"\n",(0,l.jsx)(n.p,{children:"\u8bb8\u591a\u4e1c\u897f\u90fd\u9700\u8981\u4ece\u914d\u7f6e\u6587\u4ef6\u83b7\u53d6!"}),"\n",(0,l.jsx)(n.h2,{id:"24-\u5c0f\u6d4b\u8bd5",children:"2.4 \u5c0f\u6d4b\u8bd5"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\u5199\u4e86\u70b9\u5c0f\u7ec3\u4e60, \u6ce8\u610f\u4e0d\u8981\u51fa\u73b0\u4e2d\u6587\u5728\u4ee3\u7801\u7684\u5b57\u7b26\u4e32\u4e2d! (\u8fd8\u6709\u8bfb\u53d6/\u8986\u76d6\u7b49\u6ca1\u6709\u6f14\u793a\u5230, \u53e6\u5916\u6837\u5f0f\u5219\u9700\u8981\u53bb\u5b98\u65b9\u6587\u6863\u5b66\u4e60: ",(0,l.jsxs)(n.a,{href:"https://github.com/tfussell/xlnt",children:[(0,l.jsx)(n.code,{children:"xlnt"}),"excel\u62a5\u8868"]}),")"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'auto testFun = []() -> int { // \u6d4b\u8bd5\u5b66\u4e60\u4f7f\u7528\n    // \u521b\u5efa\u6d4b\u8bd5\u6570\u636e\n    std::vector<std::vector<std::string>> data(3, std::vector<std::string>(5));\n    {\n        int cnt = 1;\n        for (auto& it : data) {\n            it[0] = to_string(cnt) + " big xianMu";\n            it[1] = to_string(cnt) + " tuble man";\n            it[2] = to_string(cnt) + " pasen";\n            ++cnt;\n        }\n    }\n    \n    // \u63d2\u5165\u8868\u5934\n    data.insert(data.begin(), {\n        ZH_WORDS_GETTER("hx.tabs.tab_1"),\n        ZH_WORDS_GETTER("hx.tabs.tab_2"),\n        ZH_WORDS_GETTER("hx.tabs.tab_3"),\n    });\n\n    std::string fileName = "./public/excel/heng_xin.xlsx";   // \u8def\u5f84\n    std::string sheetName = ZH_WORDS_GETTER("hx.file_name"); // \u8868\u540d\n    // \u4fdd\u5b58\u5230\u6587\u4ef6\n    ExcelComponent excel;\n    excel.writeVectorToFile(fileName, sheetName, data);\n\n    return 0;\n}();\n'})}),"\n",(0,l.jsx)(n.h1,{id:"\u4e09\u58f0\u660e\u5f0f\u670d\u52a1",children:"\u4e09\u3001\u58f0\u660e\u5f0f\u670d\u52a1"}),"\n",(0,l.jsx)(n.h2,{id:"31-\u4ec0\u4e48\u662f\u58f0\u660e\u5f0f\u670d\u52a1",children:"3.1 \u4ec0\u4e48\u662f\u58f0\u660e\u5f0f\u670d\u52a1"}),"\n",(0,l.jsxs)(n.p,{children:["\u7b80\u5355\u5730\u8bf4\u5c31\u662f ",(0,l.jsx)(n.code,{children:"\u5728\u6211\u4eec\u4ee3\u7801\u4e2d, \u53ea\u6709\u58f0\u660e\u6ca1\u6709\u5b9e\u73b0"})," \u7684\u670d\u52a1. \u8bf4\u767d\u4e86\u5c31\u662f A \u670d\u52a1\u8c03\u7528 B \u670d\u52a1 (\u901a\u8fc7http(\u5957\u63a5\u5b57\u901a\u4fe1))"]}),"\n",(0,l.jsx)(n.h2,{id:"32-\u5982\u4f55\u4f7f\u7528",children:"3.2 \u5982\u4f55\u4f7f\u7528"}),"\n",(0,l.jsx)(n.h3,{id:"321-\u6ce8\u5165\u7ec4\u4ef6",children:"3.2.1 \u6ce8\u5165\u7ec4\u4ef6"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"main.cpp"}),"\u7684",(0,l.jsx)(n.code,{children:"HttpServer::startServer"}),"\u7684",(0,l.jsx)(n.code,{children:"otherComponentRegCall"}),"\u53c2\u6570, \u5141\u8bb8\u5916\u90e8\u6ce8\u518c\u7ec4\u4ef6\u901a\u8fc7\u8be5\u56de\u8c03\u6267\u884c\u7ec4\u4ef6\u6ce8\u518c."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:"// \u542f\u52a8HTTP\u670d\u52a1\u5668\nHttpServer::startServer(ServerInfo::getInstance().getServerPort(),\n    [=](Endpoints* doc, HttpRouter* router) {\n        Router(doc, router).initRouter();\n    },\n    [](std::shared_ptr<AbstractComponentReg>* o) {\n        *o = std::make_shared<OtherComponent>();\n    }\n);\n"})}),"\n",(0,l.jsxs)(n.p,{children:["\u5177\u4f53\u4f1a\u5728",(0,l.jsx)(n.code,{children:"HttpServer::init"}),"\u4e2d\u56de\u8c03."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:"// \u6ce8\u518c\u5176\u5b83\u7ec4\u4ef6\nstd::shared_ptr<AbstractComponentReg> other = nullptr;\nif (otherComponentRegCall) {\n    otherComponentRegCall(&other);\n}\n"})}),"\n",(0,l.jsxs)(n.p,{children:["\u800c",(0,l.jsx)(n.code,{children:"AbstractComponentReg"}),"\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b, \u4f7f\u7528\u7684\u8bdd\u8981\u5728\u5b50\u7c7b\u5199(",(0,l.jsx)(n.code,{children:"mes-cpp\\arch-demo\\controller\\OtherComponent.hpp"}),")"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'/**\n * \u5176\u5b83Oatpp\u7ec4\u4ef6\u6ce8\u518c\u9644\u4ef6\uff0c\u540e\u7eed\u5982\u679c\u9700\u8981\u9644\u52a0\u5176\u5b83\u7ec4\u4ef6\u53ef\u4ee5\u5728\u8fd9\u91cc\u8fdb\u884c\u5916\u90e8\u5b9a\u4e49\n */\nclass OtherComponent : public AbstractComponentReg\n{\n#ifdef HTTP_SERVER_DEMO\n    // \u5b9a\u4e49\u4e00\u4e2aWebSocket\u7ec4\u4ef6\u7528\u4e8e\u6f14\u793aWebSocket\u7684\u4f7f\u7528\n    OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::ConnectionHandler>, websocketConnectionHandler)("websocket", [] {\n        auto connectionHandler = oatpp::websocket::ConnectionHandler::createShared();\n        connectionHandler->setSocketInstanceListener(std::make_shared<WSInstanceListener>());\n        return connectionHandler;\n        }());\n    // \u5b9a\u4e49\u4e00\u4e2a\u793a\u4f8bRequestExecutor\u7ec4\u4ef6\u7528\u4e8e\u53d1\u9001api\u8bf7\u6c42\n    OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::web::client::HttpRequestExecutor>, sampleApiExecutor)("sample-api", [] {\n        auto connectionProvider = oatpp::network::tcp::client::ConnectionProvider::createShared({ "192.168.213.88", 10100 });\n        return oatpp::web::client::HttpRequestExecutor::createShared(connectionProvider);\n        }());\n#endif\n    // #TIP: \u9879\u76ee\u4e2d\u9700\u8981\u6ce8\u518c\u5176\u4ed6\u7ec4\u4ef6\u5728\u4e0b\u9762\u4e66\u5199\u7ec4\u4ef6\u6ce8\u518c\u4ee3\u7801\n\n};\n'})}),"\n",(0,l.jsx)(n.h3,{id:"322-\u7f16\u5199-\u63a7\u5236\u5c42",children:"3.2.2 \u7f16\u5199 \u63a7\u5236\u5c42"}),"\n",(0,l.jsx)(n.p,{children:"\u8fd9\u4e2a\u63a7\u5236\u5c42\u4f9d\u65e7\u662f\u6211\u4eec\u7684\u540e\u7aef\u7684(\u548c\u4e4b\u524d\u5199\u7684\u5927\u5dee\u4e0d\u5dee)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'class SampleController : public oatpp::web::server::api::ApiController // 1 \u7ee7\u627f\u63a7\u5236\u5668\n{\n    // 2 \u5b9a\u4e49\u63a7\u5236\u5668\u8bbf\u95ee\u5165\u53e3\n    API_ACCESS_DECLARE(SampleController);\n    // 3 \u5b9a\u4e49\u63a5\u53e3\npublic:\n    // 3.1 \u5b9a\u4e49\u6d4b\u8bd5\u58f0\u660e\u5f0f\u670d\u52a1\u8c03\u7528\u7684\u63a5\u53e31\u63cf\u8ff0\n    ENDPOINT_INFO(queryOne) {\n        // \u5b9a\u4e49\u6807\u9898\u548c\u8fd4\u56de\u7c7b\u578b\u4ee5\u53ca\u6388\u6743\u652f\u6301\n        API_DEF_ADD_COMMON_AUTH(ZH_WORDS_GETTER("sample.query-one.summary"), SampleJsonVO::Wrapper);\n        // \u5b9a\u4e49\u5176\u4ed6\u8def\u5f84\u53c2\u6570\u8bf4\u660e\n        API_DEF_ADD_QUERY_PARAMS(UInt64, "id", ZH_WORDS_GETTER("sample.field.id"), 1, true);\n    }\n    // 3.2 \u5b9a\u4e49\u6d4b\u8bd5\u58f0\u660e\u5f0f\u670d\u52a1\u8c03\u7528\u7684\u63a5\u53e31\u5904\u7406\n    API_HANDLER_ENDPOINT_AUTH(API_M_GET, "/sample/query-one", queryOne, QUERY(UInt64, id), execQueryOne(id, authObject->getPayload()));\n\n    // 3.1 \u5b9a\u4e49\u6d4b\u8bd5\u58f0\u660e\u5f0f\u670d\u52a1\u8c03\u7528\u7684\u63a5\u53e32\u63cf\u8ff0\n    ENDPOINT_INFO(queryAll) {\n        // \u5b9a\u4e49\u6807\u9898\u548c\u8fd4\u56de\u7c7b\u578b\u4ee5\u53ca\u6388\u6743\u652f\u6301\n        API_DEF_ADD_COMMON_AUTH(ZH_WORDS_GETTER("sample.query-all.summary"), SamplePageJsonVO::Wrapper);\n        // \u5b9a\u4e49\u5206\u9875\u67e5\u8be2\u53c2\u6570\u63cf\u8ff0\n        API_DEF_ADD_PAGE_PARAMS();\n        // \u5b9a\u4e49\u5176\u4ed6\u67e5\u8be2\u53c2\u6570\u63cf\u8ff0\n        API_DEF_ADD_QUERY_PARAMS(String, "name", ZH_WORDS_GETTER("sample.field.name"), "li ming", false);\n    }\n    // 3.2 \u5b9a\u4e49\u6d4b\u8bd5\u58f0\u660e\u5f0f\u670d\u52a1\u8c03\u7528\u7684\u63a5\u53e31\u5904\u7406\n    API_HANDLER_ENDPOINT_QUERY_AUTH(API_M_GET, "/sample/query-all", queryAll, SampleQuery, execQueryAll(query, authObject->getPayload()));\nprivate:\n    // 3.3 \u6d4b\u8bd5\u58f0\u660e\u5f0f\u670d\u52a1\u8c03\u75281\n    SampleJsonVO::Wrapper execQueryOne(const UInt64& id, const PayloadDTO& payload);\n    // 3.3 \u6d4b\u8bd5\u58f0\u660e\u5f0f\u670d\u52a1\u8c03\u75282\n    SamplePageJsonVO::Wrapper execQueryAll(const SampleQuery::Wrapper& query, const PayloadDTO& payload);\n};\n\nSampleJsonVO::Wrapper SampleController::execQueryOne(const UInt64& id, const PayloadDTO& payload)\n{\n    // \u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61\n    API_CLIENT_CREATE(ac, om, SampleApiClient, "sample-api");\n    // \u6784\u5efa\u51ed\u8bc1\n    std::string token = PayloadDTO::getTokenPrefix() + payload.getToken();\n    // \u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\n    return ac->queryById(token, id)->readBodyToDto<SampleJsonVO::Wrapper>(om);\n}\n\nSamplePageJsonVO::Wrapper SampleController::execQueryAll(const SampleQuery::Wrapper& query, const PayloadDTO& payload)\n{\n    // \u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61\n    API_CLIENT_CREATE(ac, om, SampleApiClient, "sample-api");\n    // \u6784\u5efa\u51ed\u8bc1\n    std::string token = PayloadDTO::getTokenPrefix() + payload.getToken();\n    // \u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\n    return ac->queryAll(token, query->pageIndex, query->pageSize, URIUtil::urlEncode(query->name))->readBodyToDto<SamplePageJsonVO::Wrapper>(om);\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["\u6b64\u5904\u7684",(0,l.jsx)(n.code,{children:"API_CLIENT_CREATE"}),"\u5c31\u662f\u8c03\u7528\u670d\u52a1\u5c42(\u89c1\u4e0b)"]}),"\n",(0,l.jsx)(n.h3,{id:"323-\u7f16\u5199-\u670d\u52a1\u5c42-\u91cd\u4e2d\u4e4b\u91cd",children:"3.2.3 \u7f16\u5199 \u670d\u52a1\u5c42 (\u91cd\u4e2d\u4e4b\u91cd)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-C++",children:'// 1 \u5bfc\u5165\u5fc5\u987b\u5934\u6587\u4ef6\n#include "oatpp/web/client/ApiClient.hpp"\n#include "ApiHelper.h"\n\n/**\n * \u4e66\u5199\u793a\u4f8bApiClient\u6765\u6f14\u793a\u5b9a\u4e49\u58f0\u660e\u5f0f\u670d\u52a1\n */\nclass SampleApiClient : public oatpp::web::client::ApiClient // 2 \u7ee7\u627f\u8fd9\u4e2a\u7c7b\n{\n    // 3 \u5b9a\u4e49ApiClient\u63a7\u5236\u5668\u4f7f\u7528\u5b8f---\u5f00\u59cb\n#include OATPP_CODEGEN_BEGIN(ApiClient)\n    \n    // 4 \u521d\u59cb\u5316\u5b9a\u4e49\n    API_CLIENT_INIT(SampleApiClient);\n    \n    // 5 \u4f7f\u7528API_CALL\u6216API_CALL_ASYNC\u58f0\u660e\u8c03\u7528\u670d\u52a1\u63a5\u53e3\n\n    // \u901a\u8fc7ID\u67e5\u8be2\n    API_CALL(API_M_GET, "/sample/query-one", queryById, API_HANDLER_AUTN_HEADER, QUERY(UInt64, id));\n    // \u591a\u6761\u4ef6\u67e5\u8be2\n    API_CALL(API_M_GET, "/sample/query-all", queryAll, API_HANDLER_AUTN_HEADER, API_HANDLER_PAGE_PARAME, QUERY(String, name));\n    \n#include OATPP_CODEGEN_END(ApiClient)\n    // 3 \u53d6\u6d88ApiClient\u63a7\u5236\u5668\u4f7f\u7528\u5b8f---\u7ed3\u675f\n};\n'})}),"\n",(0,l.jsx)(n.p,{children:"\u7136\u540e\u5c31\u4e0d\u8981\u7406\u4f1aDAO\u5c42\u4e86, \u56e0\u4e3a\u4ea4\u7ed9\u5916\u90e8\u670d\u52a1\u505a\u4e86, \u7136\u540e\u5c31\u7b49\u5916\u90e8\u670d\u52a1\u8fd4\u56de\u7ed9\u540e\u7aef(\u670d\u52a1\u5c42), \u670d\u52a1\u5c42\u518d\u8fd4\u56de\u7ed9\u63a7\u5236\u5c42, \u63a7\u5236\u5c42\u8fd4\u56de\u7ed9\u524d\u7aef\u5c31OK."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);