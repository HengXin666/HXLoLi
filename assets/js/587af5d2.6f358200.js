"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[77261],{28453:(t,e,n)=>{n.d(e,{R:()=>c,x:()=>i});var s=n(96540);const r={},a=s.createContext(r);function c(t){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:c(t.components),s.createElement(a.Provider,{value:e},t.children)}},61927:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>o});var s=n(85936),r=n(74848),a=n(28453);const c={authors:"Heng_Xin",title:"\u3010C++\u3011\u5982\u4f55\u5c06\u300c\u5b57\u7b26\u4e32\u300d\u4f5c\u4e3a\u300c\u975e\u7c7b\u578b\u6a21\u677f\u5b9e\u53c2\u300d",date:new Date("2025-09-14T21:14:00.000Z"),tags:["C++"]},i=void 0,l={authorsImageUrls:[void 0]},o=[{value:"\u4e00\u3001\u5b9e\u73b0\u7684\u6548\u679c",id:"\u4e00\u5b9e\u73b0\u7684\u6548\u679c",level:2},{value:"\u4e8c\u3001\u5982\u4f55\u5339\u914d\u975e\u7c7b\u578b\u6a21\u677f\u53c2\u6570",id:"\u4e8c\u5982\u4f55\u5339\u914d\u975e\u7c7b\u578b\u6a21\u677f\u53c2\u6570",level:2},{value:"2.1 <code>&lt;char... Cs&gt;</code>",id:"21-char-cs",level:3},{value:"2.2 <code>&lt;auto Str&gt;</code>",id:"22-auto-str",level:3},{value:"2.3 NTTP (C++20)",id:"23-nttp-c20",level:3},{value:"\u4e09\u3001\u4ee3\u7801\u5b9e\u73b0",id:"\u4e09\u4ee3\u7801\u5b9e\u73b0",level:2}];function d(t){const e={a:"a",blockquote:"blockquote",code:"code",div:"div",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",span:"span",ul:"ul",...(0,a.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:"\u51b7\u95e8\u5e94\u7528\u573a\u666f, \u4f46\u662f\u4e5f\u7b97\u662f\u6bd4\u8f83\u65b9\u4fbf\u5427~"}),"\n",(0,r.jsxs)(e.div,{className:"markdown-alert markdown-alert-tip",children:["\n",(0,r.jsxs)(e.p,{className:"markdown-alert-title",children:[(0,r.jsx)(e.span,{className:"octicon octicon-tip",style:{"--oct-icon":"url(\"data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' class='octicon octicon-light-bulb mr-2' viewBox='0 0 16 16' version='1.1' width='16' height='16' aria-hidden='true'%3E%3Cpath d='M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z'%3E%3C/path%3E%3C/svg%3E\")"}}),"Tip"]}),"\n",(0,r.jsx)(e.p,{children:"\u73af\u5883: C++20"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u4e00\u5b9e\u73b0\u7684\u6548\u679c",children:"\u4e00\u3001\u5b9e\u73b0\u7684\u6548\u679c"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",metastring:"[c1-\u4f7f\u7528\u6548\u679c] vscode",children:"// \u4ee3\u7801\u8282\u9009\nauto musicDAO\n    = dao::MemoryDAOPool::get<MusicDAO, \"./file/db/music.db\">();\nauto playlistDAO\n    = dao::MemoryDAOPool::get<PlaylistDAO, \"./file/db/playlist.db\">();\n\n// \u76f4\u63a5\u4f20\u5165\u5b57\u7b26\u4e32, \u800c\u4e0d\u662f char...\nauto playlistDAO\n    = dao::MemoryDAOPool::get<\n        PlaylistDAO,\n        '.', '/', 'f', 'i', 'l', 'e', '/', 'd', 'b', '/', 'p', 'l',\n        'a', 'y', 'l', 'i', 's', 't', '.', 'd', 'b'\n    >();\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",metastring:"[c1-\u4e3a\u4f55\u4f7f\u7528] vscode",children:'struct MemoryDAOPool {\n    template <typename T, meta::FixedString Path> // \u8fd9\u4e24\u4e2a\u53c2\u6570, \u4fdd\u8bc1\u5355\u4f8b\u552f\u4e00\n    static std::shared_ptr<T> get() {\n        using PathStr = meta::ToCharPack<Path>;\n        static auto dao = std::make_shared<T>(db::SQLiteDB{PathStr::view()}); // \u5355\u4f8b\n        return dao;\n    }\n};\n\n// \u5176\u4e2d db::SQLiteDB \u4e3a\nclass SQLiteDB {\npublic:\n    SQLiteDB(std::string_view filePath) // \u9700\u8981\u53c2\u6570, \u4f5c\u4e3a\u8def\u5f84\n        : SQLiteDB{}\n    {\n        if (::sqlite3_open(filePath.data(), &_db) != SQLITE_OK) [[unlikely]] {\n            throw std::runtime_error{\n                "Failed to open database: " + std::string{::sqlite3_errmsg(_db)}\n            };\n        }\n    }\n};\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\u4e8c\u5982\u4f55\u5339\u914d\u975e\u7c7b\u578b\u6a21\u677f\u53c2\u6570",children:"\u4e8c\u3001\u5982\u4f55\u5339\u914d\u975e\u7c7b\u578b\u6a21\u677f\u53c2\u6570"}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u9644: C\u98ce\u683c\u5b57\u7b26\u4e32, \u662f ",(0,r.jsx)(e.code,{children:"const char (&)[N]"})," \u7c7b\u578b(",(0,r.jsx)(e.code,{children:"C\u98ce\u683c\u6570\u7ec4"}),"). \u5373: \u6570\u7ec4\u4e0d\u662f\u6307\u9488..."]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:'using StrType = decltype("123"); // const char (&)[4]\nauto& str = "123"; // const char (&)[4]\n\n// \u4e0b\u9762\u53d1\u751f\u4e86\u9690\u5f0f\u8f6c\u6362\nusing StrType = decltype(+"123"); // const char*\nauto str = "123"; // const char*\n'})}),"\n",(0,r.jsxs)(e.h3,{id:"21-char-cs",children:["2.1 ",(0,r.jsx)(e.code,{children:"<char... Cs>"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:'template <char... Cs>\nvoid strTp() {}\n\nstrTp<"123">(); // \u62a5\u9519, \u663e\u7136\u4e0d\u5339\u914d\n'})}),"\n",(0,r.jsxs)(e.h3,{id:"22-auto-str",children:["2.2 ",(0,r.jsx)(e.code,{children:"<auto Str>"})]}),"\n",(0,r.jsx)(e.p,{children:"C++17 auto\u5360\u4f4d\u975e\u7c7b\u578b\u6a21\u7248\u5f62\u53c2:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:'template <auto Str>\nvoid strAutoTp() {}\n\nstrAutoTp<"123">(); // \u62a5\u9519, \u5b83\u4ec5\u652f\u6301 \u6574\u578b\u5e38\u91cf/\u679a\u4e3e\u5e38\u91cf/\u6307\u9488\u5e38\u91cf/\u6210\u5458\u6307\u9488/std::nullptr_t/  \u6d6e\u70b9\u6570(C++20)\n                    // \u672a\u652f\u6301 const char* \u6216\u8005 const char (&)[]\n'})}),"\n",(0,r.jsx)(e.h3,{id:"23-nttp-c20",children:"2.3 NTTP (C++20)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://en.cppreference.com/w/cpp/language/template_parameters.html",children:"https://en.cppreference.com/w/cpp/language/template_parameters.html"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://ctrpeach.io/posts/cpp20-class-as-non-type-template-param",children:"https://ctrpeach.io/posts/cpp20-class-as-non-type-template-param"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u5373 ",(0,r.jsx)(e.code,{children:"constexpr \u7c7b"})," \u5b9e\u4f8b\u4f5c\u4e3a\u6a21\u677f\u53c2\u6570"]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["\u6240\u4ee5, \u5728 C++20 \u4e2d, \u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e2a constexpr \u7c7b, \u5e76\u4e14\u5176\u901a\u8fc7 ",(0,r.jsx)(e.code,{children:"C\u98ce\u683c\u5b57\u7b26\u4e32"})," \u6784\u9020, \u4ece\u800c\u5b9e\u73b0: \u300c\u5b57\u7b26\u4e32\u300d\u4f5c\u4e3a\u300c\u975e\u7c7b\u578b\u6a21\u677f\u5b9e\u53c2\u300d"]}),"\n",(0,r.jsx)(e.h2,{id:"\u4e09\u4ee3\u7801\u5b9e\u73b0",children:"\u4e09\u3001\u4ee3\u7801\u5b9e\u73b0"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"template <std::size_t N>\nstruct CStr {\n    char _str[N];\n\n    // constexpr \u6784\u9020\u51fd\u6570 + \u9ed8\u8ba4\u6790\u6784\n    constexpr CStr(const char (&str)[N]) {\n        for (std::size_t i = 0; i < N; ++i)\n            _str[i] = str[i];\n    }\n\n    constexpr char operator[](std::size_t i) const noexcept {\n        return _str[i];\n    }\n\n    constexpr auto size() const noexcept {\n        return N - 1; // \u53bb\u6389 '\\0'\n    }\n};\n\ntemplate <CStr Str> // CStr \u53ef\u4f5c\u4e3a NTTP \u7c7b\u578b\nvoid strCStrTp() {}\n\nstrCStrTp<\"123\">(); // \u5408\u6cd5\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u5176\u4ed6\u7684\u4f7f\u7528, \u6bd4\u5982:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",metastring:"[c2-\u8bbf\u95ee\u5b57\u7b26\u4e32]",children:"template <CStr Str>\nvoid strCStrTp() {\n    for (std::size_t i = 0; i < Str.size(); ++i)\n        Str[i]; // todo...\n}\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",metastring:"[c2-\u5c55\u5f00\u5230 char...]",children:"template <char... Cs>\nstruct CStrWrap {};\n\ntemplate <CStr Str>\nusing ToCs = decltype([] <std::size_t... Idx> (std::index_sequence<Idx...>) {\n    return CStrWrap<Str[Idx]...>{};\n}(std::make_index_sequence<Str.size()>{}));\n\n// === \u7b49\u4ef7\u4e8e ===\n\ntemplate <std::size_t Idx>\nconstexpr auto toCs(std::index_sequence<Idx...>) -> CStrWrap<Str[Idx]...>;\n\ntemplate <CStr Str>\nusing ToCs = decltype(toCs(std::make_index_sequence<Str.size()>{}));\n\n// === END ===\n\ntemplate <char... Cs>\nconstexpr auto toNum(CStrWrap<Cs...>) {\n    static_assert((('0' <= Cs && Cs <= '9') && ...) && sizeof...(Cs) <= 18,\n        \"Only numeric characters allowed\");\n    constexpr char str[] = {Cs...};\n    std::size_t value = 0;\n    for (std::size_t i = 0; i < sizeof...(Cs); ++i) {\n        value = value * static_cast<std::size_t>(10) \n              + static_cast<std::size_t>(str[i] - '0');\n    }\n    return value;\n}\n\ntemplate <CStr Str>\nconstexpr auto strCStrTp() {\n    return toNum(ToCs<Str>{});\n}\n\nstatic_assert(toNum<\"123\"> == 123, \"\"); // ok\n"})}),"\n",(0,r.jsxs)(e.p,{children:["\u5b8c\u6574\u4ee3\u7801: ",(0,r.jsx)(e.a,{href:"https://godbolt.org/z/fqas758MK",children:"https://godbolt.org/z/fqas758MK"})]})]})}function p(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(d,{...t})}):d(t)}},85936:t=>{t.exports=JSON.parse('{"permalink":"/HXLoLi/blog/2025/09/14/01-\u5b57\u7b26\u4e32\u4f5c\u4e3a\u975e\u7c7b\u578b\u6a21\u677f\u5b9e\u53c2","editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/blog/2025/09/14/01-\u5b57\u7b26\u4e32\u4f5c\u4e3a\u975e\u7c7b\u578b\u6a21\u677f\u5b9e\u53c2.md","source":"@site/blog/2025/09/14/01-\u5b57\u7b26\u4e32\u4f5c\u4e3a\u975e\u7c7b\u578b\u6a21\u677f\u5b9e\u53c2.md","title":"\u3010C++\u3011\u5982\u4f55\u5c06\u300c\u5b57\u7b26\u4e32\u300d\u4f5c\u4e3a\u300c\u975e\u7c7b\u578b\u6a21\u677f\u5b9e\u53c2\u300d","description":"\u51b7\u95e8\u5e94\u7528\u573a\u666f, \u4f46\u662f\u4e5f\u7b97\u662f\u6bd4\u8f83\u65b9\u4fbf\u5427~","date":"2025-09-14T21:14:00.000Z","tags":[{"inline":false,"label":"C++","permalink":"/HXLoLi/blog/tags/C++","description":"C++\u5c0f\u77e5\u8bc6"}],"readingTime":3.29,"hasTruncateMarker":true,"authors":[{"name":"Heng_Xin","title":"\u3053\u3053\u304b\u3089\u5148\u306f\u4e00\u65b9\u901a\u884c\u3060!","url":"https://github.com/HengXin666","email":"282000500@qq.com","socials":{"github":"https://github.com/HengXin666","bilibili":"https://space.bilibili.com/478917126"},"imageURL":"https://avatars.githubusercontent.com/u/103022267","key":"Heng_Xin","page":null}],"frontMatter":{"authors":"Heng_Xin","title":"\u3010C++\u3011\u5982\u4f55\u5c06\u300c\u5b57\u7b26\u4e32\u300d\u4f5c\u4e3a\u300c\u975e\u7c7b\u578b\u6a21\u677f\u5b9e\u53c2\u300d","date":"2025-09-14T21:14:00.000Z","tags":["C++"]},"unlisted":false,"lastUpdatedAt":1757863164000,"lastUpdatedBy":"Heng_Xin_666","prevItem":{"title":"\u3010C++\u3011\u7f16\u8bd1\u671f\u51fd\u6570\u6307\u9488\u552f\u4e00\u5316","permalink":"/HXLoLi/blog/2025/09/24/01-\u7f16\u8bd1\u671f\u51fd\u6570\u6307\u9488\u552f\u4e00\u5316"},"nextItem":{"title":"MSVC\u7684requires\u7f3a\u9677","permalink":"/HXLoLi/blog/2025/09/07/01-MSVC\u7684requires\u7f3a\u9677"}}')}}]);