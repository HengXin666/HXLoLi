"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[48264],{25519:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/Websocket\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406/index","title":"\u4e00\u3001Websocket","description":"1.1 WebSocket\u3067\u306a\u306b?","source":"@site/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/005-Websocket\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406/index.md","sourceDirName":"002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/005-Websocket\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406","slug":"/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/Websocket\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406/","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/Websocket\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/005-Websocket\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u6587\u4ef6\u5b58\u50a8\u3001\u62a5\u8868\u3001\u58f0\u660e\u5f0f\u670d\u52a1","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/\u6587\u4ef6\u5b58\u50a8\u3001\u62a5\u8868\u3001\u58f0\u660e\u5f0f\u670d\u52a1/"},"next":{"title":"\u8ba4\u8bc1\u6388\u6743\u3001ELK\u3001EE","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/\u8ba4\u8bc1\u6388\u6743\u3001ELK\u3001EE/"}}');var o=t(74848),c=t(28453);const i={},r="\u4e00\u3001Websocket",l={},d=[{value:"1.1 WebSocket\u3067\u306a\u306b?",id:"11-websocket\u3067\u306a\u306b",level:2},{value:"1.2 \u793a\u4f8b",id:"12-\u793a\u4f8b",level:2},{value:"1.2.1 \u6587\u4ef6\u4f4d\u7f6e",id:"121-\u6587\u4ef6\u4f4d\u7f6e",level:3},{value:"1.2.2 \u63a7\u5236\u5c42",id:"122-\u63a7\u5236\u5c42",level:3},{value:"1.2.3 \u76d1\u542c\u5668",id:"123-\u76d1\u542c\u5668",level:3},{value:"1.2.4 \u4e8b\u4ef6\u5904\u7406",id:"124-\u4e8b\u4ef6\u5904\u7406",level:3},{value:"1.2.5 \u524d\u7aef",id:"125-\u524d\u7aef",level:3},{value:"1.3 \u7f16\u5199",id:"13-\u7f16\u5199",level:2},{value:"2.1 \u5927\u81ea\u7136\u7684\u9988\u8d60: RocketClient.h",id:"21-\u5927\u81ea\u7136\u7684\u9988\u8d60-rocketclienth",level:2},{value:"2.2 \u4e00\u4e2a\u793a\u4f8b",id:"22-\u4e00\u4e2a\u793a\u4f8b",level:2},{value:"2.2.1 include",id:"221-include",level:3},{value:"2.2.2 \u901a\u8fc7\u914d\u7f6e\u521b\u5efa\u5ba2\u6237\u7aef",id:"222-\u901a\u8fc7\u914d\u7f6e\u521b\u5efa\u5ba2\u6237\u7aef",level:3},{value:"2.2.3 \u53d1\u9001\u540c\u6b65\u6d88\u606f",id:"223-\u53d1\u9001\u540c\u6b65\u6d88\u606f",level:3},{value:"2.2.4 \u53d1\u9001\u5f02\u6b65\u6d88\u606f",id:"224-\u53d1\u9001\u5f02\u6b65\u6d88\u606f",level:3},{value:"2.2.5 \u8ba2\u9605",id:"225-\u8ba2\u9605",level:3},{value:"2.2.5.1 \u7f16\u5199\u8ba2\u9605\u7c7b",id:"2251-\u7f16\u5199\u8ba2\u9605\u7c7b",level:4},{value:"2.2.5.2 \u8fdb\u884c\u8ba2\u9605",id:"2252-\u8fdb\u884c\u8ba2\u9605",level:4}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"\u4e00websocket",children:"\u4e00\u3001Websocket"})}),"\n",(0,o.jsx)(n.h2,{id:"11-websocket\u3067\u306a\u306b",children:"1.1 WebSocket\u3067\u306a\u306b?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"WebSocket \u662f HTML5 \u5f00\u59cb\u63d0\u4f9b\u7684\u4e00\u79cd\u5728\u5355\u4e2a TCP \u8fde\u63a5\u4e0a\u8fdb\u884c\u5168\u53cc\u5de5\u901a\u8baf\u7684\u534f\u8bae\u3002"}),"\n",(0,o.jsx)(n.p,{children:"WebSocket \u4f7f\u5f97\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u6362\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\uff0c\u5141\u8bb8\u670d\u52a1\u7aef\u4e3b\u52a8\u5411\u5ba2\u6237\u7aef\u63a8\u9001\u6570\u636e\u3002\u5728 WebSocket API \u4e2d\uff0c\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u53ea\u9700\u8981\u5b8c\u6210\u4e00\u6b21\u63e1\u624b\uff0c\u4e24\u8005\u4e4b\u95f4\u5c31\u76f4\u63a5\u53ef\u4ee5\u521b\u5efa\u6301\u4e45\u6027\u7684\u8fde\u63a5\uff0c\u5e76\u8fdb\u884c\u53cc\u5411\u6570\u636e\u4f20\u8f93\u3002"}),"\n",(0,o.jsx)(n.p,{children:"\u5728 WebSocket API \u4e2d\uff0c\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u53ea\u9700\u8981\u505a\u4e00\u4e2a\u63e1\u624b\u7684\u52a8\u4f5c\uff0c\u7136\u540e\uff0c\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u5c31\u5f62\u6210\u4e86\u4e00\u6761\u5feb\u901f\u901a\u9053\u3002\u4e24\u8005\u4e4b\u95f4\u5c31\u76f4\u63a5\u53ef\u4ee5\u6570\u636e\u4e92\u76f8\u4f20\u9001\u3002"}),"\n",(0,o.jsx)(n.p,{children:"\u73b0\u5728\uff0c\u5f88\u591a\u7f51\u7ad9\u4e3a\u4e86\u5b9e\u73b0\u63a8\u9001\u6280\u672f\uff0c\u6240\u7528\u7684\u6280\u672f\u90fd\u662f Ajax \u8f6e\u8be2\u3002\u8f6e\u8be2\u662f\u5728\u7279\u5b9a\u7684\u7684\u65f6\u95f4\u95f4\u9694\uff08\u5982\u6bcf1\u79d2\uff09\uff0c\u7531\u6d4f\u89c8\u5668\u5bf9\u670d\u52a1\u5668\u53d1\u51faHTTP\u8bf7\u6c42\uff0c\u7136\u540e\u7531\u670d\u52a1\u5668\u8fd4\u56de\u6700\u65b0\u7684\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\u7684\u6d4f\u89c8\u5668\u3002\u8fd9\u79cd\u4f20\u7edf\u7684\u6a21\u5f0f\u5e26\u6765\u5f88\u660e\u663e\u7684\u7f3a\u70b9\uff0c\u5373\u6d4f\u89c8\u5668\u9700\u8981\u4e0d\u65ad\u7684\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\uff0c\u7136\u800cHTTP\u8bf7\u6c42\u53ef\u80fd\u5305\u542b\u8f83\u957f\u7684\u5934\u90e8\uff0c\u5176\u4e2d\u771f\u6b63\u6709\u6548\u7684\u6570\u636e\u53ef\u80fd\u53ea\u662f\u5f88\u5c0f\u7684\u4e00\u90e8\u5206\uff0c\u663e\u7136\u8fd9\u6837\u4f1a\u6d6a\u8d39\u5f88\u591a\u7684\u5e26\u5bbd\u7b49\u8d44\u6e90\u3002"}),"\n",(0,o.jsx)(n.p,{children:"HTML5 \u5b9a\u4e49\u7684 WebSocket \u534f\u8bae\uff0c\u80fd\u66f4\u597d\u7684\u8282\u7701\u670d\u52a1\u5668\u8d44\u6e90\u548c\u5e26\u5bbd\uff0c\u5e76\u4e14\u80fd\u591f\u66f4\u5b9e\u65f6\u5730\u8fdb\u884c\u901a\u8baf\u3002"}),"\n",(0,o.jsx)(n.img,{src:"http://www.runoob.com/wp-content/uploads/2016/03/ws.png"}),"\n",(0,o.jsx)(n.p,{children:"\u6d4f\u89c8\u5668\u901a\u8fc7 JavaScript \u5411\u670d\u52a1\u5668\u53d1\u51fa\u5efa\u7acb WebSocket \u8fde\u63a5\u7684\u8bf7\u6c42\uff0c\u8fde\u63a5\u5efa\u7acb\u4ee5\u540e\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u5c31\u53ef\u4ee5\u901a\u8fc7 TCP \u8fde\u63a5\u76f4\u63a5\u4ea4\u6362\u6570\u636e\u3002"}),"\n",(0,o.jsxs)(n.p,{children:["(copy By: ",(0,o.jsx)(n.a,{href:"https://www.runoob.com/html/html5-websocket.html",children:"\u83dc\u9e1f\u6559\u7a0b HTML5 WebSocket"}),")"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"12-\u793a\u4f8b",children:"1.2 \u793a\u4f8b"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u5b9e\u65f6\u804a\u5929\u5ba4"}),"\n",(0,o.jsx)(n.li,{children:"\u6d88\u606f(\u90ae\u4ef6) \u5728\u4e0d\u5237\u65b0\u7f51\u9875\u7684\u60c5\u51b5\u4e0b\u66f4\u65b0"}),"\n",(0,o.jsx)(n.li,{children:"..."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"121-\u6587\u4ef6\u4f4d\u7f6e",children:"1.2.1 \u6587\u4ef6\u4f4d\u7f6e"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["\u5ba2\u6237\u7aef: ",(0,o.jsx)(n.code,{children:"zero-one-08mes\\mes-cpp\\arch-demo\\public\\chat.html"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["\u63a7\u5236\u5c42: ",(0,o.jsx)(n.code,{children:"zero-one-08mes\\mes-cpp\\arch-demo\\controller\\ws\\WSController.h"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["\u5b9e\u4f8b\u76d1\u542c\u5668: ",(0,o.jsx)(n.code,{children:"zero-one-08mes\\mes-cpp\\arch-demo\\controller\\ws\\WSInstanceListener.h"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["\u76d1\u542c\u5668\u4e8b\u4ef6\u5904\u7406: ",(0,o.jsx)(n.code,{children:"zero-one-08mes\\mes-cpp\\arch-demo\\controller\\ws\\WSListener.h"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"122-\u63a7\u5236\u5c42",children:"1.2.2 \u63a7\u5236\u5c42"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'/**\n * \u6d4b\u8bd5WebSocket\u8bbf\u95ee\u7aef\u70b9\u521b\u5efa\n */\nclass WSContorller : public oatpp::web::server::api::ApiController\n{\n    API_ACCESS_DECLARE(WSContorller);\nprivate:\n    OATPP_COMPONENT(std::shared_ptr<oatpp::network::ConnectionHandler>, websocketConnectionHandler, "websocket");\npublic:\n    ENDPOINT(API_M_GET, "chat", chat, REQUEST(std::shared_ptr<IncomingRequest>, request)) {\n        auto response = oatpp::websocket::Handshaker::serversideHandshake(request->getHeaders(), websocketConnectionHandler);\n        auto parameters = std::make_shared<oatpp::network::ConnectionHandler::ParameterMap>();\n        (*parameters)["id"] = request->getQueryParameter("id");\n        response->setConnectionUpgradeParameters(parameters);\n        return response;\n    };\n};\n'})}),"\n",(0,o.jsx)(n.h3,{id:"123-\u76d1\u542c\u5668",children:"1.2.3 \u76d1\u542c\u5668"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'/**\n * \u5b9a\u4e49\u793a\u4f8bWS\u5b9e\u4f8b\u76d1\u542c\u5668\n */\nclass WSInstanceListener : public oatpp::websocket::ConnectionHandler::SocketInstanceListener\n{\nprivate:\n    static constexpr const char* TAG = "Server_WSInstanceListener";\npublic:\n    /**\n     * Counter for connected clients.\n     */\n    static std::atomic<v_int32> SOCKETS;\n    // \u5b9a\u4e49\u4e00\u4e2a\u8fde\u63a5\u5bf9\u8c61\u6c60\n    std::map<std::string, const WebSocket*> conn_pool;\n    // \u5b9a\u4e49\u4e00\u4e2a\u9501\u5bf9\u8c61\n    std::mutex instance_mutex;\npublic:\n    // \u5f53socket\u5b9e\u4f8b\u521b\u5efa\u65f6\u8c03\u7528\n    void onAfterCreate(const WebSocket& socket, const std::shared_ptr<const ParameterMap>& params) override;\n    // \u5f53socket\u5b9e\u4f8b\u9500\u6bc1\u524d\u8c03\u7528\n    void onBeforeDestroy(const WebSocket& socket) override;\n};\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'// .cpp\nstd::atomic<v_int32> WSInstanceListener::SOCKETS(0);\n\nvoid WSInstanceListener::onAfterCreate(const WebSocket& socket, const std::shared_ptr<const ParameterMap>& params)\n{\n    // \u83b7\u53d6\u5ba2\u6237\u7aefID\n    std::string id = params->at("id")->c_str();\n    // \u5224\u65ad\u5ba2\u6237\u7aef\u5bf9\u8c61\u662f\u5426\u5b58\u5728\n    std::lock_guard<std::mutex> guard(instance_mutex);\n    if (conn_pool.find(id) != conn_pool.end()) {\n        // \u5173\u95ed\u62d2\u7edd\u8fde\u63a5\n        socket.sendClose(9999, u8"reason id has been used");\n        OATPP_LOGD(TAG, "New Incoming Connection. Connection has been refuse.");\n        return;\n    }\n\n    // \u6dfb\u52a0\u5230\u8fde\u63a5\u6c60\u4e2d\n    conn_pool.insert(std::make_pair(id, &socket));\n    OATPP_LOGD(TAG, "client(%s): open connection", id.c_str());\n\n    // \u8fde\u63a5\u6570\u91cf\u8ba1\u6570\n    SOCKETS++;\n    OATPP_LOGD(TAG, "New Incoming Connection. Connection count=%d", SOCKETS.load());\n\n    // \u6dfb\u52a0\u6d88\u606f\u5904\u7406\u76d1\u542c\u5668\n    socket.setListener(std::make_shared<WSListener>(id, &conn_pool));\n}\n\nvoid WSInstanceListener::onBeforeDestroy(const WebSocket& socket)\n{\n    auto peer = std::static_pointer_cast<WSListener>(socket.getListener());\n    if (peer)\n    {\n        // \u83b7\u53d6\u5ba2\u6237\u7aefID\n        std::string id = peer->getId();\n\n        // \u5904\u7406\u5ba2\u6237\u7aef\u79fb\u9664\n        OATPP_LOGD(TAG, "client(%s): close connection", id.c_str());\n\n        // \u5c06\u8fde\u63a5\u5bf9\u8c61\u4ecemap\u4e2d\u79fb\u9664\n        std::lock_guard<std::mutex> guard(instance_mutex);\n        conn_pool.erase(id);\n        socket.setListener(nullptr);\n\n        // \u8fde\u63a5\u6570\u91cf\u8ba1\u6570\n        SOCKETS--;\n        OATPP_LOGD(TAG, "Connection closed. Connection count=%d", SOCKETS.load());\n    }\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["\u5c31\u95ee\u4f60\u50cf\u4e0d\u50cf: ",(0,o.jsx)(n.a,{href:"/HXLoLi/docs/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/C++/tmp%E4%B8%B6C++%E4%B8%B6memo/C++%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E5%AE%9E%E8%B7%B5%E7%89%88%E6%9C%AC/epoll%E6%A8%A1%E5%BC%8F/",children:"epoll\u6a21\u5f0f"})," \u5b9e\u73b0\u7684\u804a\u5929\u5ba4?"]}),"\n",(0,o.jsx)(n.h3,{id:"124-\u4e8b\u4ef6\u5904\u7406",children:"1.2.4 \u4e8b\u4ef6\u5904\u7406"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'/**\n * WebSocket\u4fa6\u542c\u5668,\u4fa6\u542c\u4f20\u5165\u7684WebSocket\u4e8b\u4ef6\n */\nclass WSListener : public oatpp::websocket::WebSocket::Listener\n{\nprivate:\n    static constexpr const char* TAG = "Server_WSListener";\n    // \u6d88\u606f\u7f13\u51b2\u533a\n    oatpp::data::stream::BufferOutputStream m_messageBuffer;\n    // \u7528\u6237ID\n    std::string id;\n    // \u52a0\u5165\u804a\u5929\u5ba4\u7528\u6237\u5217\u8868\n    std::map<std::string, const WebSocket*>* conn_pool;\npublic:\n    // \u83b7\u53d6ID\n    const std::string& getId();\n    // \u6784\u9020\u521d\u59cb\u5316\n    WSListener(std::string id, std::map<std::string, const WebSocket*>* conn_pool);\n    // \u5728ping\u5e27\u4e0a\u8c03\u7528\n    void onPing(const WebSocket& socket, const oatpp::String& message) override;\n    // \u5728pong\u5e27\u4e0a\u8c03\u7528\n    void onPong(const WebSocket& socket, const oatpp::String& message) override;\n    // \u5728close\u5e27\u4e0a\u8c03\u7528\n    void onClose(const WebSocket& socket, v_uint16 code, const oatpp::String& message) override;\n    // \u5728\u6bcf\u4e2a\u6d88\u606f\u5e27\u4e0a\u8c03\u7528\u3002\u6700\u540e\u4e00\u6761\u6d88\u606f\u5c06\u518d\u6b21\u8c03\u7528\uff0csize\u7b49\u4e8e0\u4ee5\u6307\u5b9a\u6d88\u606f\u7ed3\u675f\n    void readMessage(const WebSocket& socket, v_uint8 opcode, p_char8 data, oatpp::v_io_size size) override;\n};\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'// .cpp\n// \u5b9a\u4e49\u4e00\u4e2a\u9501\u5bf9\u8c61\nstd::mutex listener_mutex;\n\nconst std::string& WSListener::getId()\n{\n    return this->id;\n}\n\nWSListener::WSListener(std::string id, std::map<std::string, const WebSocket*>* conn_pool)\n{\n    this->id = id;\n    this->conn_pool = conn_pool;\n}\n\nvoid WSListener::onPing(const WebSocket& socket, const oatpp::String& message)\n{\n    OATPP_LOGD(TAG, "onPing");\n    socket.sendPong(message);\n}\n\nvoid WSListener::onPong(const WebSocket& socket, const oatpp::String& message)\n{\n    OATPP_LOGD(TAG, "onPong");\n}\n\nvoid WSListener::onClose(const WebSocket& socket, v_uint16 code, const oatpp::String& message)\n{\n    OATPP_LOGD(TAG, "onClose code=%d", code);\n}\n\nvoid WSListener::readMessage(const WebSocket& socket, v_uint8 opcode, p_char8 data, oatpp::v_io_size size)\n{\n    // message transfer finished\n    if (size == 0)\n    {\n        // \u83b7\u53d6\u6d88\u606f\u6570\u636e\n        auto wholeMessage = m_messageBuffer.toString().getValue("");\n        m_messageBuffer.setCurrentPosition(0);\n        OATPP_LOGD(TAG, "onMessage message=\'%s\'", wholeMessage.c_str());\n        // \u89e3\u6790\u6d88\u606f => ID::\u6d88\u606f\u5185\u5bb9\n        std::vector<string> msgs = StringUtil::split(wholeMessage.c_str(), "::");\n        // \u7fa4\u53d1\u6d88\u606fID=all\u8868\u793a\u7fa4\u53d1\n        if ("all" == msgs[0])\n        {\n            std::lock_guard<std::mutex> guard(listener_mutex);\n            for (auto one : *conn_pool)\n            {\n                // \u6392\u9664\u81ea\u5df1\n                if (one.second == &socket)\n                {\n                    continue;\n                }\n                // \u53d1\u9001\u6d88\u606f\n                one.second->sendOneFrameText(msgs[1]);\n            }\n        }\n        // \u6307\u5b9a\u53d1\u9001\n        else\n        {\n            std::lock_guard<std::mutex> guard(listener_mutex);\n            auto iter = conn_pool->find(msgs[0]);\n            if (iter != conn_pool->end())\n            {\n                iter->second->sendOneFrameText(msgs[1]);\n            }\n        }\n        socket.sendOneFrameText("message send success");\n    }\n    // message frame received\n    else if (size > v_int64(0))\n    {\n        m_messageBuffer.writeSimple(data, v_buff_size(size));\n    }\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["\u6ce8: ",(0,o.jsx)(n.code,{children:"ping-pong"}),"\u5c31\u662f\u5fc3\u8df3\u5305"]}),"\n",(0,o.jsx)(n.h3,{id:"125-\u524d\u7aef",children:"1.2.5 \u524d\u7aef"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="zh-cn">\n<head>\n    <meta charset="UTF-8">\n    <title>\u96f6\u58f9\u804a\u5929\u5ba4</title>\n</head>\n<body>\n<h1>Chat Client</h1>\n<div>\n    <input id="clientId" placeholder="\u8f93\u5165ID" value="1">\n    <input onclick="init()" value="\u8fde\u63a5\u670d\u52a1\u5668" type="button"><br><br>\n    <input id="receiverId" placeholder="\u8f93\u5165\u63a5\u6536\u4ebaID" value="all"><br><br>\n    <textarea id="message" style="margin: 0; height: 197px; width: 362px;"\n              placeholder="\u53d1\u9001\u6d88\u606f\u5185\u5bb9"></textarea><br>\n    <input onclick="send()" value="\u53d1\u9001\u6d88\u606f" type="button">\n    <input onclick="closeConnect()" value="\u5173\u95ed\u8fde\u63a5" type="button">\n</div>\n<div id="output"></div>\n<script type="text/javascript" language="JavaScript">\n    // \u5c4f\u5e55\u56de\u663e\u8f93\u51fa\u65b9\u6cd5\n    function writeToScreen(message) {\n        let pre = document.createElement("p");\n        pre.style.wordWrap = "break-word";\n        pre.innerHTML = message;\n        document.getElementById("output").appendChild(pre);\n    }\n\n    // \u521d\u59cb\u5316websocket\n    let echo_websocket = null;\n    function init() {\n        if (echo_websocket) return;\n        let clientId = document.getElementById("clientId").value;\n        let wsUri = "ws://localhost:8090/chat?id=" + clientId;\n        writeToScreen("\u8fde\u63a5\u5230" + wsUri);\n        // 1.\u521b\u5efaWebSocket\u5ba2\u6237\u7aef\u5bf9\u8c61\n        echo_websocket = new WebSocket(wsUri);\n        // 2.\u5f00\u95e8\u63e1\u624b\u5b8c\u6210\u56de\u8c03\n        echo_websocket.onopen = function (evt) {\n            console.log(evt);\n            writeToScreen("\u8fde\u63a5\u6253\u5f00\u6210\u529f !");\n        };\n        // 3.\u76d1\u542c\u670d\u52a1\u7aef\u7684\u6d88\u606f\n        echo_websocket.onmessage = function (evt) {\n            writeToScreen("\u63a5\u6536\u670d\u52a1\u7aef\u6d88\u606f:<br> " + evt.data);\n        };\n        // 4.\u5982\u679c\u8fde\u63a5\u4e2d\u65ad\n        echo_websocket.onerror = function (evt) {\n            writeToScreen(\'<span style="color: red;">ERROR:\'+evt.data+\'</span>\');\n            // \u5173\u95ed\u8fde\u63a5\n            closeConnect();\n        };\n        // 5.\u6ce8\u518cclose\u4e8b\u4ef6\n        echo_websocket.onclose = function(evt){\n            writeToScreen(\'<span style="color: green;">INFO\uff1a\u5173\u95ed\u8fde\u63a5</span> \');\n            if(evt.reason){\n                writeToScreen\n                (`<span style="color: red;">\u9519\u8bef\u4fe1\u606f\uff1a${evt.reason}</span> `);\n            }\n            echo_websocket = null;\n        }\n    }\n\n    // 6.\u5411\u670d\u52a1\u53d1\u9001\u6d88\u606f\n    function send() {\n        let message = document.getElementById("message").value;\n        let receiver = document.getElementById("receiverId").value;\n        echo_websocket.send(receiver + "::" + message);\n        writeToScreen("\u53d1\u9001\u6d88\u606f: " + message);\n    }\n\n    // 7.\u5982\u679c\u4e0d\u9700\u8981\u901a\u8baf\uff0c\u90a3\u4e48\u5173\u95ed\u8fde\u63a5\n    function closeConnect() {\n        echo_websocket.close();\n        echo_websocket = null;\n    }\n<\/script>\n</body>\n</html>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"13-\u7f16\u5199",children:"1.3 \u7f16\u5199"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.del,{children:"\u7c7b\u4f3cepoll\u7684\u4ee3\u7801\u5c31OK\u4e86\u5427"})," <-- \u8fd9\u4e2a\u5bb6\u4f19\u592a\u61d2\u4e86, \u7ed9\u6211\u71ac!"]}),"\n",(0,o.jsx)(n.h1,{id:"\u4e8c\u6d88\u606f\u4e2d\u95f4\u4ef6",children:"\u4e8c\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6"}),"\n",(0,o.jsxs)(n.p,{children:["\u4e0d\u8981\u5fd8\u8bb0\u53bb",(0,o.jsx)(n.code,{children:".\\conf\\third-services.yaml"}),"\u4fee\u6539\u4e3a\u4f60\u7684\u670d\u52a1\u5668ip"]}),"\n",(0,o.jsx)(n.h2,{id:"21-\u5927\u81ea\u7136\u7684\u9988\u8d60-rocketclienth",children:"2.1 \u5927\u81ea\u7136\u7684\u9988\u8d60: RocketClient.h"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"zero-one-08mes\\mes-cpp\\lib-common\\include\\RocketClient.h"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"\u4f7f\u7528\u5df2\u7ecf\u5c01\u88c5\u8fc7\u7684API:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'/**\n * \u5b9a\u4e49\u4e00\u4e2aRocketmq\u5ba2\u6237\u7aef\uff0c\u6765\u5c01\u88c5\u5e38\u7528\u64cd\u4f5c\u3002\n * \u53c2\u8003\u8fde\u63a5\uff1ahttps://github.com/apache/rocketmq-client-cpp/tree/release-2.1.0/example\n */\nclass RocketClient\n{\nprivate:\n    /**\n     * MQ\u6d88\u606f\u76d1\u542c\u5668\n     */\n    class RMessageLisenter : public MessageListenerConcurrently {\n    private:\n        RocketClient* client;\n    public:\n        explicit RMessageLisenter(RocketClient* client);\n        ConsumeStatus consumeMessage(const std::vector<MQMessageExt>& msgs) override;\n    };\n    /**\n     * MQ\u81ea\u52a8\u5220\u9664\u56de\u8c03\n     */\n    class RAutoDeleteSendCallback : public AutoDeleteSendCallBack {\n    public:\n        void onSuccess(SendResult& sendResult) override;\n        void onException(MQException& e) override;\n    };\npublic:\n    /**\n     * \u6d88\u606f\u4ea4\u4ed8\u56de\u8c03\n     */\n    class RSendCallback : public SendCallback {\n    private:\n        std::function<void(SendStatus)> cf;\n    public:\n        explicit RSendCallback(std::function<void(SendStatus)> cf);\n        void onSuccess(SendResult& sendResult) override;\n        void onException(MQException& e) override;\n    };\n    /**\n     * \u6d88\u8d39\u6d88\u606f\u76d1\u542c\u5668\n     */\n    class RConsumerListener {\n    public:\n        // \u63a5\u6536\u6d88\u606f\n        virtual void receiveMessage(std::string payload) = 0;\n    };\nprivate:\n    // nameserver\u5730\u5740\n    std::string namesrv;\n    // \u5206\u7ec4\u540d\u79f0\n    std::string groupname;\n    // \u5f53\u524d\u4e3b\u9898\n    std::string m_topic;\n    // \u63a5\u6536\u6d88\u606f\u4e8b\u4ef6\u901a\u77e5\u96c6\u5408\n    std::vector<RConsumerListener*> m_listeners;\n    // \u751f\u4ea7\u8005\n    DefaultMQProducer* m_producer;\n    // \u6d88\u8d39\u8005\n    DefaultMQPushConsumer* m_consumer;\n    // MQ\u6d88\u606f\u76d1\u542c\u5668\n    RMessageLisenter* m_msgListener;\n    // \u91ca\u653e\u751f\u4ea7\u8005\n    void releaseProducer();\n    // \u91ca\u653e\u6d88\u8d39\u8005\n    void releaseConsumer();\npublic:\n    //************************************\n    // Method:    RocketClient\n    // FullName:  RocketClient::RocketClient\n    // Access:    public \n    // Returns:   \n    // Description: \u6784\u9020\u521d\u59cb\u5316\n    // Parameter: const std::string & namesrv nameserver\u5730\u5740\uff0c\u5982\uff1aip1:port1;ip2:port2\n    // Parameter: const std::string & groupName \u5206\u7ec4\u540d\u79f0\uff0c\u9ed8\u8ba4\u503c\u4e3acpp-rocketmq\n    //************************************\n    explicit RocketClient(const std::string& namesrv, const std::string& groupName = "cpp-rocketmq");\n    // \u6790\u6784\u91ca\u653e\u8d44\u6e90\n    ~RocketClient();\n    //************************************\n    // Method:    productMsg\n    // FullName:  RocketClient::productMsg\n    // Access:    public \n    // Returns:   void\n    // Description: \u751f\u4ea7\u6d88\u606f\n    // Parameter: const std::string & topic \u4e3b\u9898\n    // Parameter: const std::string & body \u6d88\u606f\u4e3b\u9898\n    // Parameter: SendCallback * cb \u53d1\u9001\u7ed3\u679c\u56de\u8c03\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u503cnullptr\n    //************************************\n    void productMsgAsync(const std::string& topic, const std::string& body, SendCallback* cb = nullptr);\n    //************************************\n    // Method:    productMsgSync\n    // FullName:  RocketClient::productMsgSync\n    // Access:    public \n    // Returns:   rocketmq::SendStatus \u6d88\u606f\u53d1\u9001\u7ed3\u679c\u72b6\u6001\n    // Description: \u540c\u6b65\u751f\u4ea7\u6d88\u606f\n    // Parameter: const std::string & topic \u4e3b\u9898\n    // Parameter: const std::string & body \u6d88\u606f\u4e3b\u4f53\n    //************************************\n    rocketmq::SendStatus productMsgSync(const std::string& topic, const std::string& body);\n    //************************************\n    // Method:    subscribe\n    // FullName:  RocketClient::subscribe\n    // Access:    public \n    // Returns:   bool \u8ba2\u9605\u6210\u529f\u8fd4\u56detrue\n    // Description: \u8ba2\u9605\u4e3b\u9898\n    // \u6ce8\u610f\uff1a\u540c\u4e00\u4e2aRocketClient\u5bf9\u8c61\u53ea\u80fd\u8ba2\u9605\u4e00\u6b21\uff0c\u5f53\u7136\u4f60\u53ef\u4ee5\u53d6\u6d88\u8ba2\u9605\uff0c\u7136\u540e\u91cd\u65b0\u8ba2\u9605\n    // Parameter: const std::string & topic \u4e3b\u9898\n    //************************************\n    bool subscribe(const std::string& topic);\n    //************************************\n    // Method:    unsubscribe\n    // FullName:  RocketClient::unsubscribe\n    // Access:    public \n    // Returns:   void\n    // Description: \u53d6\u6d88\u8ba2\u9605\n    //************************************\n    void unsubscribe();\n    //************************************\n    // Method:    addListener\n    // FullName:  RocketClient::addListener\n    // Access:    public \n    // Returns:   void\n    // Description: \u6dfb\u52a0\u8ba2\u9605\u6d88\u606f\u5904\u7406\u76d1\u542c\u8005\n    // Parameter: RConsumerListener * listener \u76d1\u542c\u8005\u5bf9\u8c61\n    //************************************\n    void addListener(RConsumerListener* listener);\n    //************************************\n    // Method:    removeListener\n    // FullName:  RocketClient::removeListener\n    // Access:    public \n    // Returns:   void\n    // Description: \u79fb\u9664\u8ba2\u9605\u6d88\u606f\u5904\u7406\u76d1\u542c\u8005\n    // Parameter: RConsumerListener * listener \u76d1\u542c\u8005\u5bf9\u8c61\n    //************************************\n    void removeListener(RConsumerListener* listener);\n    //************************************\n    // Method:    removeAllListener\n    // FullName:  RocketClient::removeAllListener\n    // Access:    public \n    // Returns:   void\n    // Description: \u79fb\u9664\u6240\u6709\u8ba2\u9605\u6d88\u606f\u5904\u7406\u76d1\u542c\u8005\n    //************************************\n    void removeAllListener();\n};\n'})}),"\n",(0,o.jsx)(n.h2,{id:"22-\u4e00\u4e2a\u793a\u4f8b",children:"2.2 \u4e00\u4e2a\u793a\u4f8b"}),"\n",(0,o.jsx)(n.h3,{id:"221-include",children:"2.2.1 include"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'#include "RocketClient.h"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"222-\u901a\u8fc7\u914d\u7f6e\u521b\u5efa\u5ba2\u6237\u7aef",children:"2.2.2 \u901a\u8fc7\u914d\u7f6e\u521b\u5efa\u5ba2\u6237\u7aef"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'/**\n * \u5b9a\u4e49\u4e00\u4e2a\u6d4b\u8bd5\u5939\u5177\uff0c\u7528\u4e8e\u5904\u7406MQ\u6d4b\u8bd5\u901a\u7528\u903b\u8f91\n */\nclass RocketTest : public testing::Test {\nprotected:\n    void SetUp() override\n    {\n        //\u83b7\u53d6\u914d\u7f6e\n        NacosClient nacosClient(TEST_NS_ADDR, TEST_NS_NAMESPACE);\n#ifdef LINUX\n        YAML::Node node = nacosClient.getConfig("third-services.yaml");\n#else\n        YAML::Node node = nacosClient.getConfig("./conf/third-services.yaml");\n#endif\n        string namesrv = YamlHelper().getString(&node, "rocket-mq.name-server");\n\n        // \u521b\u5efa\u5ba2\u6237\u7aef\n        this->client = new RocketClient(namesrv);\n    }\n    void TearDown() override\n    {\n        if (client)\n        {\n            client->unsubscribe();\n            delete client;\n            client = nullptr;\n        }\n    }\n    // MQ\u5ba2\u6237\u7aef\u5bf9\u8c61\n    RocketClient* client = nullptr;\n};\n'})}),"\n",(0,o.jsx)(n.h3,{id:"223-\u53d1\u9001\u540c\u6b65\u6d88\u606f",children:"2.2.3 \u53d1\u9001\u540c\u6b65\u6d88\u606f"}),"\n",(0,o.jsxs)(n.p,{children:["\u6ce8: \u6b64\u5904\u7684",(0,o.jsx)(n.code,{children:"TEST_F"}),"\u53ef\u4ee5\u7c7b\u6bd4\u6210java\u7684",(0,o.jsx)(n.code,{children:"@Test"}),"\u6ce8\u89e3"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'// \u6d4b\u8bd5\u540c\u6b65\u53d1\u9001\u6d88\u606f\nTEST_F(RocketTest, SendSync) {\n    std::cout << "===\u6d4b\u8bd5\u540c\u6b65\u53d1\u9001\u6d88\u606f===" << \'\\n\';\n\n    // \u5b9a\u4e49\u6d88\u606f\u5bf9\u8c61\n    auto dto = SampleDTO::createShared();\n    dto->name = "cat";\n    dto->sex = "man";\n    dto->age = 10;\n    dto->id = 3;\n    // \u53d1\u9001\u6d88\u606f\n    RC_PUBLISH_OBJ_MSG_SYNC(res, client, "hello", dto);\n    std::cout << "sync send result: " << res << endl;\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Clip_2024-05-16_14-16-40.png",src:t(63861).A+"",width:"2519",height:"1430"})}),"\n",(0,o.jsx)(n.p,{children:"\u53ef\u4ee5\u770b\u5230\u6d88\u606f"}),"\n",(0,o.jsx)(n.h3,{id:"224-\u53d1\u9001\u5f02\u6b65\u6d88\u606f",children:"2.2.4 \u53d1\u9001\u5f02\u6b65\u6d88\u606f"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'// \u6d4b\u8bd5\u5f02\u6b65\u53d1\u9001\u6d88\u606f\nTEST_F(RocketTest, SendAsync) {\n    std::cout << "===\u6d4b\u8bd5\u5f02\u6b65\u53d1\u9001\u6d88\u606f===" << \'\\n\';\n    // \u521b\u5efa\u53d1\u9001\u6d88\u606f\u56de\u8c03()\n    auto cb = make_shared<RocketClient::RSendCallback>([](SendStatus staus)\n        {\n            std::cout << "[\u6d88\u606f\u53d1\u9001\u5b8c\u6bd5] RSendCallback send status: " << staus << endl;\n        });\n\n    // \u5b9a\u4e49\u6d88\u606f\u5bf9\u8c61\n    auto dto = SampleDTO::createShared();\n    dto->name = "cat";\n    dto->sex = "man";\n    dto->age = 10;\n    \n    // \u53d1\u9001\u6d88\u606f\n    dto->id = 1;\n    RC_PUBLISH_OBJ_MSG_ASYNC(client, "hello", dto, cb.get()); // \u4f7f\u7528\u56de\u8c03\u51fd\u6570\n    dto->id = 2;\n    RC_PUBLISH_OBJ_MSG_ASYNC(client, "hello", dto, nullptr); // \u4e0d\u4f7f\u7528\u56de\u8c03\u51fd\u6570\n\n    // \u4f11\u77201s\u7b49\u5f85\u6d88\u606f\u53d1\u9001\u5b8c\u6210\n    std::this_thread::sleep_for(1s);\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"225-\u8ba2\u9605",children:"2.2.5 \u8ba2\u9605"}),"\n",(0,o.jsx)(n.h4,{id:"2251-\u7f16\u5199\u8ba2\u9605\u7c7b",children:"2.2.5.1 \u7f16\u5199\u8ba2\u9605\u7c7b"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'/**\n * \u5b9a\u4e49\u4e00\u4e2aMQ\u8ba2\u9605\u6d4b\u8bd5\u7c7b\uff0c\u7528\u4e8e\u6f14\u793a\u8ba2\u9605\u6548\u679c\n */\nclass RocketSubscribe : public RocketClient::RConsumerListener {\npublic:\n    // \u63a5\u6536\u5230\u6d88\u606f\u4e2a\u6570\n    int number = 0;\n    // \u6536\u5230\u6d88\u606f\u5904\u7406\u903b\u8f91\n    void receiveMessage(std::string payload) override\n    {\n        // \u63a5\u6536\u6d88\u606f\u6570+1\n        number++;\n        // \u89e3\u6790JSON\u6d88\u606f\u5230DTO\u4e2d\n        RC_RECEIVER_MSG_CONVERT(dto, SampleDTO, payload);\n        // \u6253\u5370\u6d88\u606f\u6570\u636e\n        std::cout << "receiveMessage: " << dto->id.getValue(-1)\n            << "-" << dto->name.getValue("")\n            << "-" << dto->sex.getValue("")\n            << "-" << dto->age.getValue(0)\n            << std::endl;\n    }\n};\n'})}),"\n",(0,o.jsx)(n.h4,{id:"2252-\u8fdb\u884c\u8ba2\u9605",children:"2.2.5.2 \u8fdb\u884c\u8ba2\u9605"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-C++",children:'// \u6d4b\u8bd5\u8ba2\u9605\nTEST_F(RocketTest, Subscribe) {\n    std::cout << "===\u6d4b\u8bd5\u8ba2\u9605===" << \'\\n\';\n\n    // \u521b\u5efa\u8ba2\u9605\u6d88\u606f\u89c2\u5bdf\u8005\n    RocketSubscribe tl;\n\n    // \u5f00\u542f\u8ba2\u9605\n    client->subscribe("hello");\n    // \u6dfb\u52a0\u6d88\u606f\u8ba2\u9605\u89c2\u5bdf\u8005\n    client->addListener(&tl);\n\n    // \u63a5\u6536\u5b8c2\u4e2a\u6d88\u606f\u5c31\u505c\u6b62\u6d4b\u8bd5\u903b\u8f91\n    while (tl.number < 2)\n    {\n        // \u77ed\u6682\u4f11\u7720\n        std::this_thread::sleep_for(10ms);\n    }\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["\u793a\u4f8b: (\u901a\u8fc7\u524d\u7aef\u63a7\u5236\u53f0, \u627e\u5230\u5bf9\u5e94",(0,o.jsx)(n.code,{children:"\u4e3b\u9898"}),"\u53d1\u9001\u6d88\u606f\u5373\u53ef)"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Clip_2024-05-16_14-32-58.png",src:t(76912).A+"",width:"2560",height:"1350"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Clip_2024-05-16_14-33-10.png",src:t(33939).A+"",width:"1730",height:"924"})}),"\n",(0,o.jsx)(n.h1,{id:"\u4e09\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406",children:"\u4e09\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\u6ca1\u6709\u770b\u5230C++\u7684"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(96540);const o={},c=s.createContext(o);function i(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(c.Provider,{value:n},e.children)}},33939:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/Clip_2024-05-16_14-33-10-9eb45e396645b9cf91674b58e0c1d4d3.png"},63861:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/Clip_2024-05-16_14-16-40-131bdca675bae49c73d764609d719ec2.png"},76912:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/Clip_2024-05-16_14-32-58-1ef9633aee2f3eca984cdb46927bc41f.png"}}]);