"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[75740],{15878:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var i=t(90683),s=t(74848),a=t(28453);const o={authors:"Heng_Xin",title:"\u3010C++\u3011\u534f\u7a0b\u4e0eLambda\u5c0f\u7ec6\u8282",date:new Date("2025-06-29T21:19:39.000Z"),tags:["C++"]},r=void 0,c={authorsImageUrls:[void 0]},l=[{value:"1. io_uring API",id:"1-io_uring-api",level:2},{value:"2. iocp API",id:"2-iocp-api",level:2},{value:"3. \u534f\u7a0b\u7684\u5c0f\u7ec6\u8282",id:"3-\u534f\u7a0b\u7684\u5c0f\u7ec6\u8282",level:2}];function d(n){const e={a:"a",code:"code",div:"div",h2:"h2",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"\u4eca\u5929\u5728\u5b8c\u5584 iocp \u4e0e io_uring \u534f\u7a0bapi\u7684\u7edf\u4e00, \u4e3b\u8981\u662f\u8d85\u65f6\u53d6\u6d88\u8fd9\u5757."}),"\n",(0,s.jsxs)(e.div,{className:"markdown-alert markdown-alert-tip",children:["\n",(0,s.jsxs)(e.p,{className:"markdown-alert-title",children:[(0,s.jsx)(e.span,{className:"octicon octicon-tip",style:{"--oct-icon":"url(\"data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' class='octicon octicon-light-bulb mr-2' viewBox='0 0 16 16' version='1.1' width='16' height='16' aria-hidden='true'%3E%3Cpath d='M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z'%3E%3C/path%3E%3C/svg%3E\")"}}),"Tip"]}),"\n",(0,s.jsx)(e.p,{children:"win \u4f60\u662f\u771f\u7684np, \u8bbe\u8ba1\u7684\u4ec0\u4e48\u7834api\u8fd9\u4e48\u96be\u7528... \u771f\u96be\u5bf9\u63a5..."}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8fd9\u6211\u9700\u8981\u4ece\u76d8\u53e4\u5f00\u5929\u8f9f\u5730\u65f6\u5019\u8bf4\u8d77..."}),"\n",(0,s.jsx)(e.h2,{id:"1-io_uring-api",children:"1. io_uring API"}),"\n",(0,s.jsxs)(e.p,{children:["\u54b1\u4eec\u76f4\u63a5\u770b io_uring \u7684\u63a5\u53e3\u8bbe\u8ba1: (",(0,s.jsx)(e.a,{href:"https://github.com/HengXin666/HXTest/blob/main/src/09-os/demo/01-io_uring/02_io_uring_co.cpp",children:"\u5b8c\u6574\u4ee3\u7801"}),")"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:'auto res = co_await AioTask::linkTimeout(\n    ioUring.makeAioTask().prepRead(STDIN_FILENO, buf, 0),\n    ioUring.makeAioTask().prepLinkTimeout(&kt, 0)\n);\n\nif (res.index() == 1) {\n    print::println("\u65f6\u95f4\u5230\u4e86\u54e6~");\n    break;\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["\u80a5\u80a0\u7b80\u5355, \u5c31\u662f\u5c1d\u8bd5\u8bfb\u53d6 ",(0,s.jsx)(e.code,{children:"STDIN_FILENO"})," (\u6807\u51c6\u63a7\u5236\u53f0\u8f93\u5165\u6d41), \u7136\u540e\u5b9a\u65f6 ",(0,s.jsx)(e.code,{children:"kt"})," \u65f6\u95f4."]}),"\n",(0,s.jsx)(e.p,{children:"\u63a5\u53e3\u8bbe\u8ba1\u4e00\u76ee\u4e86\u7136:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"struct AioTask {\n    // ...\n\n    /**\n     * @brief \u5f02\u6b65\u8bfb\u53d6\u6587\u4ef6\n     * @param fd \u6587\u4ef6\u63cf\u8ff0\u7b26\n     * @param buf [out] \u8bfb\u53d6\u5230\u7684\u6570\u636e\n     * @param offset \u6587\u4ef6\u504f\u79fb\u91cf\n     * @return AioTask&& \n     */\n    [[nodiscard]] AioTask&& prepRead(\n        int fd,\n        std::span<char> buf,\n        std::uint64_t offset\n    ) && {\n        ::io_uring_prep_read(_sqe, fd, buf.data(), static_cast<unsigned int>(buf.size()), offset);\n        return std::move(*this);\n    }\n\n    /**\n     * @brief \u521b\u5efa\u672a\u94fe\u63a5\u7684\u8d85\u65f6\u64cd\u4f5c\n     * @param ts \u8d85\u65f6\u65f6\u95f4\n     * @param flags \n     * @return AioTask&& \n     */\n    [[nodiscard]] AioTask&& prepLinkTimeout(\n        struct __kernel_timespec *ts,\n        unsigned int flags\n    ) && {\n        ::io_uring_prep_link_timeout(_sqe, ts, flags);\n        return std::move(*this);\n    }\n\n    [[nodiscard]] inline static auto linkTimeout(AioTask&& lhs, AioTask&& rhs) {\n        lhs._sqe->flags |= IOSQE_IO_LINK;\n        return whenAny(std::move(lhs), std::move(rhs));\n    }\n};\n"})}),"\n",(0,s.jsxs)(e.p,{children:["\u786c\u8981\u8bf4\u4e0dok\u7684, \u5b9e\u9645\u4e0a\u5c31\u662f ",(0,s.jsx)(e.code,{children:"linkTimeout"})," \u7684\u547d\u540d\u5427? ",(0,s.jsx)(e.code,{children:"lhs"})," \u548c ",(0,s.jsx)(e.code,{children:"rhs"})," \u662f\u4e0d\u540c\u7684\u4e1c\u897f..."]}),"\n",(0,s.jsx)(e.p,{children:"\u4f46\u662f windousu..."}),"\n",(0,s.jsx)(e.h2,{id:"2-iocp-api",children:"2. iocp API"}),"\n",(0,s.jsxs)(e.p,{children:["\u5b83\u7684 API, \u9996\u5148\u662f\u540c\u6b65\u7684! \u6216\u8005\u8bf4, \u5e76\u6ca1\u6709\u6240\u8c13\u7684\u6682\u505c/\u7b49\u5f85x\u65f6\u95f4\u540e\u53d6\u6d88\u7684api, \u800c\u662f\u4ec5\u63d0\u4f9b\u4e86\u4e00\u4e2a ",(0,s.jsx)(e.code,{children:"PostQueuedCompletionStatus"})," \u7834\u70c2!"]}),"\n",(0,s.jsxs)(e.p,{children:["\u5b83\u7684\u4f5c\u7528\u5b9e\u9645\u4e0a\u662f\u5411\u76ee\u6807\u5b8c\u6210\u7aef\u53e3\u53d1\u9001\u4e00\u4e2a\u6570\u636e, \u5bfc\u81f4\u5b83\u53ef\u4ee5\u8fd4\u56de\u88ab ",(0,s.jsx)(e.code,{children:"GetQueuedCompletionStatusEx"}),", \u5e76\u4e0d\u662f\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u53d6\u6d88!"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:'/*\nBOOL PostQueuedCompletionStatus(\n    HANDLE       CompletionPort,                // \u76ee\u6807\u5b8c\u6210\u7aef\u53e3\u7684\u53e5\u67c4\n    DWORD        dwNumberOfBytesTransferred,    // \u81ea\u5b9a\u4e49\u7684\u5b57\u8282\u6570, \u53ef\u7528\u4e8e\u4f20\u9012\u4fe1\u606f\n    ULONG_PTR    dwCompletionKey,               // \u81ea\u5b9a\u4e49\u7684\u5b8c\u6210\u952e, \u53ef\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u64cd\u4f5c\u6216I/O\u6e90\n    LPOVERLAPPED lpOverlapped                   // OVERLAPPED\u7ed3\u6784\u7684\u6307\u9488\n    // \u6ce8: GetQueuedCompletionStatusEx \u62ff\u5230\u7684\u662f \u6b64\u5904\u7684 OVERLAPPED\n    // \u4f46\u662f\u4e4b\u524d\u7684 OVERLAPPED \u4e5f\u4f1a\u88ab iocp \u53d6\u51fa! \u56e0\u6b64\u6211\u4eec\u9700\u8981\u81ea\u5df1\u6807\u8bb0\u4e00\u4e0b ... \u5199\u4e2a\u72b6\u6001\u673a ...\n);\n*/\nbool ok = ::PostQueuedCompletionStatus(\n    _self->_iocpHandle,\n    0,\n    static_cast<ULONG_PTR>(State::Cancel),\n    static_cast<::OVERLAPPED*>(_self.get())\n);\nif (!ok) [[unlikely]] {\n    throw std::runtime_error{"PostQueuedCompletionStatus ERROR: " \n        + std::to_string(::GetLastError())};\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["\u5b8c\u5168\u4e0d\u50cf io_uring \u4e00\u6837, \u901a\u8fc7\u94fe\u63a5\u8fdb\u884c\u5b9a\u65f6\u5173\u8054, \u7136\u540e\u5185\u6838\u5e2e\u4f60\u641e\u5b9a\u5185\u90e8\u72b6\u6001 (\u5982\u679c\u5b9a\u65f6\u5230\u4e86, \u90a3\u4e48\u5b9a\u65f6\u4efb\u52a1\u548c\u5173\u8054\u4efb\u52a1\u90fd\u4f1a\u88ab\u63a5\u6536\u5230, ",(0,s.jsx)(e.strong,{children:"\u4f46\u662f\u5173\u8054\u4efb\u52a1\u4f1a\u88ab\u8bbe\u7f6e\u4e3a"})," ",(0,s.jsx)(e.code,{children:"\u5df2\u53d6\u6d88"}),"); \u800c\u4e14 win \u9700\u8981\u6211\u4eec\u7528\u6237\u81ea\u5df1\u533a\u5206 (\u751a\u81f3\u8fd9\u90fd\u4e0d\u4e00\u5b9a\u662f",(0,s.jsx)(e.code,{children:"PostQueuedCompletionStatus"}),"\u7684\u539f\u610f\u671f\u671b\u7528\u6cd5, win\u67b6\u6784\u5e08\u77e5\u9053\u8fd9\u4e9b\u600e\u4e48\u7528\u5417?? \u77e5\u9053\u600e\u4e48\u8fd8\u4e0d\u6539?? \u8fd9\u4e48\u96be\u7528...)"]}),"\n",(0,s.jsx)(e.p,{children:"\u603b\u800c\u8a00\u4e4b, \u6211\u9700\u8981\u91cd\u6784, \u4ee5\u4fbf\u8de8\u5e73\u53f0, \u4ee5\u5c3d\u53ef\u80fd\u7684\u4fdd\u8bc1 API \u4e00\u81f4\u6027."}),"\n",(0,s.jsx)(e.p,{children:"\u6700\u7ec8, \u4ec5\u9700\u8981\u8fd9\u6837\u8c03\u7528:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",metastring:"[g1-IOCP]",children:'auto res = co_await AioTask::linkTimeout(\n    _iocp.makeAioTask().prepRead(hStdin, buf, 0),\n    _iocp.makeAioTask().prepLinkTimeout(makeTimer().sleepFor(5s))\n);\nif (res.index() == 1) {\n    print::print("\u8d85\u65f6\u4e86~");\n    co_await _iocp.makeAioTask().prepClose(hStdin); // win \u9700\u8981\u5173\u95ed\u662f\u56e0\u4e3a\u5b83\u7684\u6d41\u4e5f\u5f88\u62bd\u8c61,\n                                                    // \u5bfc\u81f4\u6211\u4eec\u9700\u8981\u6253\u5f00, \u6240\u4ee5\u624d\u9700\u8981\u5173\u95ed\n    co_return;\n}\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",metastring:"[g1-io_uring]",children:'// \u7ed9\u51fa\u4ee3\u7801, \u65b9\u4fbf\u5bf9\u6bd4\nauto res = co_await AioTask::linkTimeout(\n    ioUring.makeAioTask().prepRead(STDIN_FILENO, buf, 0),\n    ioUring.makeAioTask().prepLinkTimeout(&kt, 0)\n);\n\nif (res.index() == 1) {\n    print::println("\u65f6\u95f4\u5230\u4e86\u54e6~");\n    co_return;\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"\u56e0\u4e3a iocp \u6ca1\u6709\u5185\u6838\u63d0\u4f9b\u5b9a\u65f6, \u6240\u4ee5\u6211\u9700\u8981\u624b\u6495\u4e00\u4e2a \u7ea2\u9ed1\u6811\u534f\u7a0b\u5b9a\u65f6\u5668 ..."}),"\n",(0,s.jsx)(e.p,{children:"\u7136\u800c\u56e0\u4e3a iocp api \u8fd8\u9700\u8981\u5bf9\u5e94\u7684 iocp \u53e5\u67c4\u624d\u53ef\u4ee5\u77e5\u9053\u662f\u53d6\u6d88\u8ab0, \u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u8981\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u534f\u7a0b\u53e5\u67c4, \u4f46\u662f\u4e0d\u80fd\u662f\u4f20\u53c2, \u53ea\u80fd\u662f\u65b9\u6cd5\u5185\u90e8\u79fb\u5f62\u6362\u5f71, \u52a0\u4e0a\u6211\u81ea\u4ee5\u4e3a\u662f\u5199\u7684\u4e00\u4e9b && & \u7684\u4e1c\u897f, \u4ee5\u53ca\u751f\u547d\u5468\u671f\u7684\u8003\u8651, \u5c31\u76f8\u5bf9\u5199\u5f97\u6bd4\u8f83\u590d\u6742:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:'struct AioTask : public ::OVERLAPPED {\n    struct _AioTimeoutTask {\n        _AioTimeoutTask(AioTask&& self, TimerLoop::TimerAwaiter&& timerTask)\n            : _self{std::make_unique<AioTask>(std::move(self))}\n            , _timerTask{std::move(timerTask)}\n        {}\n\n        _AioTimeoutTask(_AioTimeoutTask&&) = default;\n        _AioTimeoutTask& operator=(_AioTimeoutTask&&) noexcept = default;\n\n        Task<> co() {\n            co_await _timerTask;\n            /*\nBOOL PostQueuedCompletionStatus(\n    HANDLE       CompletionPort,                // \u76ee\u6807\u5b8c\u6210\u7aef\u53e3\u7684\u53e5\u67c4\n    DWORD        dwNumberOfBytesTransferred,    // \u81ea\u5b9a\u4e49\u7684\u5b57\u8282\u6570, \u53ef\u7528\u4e8e\u4f20\u9012\u4fe1\u606f\n    ULONG_PTR    dwCompletionKey,               // \u81ea\u5b9a\u4e49\u7684\u5b8c\u6210\u952e, \u53ef\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u64cd\u4f5c\u6216I/O\u6e90\n    LPOVERLAPPED lpOverlapped                   // OVERLAPPED\u7ed3\u6784\u7684\u6307\u9488\n        // \u6ce8: GetQueuedCompletionStatusEx \u62ff\u5230\u7684\u662f \u6b64\u5904\u7684 OVERLAPPED\n        // \u4f46\u662f\u4e4b\u524d\u7684 OVERLAPPED \u4e5f\u4f1a\u88ab iocp \u53d6\u51fa! \u56e0\u6b64\u6211\u4eec\u9700\u8981\u81ea\u5df1\u6807\u8bb0\u4e00\u4e0b ... \u5199\u4e2a\u72b6\u6001\u673a ...\n);\n            */\n            bool ok = ::PostQueuedCompletionStatus(\n                _self->_iocpHandle,\n                0,\n                static_cast<ULONG_PTR>(State::Cancel),\n                static_cast<::OVERLAPPED*>(_self.get())\n            );\n            if (!ok) [[unlikely]] {\n                throw std::runtime_error{"PostQueuedCompletionStatus ERROR: " \n                    + std::to_string(::GetLastError())};\n            }\n            co_return;\n        }\n    private:\n        friend AioTask;\n        std::unique_ptr<AioTask> _self; // \u4e0d\u80fd\u4f7f\u7528 AioTask, \u56e0\u4e3a\u6b64\u65f6 AioTask \u8fd8\u4e0d\u5b8c\u6574, \n                                        // \u4f46\u662f\u53ef\u4ee5\u4f7f\u7528 std::unique_ptr<AioTask>; \u5947\u602a\u5427?\n                                        // \u539f\u56e0\u662f unique_ptr \u5185\u90e8\u662f\u4f7f\u7528\u6307\u9488\u7684, \u6240\u4ee5\u6ca1\u95ee\u9898!\n        TimerLoop::TimerAwaiter _timerTask;\n    };\n\n    /**\n     * @brief \u5f02\u6b65\u8bfb\u53d6\u6587\u4ef6\n     * @param fd \u6587\u4ef6\u53e5\u67c4\n     * @param buf [out] \u8bfb\u53d6\u5230\u7684\u6570\u636e\n     * @param offset \u6587\u4ef6\u504f\u79fb\u91cf\n     * @return AioTask&& \n     */\n    [[nodiscard]] AioTask&& prepRead(\n        HANDLE fd,\n        std::span<char> buf,\n        std::uint64_t offset\n    ) && {\n        // ::io_uring_prep_read(_sqe, fd, buf.data(), static_cast<unsigned int>(buf.size()), offset);\n        /*\nBOOL ReadFile(\n  HANDLE       hFile,                // \u6587\u4ef6\u53e5\u67c4\uff08\u53ef\u4e3a\u6587\u4ef6\u3001\u7ba1\u9053\u3001\u4e32\u53e3\u3001Socket \u7b49\uff09\n  LPVOID       lpBuffer,            // \u6570\u636e\u8bfb\u5165\u7684\u7f13\u51b2\u533a\u6307\u9488\uff08\u4f60\u51c6\u5907\u597d\u7684\u5185\u5b58\uff09\n  DWORD        nNumberOfBytesToRead,// \u60f3\u8981\u8bfb\u53d6\u7684\u5b57\u8282\u6570\n  LPDWORD      lpNumberOfBytesRead, // \u5b9e\u9645\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff08\u540c\u6b65\u65f6\u975e NULL, \u5f02\u6b65\u65f6\u8bbe\u4e3a NULL\uff09\n  LPOVERLAPPED lpOverlapped         // OVERLAPPED \u7ed3\u6784\u6307\u9488\uff08\u5f02\u6b65\u65f6\u5fc5\u586b, \u540c\u6b65\u65f6\u4e3a NULL\uff09\n);\n        */\n        /*\ntypedef struct _OVERLAPPED {\n  ULONG_PTR Internal;\n  ULONG_PTR InternalHigh;\n  union {\n    struct {\n      DWORD Offset;      // \u4f4e 32 \u4f4d\u6587\u4ef6\u504f\u79fb\u91cf\n      DWORD OffsetHigh;  // \u9ad8 32 \u4f4d\u6587\u4ef6\u504f\u79fb\u91cf\n                         // \u4e24\u4e2a\u7ec4\u6210 64 \u4e3a\u7684\u504f\u79fb\u91cf, \u7834win\u4e3a\u4e86\u8fdc\u53e4\u517c\u5bb9, \u5c31\u8fd9\u6837\u641e\u4e86...\n    };\n    PVOID Pointer;\n  };\n  HANDLE    hEvent;\n} OVERLAPPED, *LPOVERLAPPED;\n        */\n        associateHandle(fd);\n        // \u8bbe\u7f6e\u504f\u79fb\u91cf\n        Offset = static_cast<DWORD>(offset & 0xFFFFFFFF);\n        OffsetHigh = static_cast<DWORD>((offset >> 32) & 0xFFFFFFFF);\n        bool ok = ::ReadFile(\n            fd,\n            buf.data(),\n            static_cast<DWORD>(buf.size()),\n            nullptr,\n            static_cast<::OVERLAPPED*>(this)\n        );\n        if (!ok && ::GetLastError() != ERROR_IO_PENDING) [[unlikely]] {\n            throw std::runtime_error{"ReadFile ERROR: " + std::to_string(::GetLastError())};\n        }\n        return std::move(*this);\n    }\n\n    /**\n     * @brief \u521b\u5efa\u672a\u94fe\u63a5\u7684\u8d85\u65f6\u64cd\u4f5c\n     * @param ts \u8d85\u65f6\u65f6\u95f4\n     * @param flags \n     * @return AioTask&& \n     */\n    [[nodiscard]] _AioTimeoutTask prepLinkTimeout(\n        TimerLoop::TimerAwaiter&& timerTask\n    ) && {\n        // ::io_uring_prep_link_timeout(_sqe, ts, flags);\n        return {std::move(*this), std::move(timerTask)};\n    }\n\n    [[nodiscard]] inline static auto linkTimeout(\n        AioTask&& task, \n        _AioTimeoutTask&& timeoutTask\n    ) {\n        // \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u662f\u6355\u83b7? \u96be\u9053\u662f\u56e0\u4e3a\u5bf9\u4e8e\u534f\u7a0b\u51fd\u6570, \u4f60\u7684\u7c7b\u6355\u83b7\u4e0d\u4f1a\u7b97\u5165\u534f\u7a0b\u751f\u547d\u5468\u671f?!\n        // \u5bf9\u7684\u5bf9\u7684, \u5c31\u662f\u8fd9\u6837! \u8fd9\u4e2a []()() \u5f97\u5230\u7684\u662f\u534f\u7a0b\u5bf9\u8c61\u4e86, \u4ec5\u6709\u4f20\u53c2\u7684\u4f1a\u7b97\u5165\u751f\u547d\u5468\u671f\n        // \u4f46\u662f\u6355\u83b7\u7684\u8bdd, \u4f5c\u4e3a\u7c7b\u7684\u6210\u5458, \u5728 []() \u65f6\u5019\u662f\u6709\u6548\u7684\n        // \u4f46\u662f []()() \u662f\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u5bf9\u8c61, \u7136\u540e return \u4e86, \u56e0\u6b64 [...]() \u6355\u83b7\u7684\u5c31\u6790\u6784\u4e86\n        // \u6240\u4ee5\u4f1a\u60ac\u6302\u5f15\u7528 (ub), \u5bfc\u81f4\u91ce\u6307\u9488 qwq...\n#if 0\n        return [_task = std::move(task), \n                _timeoutTask = std::move(timeoutTask)]() mutable \n        -> Task<HX::AwaiterReturnValue<decltype(whenAny(std::move(task), timeoutTask.co()))>> {\n            _timeoutTask._self->_iocpHandle = _task._iocpHandle; // \u51fa\u9519\n            co_return co_await whenAny(std::move(_task), _timeoutTask.co());\n        }();\n#else\n        return [](AioTask&& _task,  _AioTimeoutTask&& _timeoutTask) \n        -> Task<HX::AwaiterReturnValue<decltype(whenAny(std::move(task), timeoutTask.co()))>> {\n            _timeoutTask._self->_iocpHandle = _task._iocpHandle;\n            co_return co_await whenAny(std::move(_task), _timeoutTask.co());\n        }(std::move(task), std::move(timeoutTask));\n#endif\n    }\n};\n'})}),"\n",(0,s.jsx)(e.h2,{id:"3-\u534f\u7a0b\u7684\u5c0f\u7ec6\u8282",children:"3. \u534f\u7a0b\u7684\u5c0f\u7ec6\u8282"}),"\n",(0,s.jsx)(e.p,{children:"\u4e0a\u9762\u5df2\u7ecf\u662f\u5b8c\u6574\u7684\u6e90\u7801\u7684, \u4e5f\u662f\u672c\u6b21\u95ee\u9898\u51fa\u73b0\u7684\u5730\u65b9:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",metastring:"[g2-BUG: \u4ec5\u6355\u83b7]",children:"[[nodiscard]] inline static auto linkTimeout(\n    AioTask&& task, \n    _AioTimeoutTask&& timeoutTask\n) {\n    return [_task = std::move(task), \n            _timeoutTask = std::move(timeoutTask)]() mutable \n    -> Task<HX::AwaiterReturnValue<decltype(whenAny(std::move(task), timeoutTask.co()))>> {\n        _timeoutTask._self->_iocpHandle = _task._iocpHandle; // \u8bbf\u95ee\u51fa\u9519 (\u91ce\u6307\u9488)\n        co_return co_await whenAny(std::move(_task), _timeoutTask.co());\n    }();\n}\n\nauto res = co_await linkTimeout(...);\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",metastring:"[g2-ok: \u5ef6\u957f\u751f\u547d\u5468\u671f]",children:"[[nodiscard]] inline static auto linkTimeout(\n    AioTask&& task, \n    _AioTimeoutTask&& timeoutTask\n) {\n    return [_task = std::move(task), \n            _timeoutTask = std::move(timeoutTask)]() mutable \n    -> Task<HX::AwaiterReturnValue<decltype(whenAny(std::move(task), timeoutTask.co()))>> {\n        _timeoutTask._self->_iocpHandle = _task._iocpHandle;\n        co_return co_await whenAny(std::move(_task), _timeoutTask.co());\n    };\n}\n\nauto res = co_await linkTimeout(...)();\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",metastring:"[g2-ok: \u901a\u8fc7\u4f20\u53c2]",children:"[[nodiscard]] inline static auto linkTimeout(\n    AioTask&& task, \n    _AioTimeoutTask&& timeoutTask\n) {\n    return [](AioTask&& _task,  _AioTimeoutTask&& _timeoutTask) \n    -> Task<HX::AwaiterReturnValue<decltype(whenAny(std::move(task), timeoutTask.co()))>> {\n        _timeoutTask._self->_iocpHandle = _task._iocpHandle;\n        co_return co_await whenAny(std::move(_task), _timeoutTask.co());\n    }(std::move(task), std::move(timeoutTask));\n}\n\nauto res = co_await linkTimeout(...);\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u662f\u6355\u83b7?"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u56e0\u4e3a ",(0,s.jsx)(e.code,{children:"[]()()"})," \u5f97\u5230\u7684\u662f\u534f\u7a0b\u5bf9\u8c61\u4e86, \u4ec5\u6709\u4f20\u53c2\u7684\u4f1a\u7b97\u5165\u751f\u547d\u5468\u671f"]}),"\n",(0,s.jsxs)(e.li,{children:["\u4f46\u662f\u6355\u83b7\u7684\u8bdd, \u4f5c\u4e3a\u7c7b\u7684\u6210\u5458, \u5728 ",(0,s.jsx)(e.code,{children:"[]()"})," \u65f6\u5019\u662f\u6709\u6548\u7684"]}),"\n",(0,s.jsxs)(e.li,{children:["\u4f46\u662f ",(0,s.jsx)(e.code,{children:"[]()()"})," \u662f\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u5bf9\u8c61, \u7136\u540e ",(0,s.jsx)(e.code,{children:"return"})," \u4e86, \u56e0\u6b64 ",(0,s.jsx)(e.code,{children:"[...]()"})," \u6355\u83b7\u7684\u5c31\u6790\u6784\u4e86"]}),"\n",(0,s.jsx)(e.li,{children:"\u6240\u4ee5\u4f1a\u60ac\u6302\u5f15\u7528 (ub), \u5bfc\u81f4\u91ce\u6307\u9488 qwq..."}),"\n"]}),"\n",(0,s.jsxs)(e.div,{className:"markdown-alert markdown-alert-note",children:["\n",(0,s.jsxs)(e.p,{className:"markdown-alert-title",children:[(0,s.jsx)(e.span,{className:"octicon octicon-note",style:{"--oct-icon":"url(\"data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' class='octicon octicon-info mr-2' viewBox='0 0 16 16' version='1.1' width='16' height='16' aria-hidden='true'%3E%3Cpath d='M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z'%3E%3C/path%3E%3C/svg%3E\")"}}),"Note"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.a,{href:"https://cppreference.com/w/cpp/language/coroutines.html",children:"Coroutines (C++20) | cppreference"})," \u6709\u63cf\u8ff0:"]}),"\n",(0,s.jsx)(e.p,{children:"copies all function parameters to the coroutine state: by-value parameters are moved or copied, by-reference parameters remain references (thus, may become dangling, if the coroutine is resumed after the lifetime of referred object ends \u2014 see below for examples)."}),"\n",(0,s.jsx)(e.p,{children:"\u5c06\u6240\u6709\u51fd\u6570\u53c2\u6570\u590d\u5236\u5230\u534f\u7a0b\u72b6\u6001: \u6309\u503c\u53c2\u6570\u88ab\u79fb\u52a8\u6216\u590d\u5236, \u6309\u5f15\u7528\u53c2\u6570\u4ecd\u7136\u662f\u5f15\u7528 (\u56e0\u6b64, \u5982\u679c\u5728\u5f15\u7528\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u540e\u6062\u590d\u534f\u7a0b, \u5219\u53ef\u80fd\u4f1a\u53d8\u5f97\u60ac\u7a7a - \u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b)."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"void bad3() {\n    auto h = [i = 0]() -> coroutine { // \u4e00\u4e2a\u4e5f\u662f\u534f\u7a0b\u7684 lambda\n        std::cout << i;\n        co_return;\n    }(); // \u7acb\u5373\u8c03\u7528\n    // lambda\u88ab\u6467\u6bc1\n    h.resume(); // \u4f7f\u7528 (\u533f\u540dlambda\u7c7b\u578b)::i \u5728\u91ca\u653e\u4e4b\u540e\n    h.destroy();\n}\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.div,{className:"markdown-alert markdown-alert-tip",children:["\n",(0,s.jsxs)(e.p,{className:"markdown-alert-title",children:[(0,s.jsx)(e.span,{className:"octicon octicon-tip",style:{"--oct-icon":"url(\"data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' class='octicon octicon-light-bulb mr-2' viewBox='0 0 16 16' version='1.1' width='16' height='16' aria-hidden='true'%3E%3Cpath d='M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z'%3E%3C/path%3E%3C/svg%3E\")"}}),"Tip"]}),"\n",(0,s.jsx)(e.p,{children:"\u867d\u7136\u6587\u5b57\u6ca1\u6709\u660e\u786e\u8bf4\u660e\u8fd9\u79cd\u60c5\u51b5, \u53ea\u662f\u8bf4\u660e\u4e86\u6838\u5fc3\u539f\u56e0; \u4f46\u662f\u4f8b\u5b50\u5df2\u7ecf\u660e\u786e\u7ed9\u51fa\u6765\u4e86, \u8fd8\u662f\u5f88\u660e\u786e\u7684!"}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>r});var i=t(96540);const s={},a=i.createContext(s);function o(n){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),i.createElement(a.Provider,{value:e},n.children)}},90683:n=>{n.exports=JSON.parse('{"permalink":"/HXLoLi/blog/2025/06/29/01-\u534f\u7a0b\u5c0f\u7ec6\u8282","editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/blog/2025/06/29/01-\u534f\u7a0b\u5c0f\u7ec6\u8282.md","source":"@site/blog/2025/06/29/01-\u534f\u7a0b\u5c0f\u7ec6\u8282.md","title":"\u3010C++\u3011\u534f\u7a0b\u4e0eLambda\u5c0f\u7ec6\u8282","description":"\u4eca\u5929\u5728\u5b8c\u5584 iocp \u4e0e io_uring \u534f\u7a0bapi\u7684\u7edf\u4e00, \u4e3b\u8981\u662f\u8d85\u65f6\u53d6\u6d88\u8fd9\u5757.","date":"2025-06-29T21:19:39.000Z","tags":[{"inline":false,"label":"C++","permalink":"/HXLoLi/blog/tags/C++","description":"C++\u5c0f\u77e5\u8bc6"}],"readingTime":10.22,"hasTruncateMarker":true,"authors":[{"name":"Heng_Xin","title":"\u3053\u3053\u304b\u3089\u5148\u306f\u4e00\u65b9\u901a\u884c\u3060!","url":"https://github.com/HengXin666","email":"282000500@qq.com","socials":{"github":"https://github.com/HengXin666","bilibili":"https://space.bilibili.com/478917126"},"imageURL":"https://avatars.githubusercontent.com/u/103022267","key":"Heng_Xin","page":null}],"frontMatter":{"authors":"Heng_Xin","title":"\u3010C++\u3011\u534f\u7a0b\u4e0eLambda\u5c0f\u7ec6\u8282","date":"2025-06-29T21:19:39.000Z","tags":["C++"]},"unlisted":false,"lastUpdatedAt":1751210140000,"lastUpdatedBy":"Heng_Xin_666","nextItem":{"title":"Linux\u5e38\u89c1Hook\u65b9\u6cd5","permalink":"/HXLoLi/blog/2025/06/24/01-Linux\u5e38\u89c1Hook\u65b9\u6cd5"}}')}}]);