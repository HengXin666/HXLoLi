"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[1935],{28453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>l});var i=t(96540);const r={},s=i.createContext(r);function o(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),i.createElement(s.Provider,{value:e},n.children)}},68431:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5e38\u7528\u6280\u5de7/\u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57/index","title":"\u56de\u6587\u6570\u5b57","description":"1. \u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57","source":"@site/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/014-\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/006-\u5e38\u7528\u6280\u5de7/002-\u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57/index.md","sourceDirName":"001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/014-\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/006-\u5e38\u7528\u6280\u5de7/002-\u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57","slug":"/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5e38\u7528\u6280\u5de7/\u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57/","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5e38\u7528\u6280\u5de7/\u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/014-\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/006-\u5e38\u7528\u6280\u5de7/002-\u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u5bf9\u89d2\u7ebf\u679a\u4e3e","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5e38\u7528\u6280\u5de7/\u5bf9\u89d2\u7ebf\u679a\u4e3e/"},"next":{"title":"\u8d28\u6570","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u6570\u5b66/\u8d28\u6570/"}}');var r=t(74848),s=t(28453);const o={},l="\u56de\u6587\u6570\u5b57",a={},c=[{value:"1. \u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57",id:"1-\u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"\u56de\u6587\u6570\u5b57",children:"\u56de\u6587\u6570\u5b57"})}),"\n",(0,r.jsx)(e.h2,{id:"1-\u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57",children:"1. \u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://leetcode.cn/problems/prime-palindrome/",children:"866. \u56de\u6587\u8d28\u6570"})}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-C++",children:"class Solution {\n    using ll = long long;\npublic:\n    int primePalindrome(int n) {\n        auto isFk = [](int x) {\n            for (int i = 2; i * i <= x; ++i)\n                if (!(x % i))\n                    return false;\n            return x >= 2;\n        };\n        auto isSb = [](int x) -> bool {\n            auto str = to_string(x);\n            int l = 0, r = str.size() - 1;\n            while (l < r)\n                if (str[l++] ^ str[r--])\n                    return false;\n            return true;\n        };\n        auto nextSb = [&](int x) {\n            auto str = to_string(x);\n            while (1) {\n                // \u56e0\u4e3a\u9700\u8981\u6bd4 x \u66f4\u5927\u7684\u56de\u6587\u6570\u5b57\n                // \u663e\u7136\u53f3\u8fb9\u5bf9\u79f0\u5230\u5de6\u8fb9\n                // \u5c31\u53ef\u4ee5\u6784\u9020 \u51fa\u53ef\u80fd\u7684 >= x \u7684\u56de\u6587\u6570\u5b57\n                // \u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u5faa\u73af: \u7136\u540e\u4fdd\u8bc1 nx >= x\n                // \u4f8b\u5982\u8f93\u5165: 91999\n                // -> 91919 (\u5bf9\u79f0) -> if = false\n                // -> 92019 (\u8fdb\u4f4d)\n                // -> 92029 (\u5bf9\u79f0) -> 92029 >= 91999\n                for (int i = 0; i < str.size() / 2; ++i)\n                    str[str.size() - 1 - i] = str[i];\n\n                if (int nx = stoi(str); nx >= x)\n                    return nx;\n\n                int j = str.size() / 2 - !(str.size() & 1);\n                while (str[j] == '9') {\n                    str[j--] = '0';\n                }\n                ++str[j]; // \u4e0d\u53ef\u80fd\u8d8a\u754c, \u56e0\u4e3a 9999 \u7684\u65f6\u5019\n                          // \u5df2\u7ecf\u4ece nx >= x \u9000\u51fa\u4e86\n            }\n        };\n        if (isSb(n) && isFk(n))\n            return n;\n        while (1) {\n            if (isFk(n = nextSb(n)))\n                return n;\n            ++n;\n        }\n        return -1;\n    }\n};\n"})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}}}]);