"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[60743],{24234:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/\u8ba4\u8bc1\u6388\u6743\u3001ELK\u3001EE/index","title":"\u4e00\u3001\u8ba4\u8bc1\u6388\u6743","description":"1.1 RBAC\u6a21\u578b\u6838\u5fc3\u6570\u636e\u8868","source":"@site/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/006-\u8ba4\u8bc1\u6388\u6743\u3001ELK\u3001EE/index.md","sourceDirName":"002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/006-\u8ba4\u8bc1\u6388\u6743\u3001ELK\u3001EE","slug":"/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/\u8ba4\u8bc1\u6388\u6743\u3001ELK\u3001EE/","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/\u8ba4\u8bc1\u6388\u6743\u3001ELK\u3001EE/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/006-\u8ba4\u8bc1\u6388\u6743\u3001ELK\u3001EE/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Websocket\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/Websocket\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406/"},"next":{"title":"MongoDB\u3001Redis\u3001C++\u8de8\u5e73\u53f0\u7f16\u8bd1","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/MongoDB\u3001Redis\u3001C++\u8de8\u5e73\u53f0\u7f16\u8bd1/"}}');var a=t(74848),r=t(28453);const i={},d="\u4e00\u3001\u8ba4\u8bc1\u6388\u6743",o={},l=[{value:"1.1 RBAC\u6a21\u578b\u6838\u5fc3\u6570\u636e\u8868",id:"11-rbac\u6a21\u578b\u6838\u5fc3\u6570\u636e\u8868",level:2},{value:"1.2 C++ \u4f7f\u7528\u6743\u9650\u9a8c\u8bc1",id:"12-c-\u4f7f\u7528\u6743\u9650\u9a8c\u8bc1",level:2},{value:"1.2.1 \u5f00\u542f\u51ed\u8bc1\u68c0\u67e5",id:"121-\u5f00\u542f\u51ed\u8bc1\u68c0\u67e5",level:3},{value:"1.2.2 \u751f\u6210\u51ed\u8bc1",id:"122-\u751f\u6210\u51ed\u8bc1",level:3},{value:"1.2.3 Swagger \u4f20\u9012\u51ed\u8bc1",id:"123-swagger-\u4f20\u9012\u51ed\u8bc1",level:3},{value:"1.2.4 \u6388\u6743\u6570\u636e\u5b9e\u4f53 &amp; \u6388\u6743\u5904\u7406\u5668",id:"124-\u6388\u6743\u6570\u636e\u5b9e\u4f53--\u6388\u6743\u5904\u7406\u5668",level:3}];function c(n){const e={a:"a",blockquote:"blockquote",code:"code",div:"div",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"\u4e00\u8ba4\u8bc1\u6388\u6743",children:"\u4e00\u3001\u8ba4\u8bc1\u6388\u6743"})}),"\n",(0,a.jsx)(e.h2,{id:"11-rbac\u6a21\u578b\u6838\u5fc3\u6570\u636e\u8868",children:"1.1 RBAC\u6a21\u578b\u6838\u5fc3\u6570\u636e\u8868"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsx)(e.tr,{children:(0,a.jsx)(e.th,{style:{textAlign:"center"},children:"##container##"})})}),(0,a.jsx)(e.tbody,{children:(0,a.jsx)(e.tr,{children:(0,a.jsx)(e.td,{style:{textAlign:"center"},children:(0,a.jsx)(e.img,{alt:"Clip_2024-05-16_16-35-35.png ##w800##",src:t(45949).A+"",width:"1729",height:"310"})})})})]}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsxs)(e.p,{children:["RBAC\u5168\u79f0\u4e3a ",(0,a.jsx)(e.strong,{children:"\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\u6a21\u578b(Role-based access control)"}),"\uff0c\u5728\u8be5\u6a21\u578b\u4e2d\uff0c\u901a\u8fc7\u8ba9\u6743\u9650\u4e0e\u89d2\u8272\u5173\u8054\u6765\u5b9e\u73b0\u6388\u6743\uff0c\u7ed9\u7528\u6237\u5206\u914d\u4e00\u7cfb\u5217\u7684\u89d2\u8272\u6765\u8ba9\u6ce8\u518c\u7528\u6237\u5f97\u5230\u8fd9\u4e9b\u89d2\u8272\u5bf9\u5e94\u7684\u6743\u9650\uff0c\u4f7f\u7cfb\u7edf\u6743\u9650\u5206\u914d\u66f4\u52a0\u65b9\u4fbf\u3002"]}),"\n"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\u76f8\u5173\u94fe\u63a5: ",(0,a.jsx)(e.a,{href:"https://blog.csdn.net/cx776474961/article/details/106537758",children:"RBAC\u6a21\u578b\u7684\u5206\u6790\u4e0e\u5b9e\u73b0"})]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"12-c-\u4f7f\u7528\u6743\u9650\u9a8c\u8bc1",children:"1.2 C++ \u4f7f\u7528\u6743\u9650\u9a8c\u8bc1"}),"\n",(0,a.jsxs)(e.div,{className:"markdown-alert markdown-alert-tip",children:["\n",(0,a.jsxs)(e.p,{className:"markdown-alert-title",children:[(0,a.jsx)(e.span,{className:"octicon octicon-tip",style:{"--oct-icon":"url(\"data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' class='octicon octicon-light-bulb mr-2' viewBox='0 0 16 16' version='1.1' width='16' height='16' aria-hidden='true'%3E%3Cpath d='M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z'%3E%3C/path%3E%3C/svg%3E\")"}}),"Tip"]}),"\n",(0,a.jsx)(e.p,{children:"\u5b66\u4e60C++\u7684\u6709\u798f\u4e86, \u4f60\u53ea\u9700\u8981: C++\u670d\u52a1\u5668\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u767b\u5f55\u5373\u53ef\uff0c\u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u8d1f\u8f7d\u4fe1\u606f\u83b7\u53d6\u5230\u5b83\u7528\u6237ID\u548c\u6743\u9650\u5217\u8868\u3002"}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"121-\u5f00\u542f\u51ed\u8bc1\u68c0\u67e5",children:"1.2.1 \u5f00\u542f\u51ed\u8bc1\u68c0\u67e5"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.code,{children:"zero-one-08mes\\mes-cpp\\arch-demo\\controller\\SystemInterceptor.cpp"})}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C++",children:"#ifndef CHECK_TOKEN\n// \u5f00\u542f\u51ed\u8bc1\u68c0\u67e5\uff0c\u89e3\u5f00\u4e0b\u4e00\u884c\u6ce8\u91ca\u5373\u53ef\n//#define CHECK_TOKEN\n#endif\n"})}),"\n",(0,a.jsx)(e.h3,{id:"122-\u751f\u6210\u51ed\u8bc1",children:"1.2.2 \u751f\u6210\u51ed\u8bc1"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.code,{children:"zero-one-08mes\\mes-cpp\\arch-tests\\tests\\jwt\\test-jwt.cpp"})}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C++",children:'#define TEST_CREATE_PAYLOAD() \\\nPayloadDTO p; \\\np.getAuthorities().push_back("SUPER_ADMIN"); \\\np.setUsername(u8"roumiou"); \\\np.setId("1"); \\\np.setExp(3600 * 30)\n\nTEST(JwtTest, TestRsa) {\n    TEST_CREATE_PAYLOAD();\n    std::string token = JWTUtil::generateTokenByRsa(p, RSA_PRI_KEY->c_str());\n    ASSERT_NE(token, "");\n    std::cout << "RSA-TOKEN:\\n\\n" << token << std::endl;\n    auto pv = JWTUtil::verifyTokenByRsa(token, RSA_PUB_KEY->c_str());\n    ASSERT_EQ(pv.getCode(), PayloadCode::SUCCESS);\n    std::cout << "\\nusername:" << pv.getUsername() << std::endl;\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"123-swagger-\u4f20\u9012\u51ed\u8bc1",children:"1.2.3 Swagger \u4f20\u9012\u51ed\u8bc1"}),"\n",(0,a.jsx)(e.p,{children:"\u5728\u5b9a\u4e49\u7aef\u70b9\u7684\u65f6\u5019,"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsxs)(e.p,{children:["\u63a5\u53e3\u63cf\u8ff0\u52a0\u4e0a",(0,a.jsx)(e.code,{children:"API_DEF_ADD_AUTH();"}),", \u8fd9\u6837\u5728",(0,a.jsx)(e.code,{children:"Swagger UI"}),"\u754c\u9762\u624d\u53ef\u4ee5\u770b\u5230\u90a3\u628a",(0,a.jsx)(e.code,{children:"\u9501"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsxs)(e.p,{children:["\u5b9a\u4e49\u5904\u7406\u63a5\u53e3\u7684\u65f6\u5019, \u5c31\u8981\u52a0\u4e0a",(0,a.jsx)(e.code,{children:"API_HANDLER_AUTH_PARAME"}),", \u8fd9\u4e2a\u5b8f\u4f1a\u58f0\u660e",(0,a.jsx)(e.code,{children:"authObject"}),", \u6700\u7ec8\u8fd4\u56de",(0,a.jsx)(e.code,{children:"API_HANDLER_RESP_VO(execQuerySample(userQuery, authObject->getPayload()));"}),"\u7ed9\u524d\u7aef"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C++",children:'/**\n * \u793a\u4f8b\u63a7\u5236\u5668\uff0c\u6f14\u793a\u57fa\u7840\u63a5\u53e3\u7684\u4f7f\u7528\n */\nclass SampleController : public oatpp::web::server::api::ApiController // 1 \u7ee7\u627f\u63a7\u5236\u5668\n{\n    // 2 \u5b9a\u4e49\u63a7\u5236\u5668\u8bbf\u95ee\u5165\u53e3\n    API_ACCESS_DECLARE(SampleController);\n    // 3 \u5b9a\u4e49\u63a5\u53e3\npublic:\n    // 3.1 \u5b9a\u4e49\u67e5\u8be2\u63a5\u53e3\u63cf\u8ff0\n    ENDPOINT_INFO(querySample) {\n        // \u5b9a\u4e49\u63a5\u53e3\u6807\u9898\n        API_DEF_ADD_TITLE(ZH_WORDS_GETTER("sample.get.summary"));\n        // \u5b9a\u4e49\u9ed8\u8ba4\u6388\u6743\u53c2\u6570\uff08\u53ef\u9009\u5b9a\u4e49\uff0c\u5982\u679c\u5b9a\u4e49\u4e86\uff0c\u4e0b\u9762ENDPOINT\u91cc\u9762\u9700\u8981\u52a0\u5165API_HANDLER_AUTH_PARAME\uff09\n        API_DEF_ADD_AUTH();\n        // \u5b9a\u4e49\u54cd\u5e94\u53c2\u6570\u683c\u5f0f\n        API_DEF_ADD_RSP_JSON_WRAPPER(SamplePageJsonVO);\n        // \u5b9a\u4e49\u5206\u9875\u67e5\u8be2\u53c2\u6570\u63cf\u8ff0\n        API_DEF_ADD_PAGE_PARAMS();\n        // \u5b9a\u4e49\u5176\u4ed6\u67e5\u8be2\u53c2\u6570\u63cf\u8ff0\n        API_DEF_ADD_QUERY_PARAMS(String, "name", ZH_WORDS_GETTER("sample.field.name"), "li ming", false);\n        API_DEF_ADD_QUERY_PARAMS(String, "sex", ZH_WORDS_GETTER("sample.field.sex"), "N", false);\n    }\n    // 3.2 \u5b9a\u4e49\u67e5\u8be2\u63a5\u53e3\u5904\u7406\n    ENDPOINT(API_M_GET, "/sample", querySample, QUERIES(QueryParams, queryParams), API_HANDLER_AUTH_PARAME) {\n        // \u89e3\u6790\u67e5\u8be2\u53c2\u6570\u4e3aQuery\u9886\u57df\u6a21\u578b\n        API_HANDLER_QUERY_PARAM(userQuery, SampleQuery, queryParams);\n        // \u547c\u53eb\u6267\u884c\u51fd\u6570\u54cd\u5e94\u7ed3\u679c\n        API_HANDLER_RESP_VO(execQuerySample(userQuery, authObject->getPayload()));\n    }\n    // ...\nprivate:\n    SamplePageJsonVO::Wrapper SampleController::execQuerySample(const SampleQuery::Wrapper& query, const PayloadDTO& payload);\n};\n'})}),"\n",(0,a.jsxs)(e.p,{children:["\u5176\u4e2d",(0,a.jsx)(e.code,{children:"PayloadDTO"}),"\u7c7b\u5c31\u662f",(0,a.jsx)(e.code,{children:"\u51ed\u8bc1\u4fe1\u606f\u5b9e\u4f53\u7c7b"})]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C++",children:'/**\n * \u8d1f\u8f7d\u4fe1\u606f\u83b7\u53d6\u72b6\u6001\u7f16\u7801\n */\nenum class PayloadCode\n{\n    // \u4fe1\u606f\u9a8c\u8bc1\u5904\u7406\u6210\u529f\n    SUCCESS,\n    // Token\u5df2\u8fc7\u671f\n    TOKEN_EXPIRED_ERROR,\n    // \u7b7e\u540d\u683c\u5f0f\u9519\u8bef\n    SIGNATUREFORMAT_ERROR,\n    // \u89e3\u5bc6\u9519\u8bef\n    DECODE_ERROR,\n    // \u9a8c\u8bc1\u9519\u8bef\n    VERIFICATION_ERROR,\n    // \u5176\u4ed6\u9519\u8bef\n    OTHER_ERROR\n};\n\n/**\n * \u8d1f\u8f7d\u4fe1\u606f\u5b9e\u4f53\u7c7b\n */\nclass PayloadDTO\n{\npublic:\n    // \u83b7\u53d6\u72b6\u6001\u7801\u5bf9\u5e94\u7684\u679a\u4e3e\u503c\u540d\u79f0\n    static std::string getCodeName(PayloadCode code) \n    {\n        switch (code)\n        {\n        case PayloadCode::SUCCESS:\n            return "SUCCESS";\n        case PayloadCode::TOKEN_EXPIRED_ERROR:\n            return "TOKEN_EXPIRED_ERROR";\n        case PayloadCode::SIGNATUREFORMAT_ERROR:\n            return "SIGNATUREFORMAT_ERROR";\n        case PayloadCode::DECODE_ERROR:\n            return "DECODE_ERROR";\n        case PayloadCode::VERIFICATION_ERROR:\n            return "VERIFICATION_ERROR";\n        case PayloadCode::OTHER_ERROR:\n            return "OTHER_ERROR";\n        default:\n            return "NONE";\n        }\n    }\n    // \u83b7\u53d6\u51ed\u8bc1\u524d\u7f00\n    static std::string getTokenPrefix() {\n        return "Bearer ";\n    }\nprivate:\n    // Token\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u503c\n    std::string token;\n    // \u4e3b\u4f53\u6570\u636e\n    std::string sub;\n    // \u51ed\u8bc1\u6709\u6548\u65f6\u957f\uff08\u79d2\uff09\n    int64_t exp;\n    // \u7528\u6237\u7f16\u53f7\n    std::string id;\n    // \u7528\u6237\u540d\n    std::string username;\n    // \u7528\u6237\u62e5\u6709\u7684\u6743\u9650\n    std::list<std::string> authorities;\n    // \u6570\u636e\u72b6\u6001\u7cfb\u4fe1\u606f\n    PayloadCode code;\npublic:\n    PayloadDTO()\n    {\n        this->username = "";\n        this->exp = 0;\n        this->sub = "";\n        this->setCode(PayloadCode::SUCCESS);\n    }\n    PayloadDTO(std::string _sub, int64_t _exp, std::string _username, std::list<std::string> _authorities) :\n        sub(_sub), exp(_exp), username(_username), authorities(_authorities)\n    {\n        this->setCode(PayloadCode::SUCCESS);\n    }\n    \n    // getter/setter\n    std::string getSub() const { return sub; }\n    void setSub(std::string val) { sub = val; }\n    int64_t getExp() const { return exp; }\n    void setExp(int64_t val) { exp = val; }\n    std::string getUsername() const { return username; }\n    void setUsername(std::string val) { username = val; }\n    std::list<std::string>& getAuthorities() { return authorities; }\n    void setAuthorities(std::list<std::string> val) { authorities = val; }\n    PayloadCode getCode() const { return code; }\n    void setCode(PayloadCode val) { code = val; }\n    std::string getId() const { return id; }\n    void setId(std::string val) { id = val; }\n    std::string getToken() const { return token; }\n    void setToken(std::string val) { token = val; }\n\n    // \u6dfb\u52a0\u6743\u9650\n    void putAuthority(std::string authstr) { authorities.push_back(authstr); }\n    \n    // \u5c06Payload\u7684\u5c5e\u6027\u8f6c\u6362\u5230jwt_object\u4e2d\n    // \u6ce8\u610f\uff1a\u65b0\u589e\u5c5e\u6027\u5b57\u6bb5\u540e\u9700\u8981\u7ef4\u62a4\u6b64\u65b9\u6cd5\n    template<class T>\n    void propToJwt(T* obj) const\n    {\n        // \u8f6c\u6362\u6743\u9650\u5217\u8868\n        obj->add_claim("authorities", authorities);\n        // \u8f6c\u6362\u7528\u6237\u540d\n        obj->add_claim("user_name", username);\n        // \u8f6c\u6362id\n        obj->add_claim("id", id);\n        // TIP\uff1a\u65b0\u589e\u5b57\u6bb5\u5728\u540e\u9762\u8865\u5145\u5373\u53ef\n    }\n\n    // \u5c06jwt_object\u7684\u5c5e\u6027\u8f6c\u6362\u5230Payload\u4e2d\n    // \u6ce8\u610f\uff1a\u65b0\u589e\u5c5e\u6027\u5b57\u6bb5\u540e\u9700\u8981\u7ef4\u62a4\u6b64\u65b9\u6cd5\n    void propToPayload(jwt::jwt_object* obj) \n    {\n        // \u83b7\u53d6\u8d1f\u8f7d\u4fe1\u606f\n        auto payload = obj->payload();\n        auto _payload = payload.create_json_obj();\n\n        // \u8f6c\u6362\u6743\u9650\u5217\u8868\n        if (_payload.contains("authorities"))\n            setAuthorities(payload.get_claim_value<std::list<std::string>>("authorities"));\n        // \u8f6c\u6362\u7528\u6237\u540d\n        setUsername(payload.get_claim_value<std::string>("user_name"));\n        // \u8f6c\u6362\u6570\u5b57\u7c7b\u578bid\n        if (_payload["id"].is_number()) \n            setId(std::to_string(_payload["id"].get<int64_t>()));\n        // \u8f6c\u6362\u5b57\u7b26\u4e32\u7c7b\u578bid\n        else\n            setId(_payload["id"].get<std::string>());\n        // TIP\uff1a\u65b0\u589e\u5b57\u6bb5\u5728\u540e\u9762\u8865\u5145\u5373\u53ef\n    }\n};\n'})}),"\n",(0,a.jsx)(e.h3,{id:"124-\u6388\u6743\u6570\u636e\u5b9e\u4f53--\u6388\u6743\u5904\u7406\u5668",children:"1.2.4 \u6388\u6743\u6570\u636e\u5b9e\u4f53 & \u6388\u6743\u5904\u7406\u5668"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.code,{children:"zero-one-08mes\\mes-cpp\\lib-oatpp\\include\\CustomerAuthorizeHandler.h"})}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["\u518d\u8005",(0,a.jsx)(e.code,{children:"authObject"}),"\u53d8\u91cf\u662f",(0,a.jsx)(e.code,{children:"CustomerAuthorizeObject"}),"\u7c7b\u578b(\u7684\u667a\u80fd\u6307\u9488)"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C++",children:"/**\n * \u81ea\u5b9a\u4e49\u6388\u6743\u5b9e\u4f53\u6570\u636e\u5b9e\u4f53\n */\nclass CustomerAuthorizeObject : public oatpp::web::server::handler::AuthorizationObject\n{\nprivate:\n    // \u8d1f\u8f7d\u6570\u636e\u8bb0\u5f55\u5b9e\u4f53\n    PayloadDTO payload;\npublic:\n    // \u6784\u9020\u521d\u521d\u59cb\u5316\n    CustomerAuthorizeObject(PayloadDTO payload);\n    // \u83b7\u53d6\u8d1f\u8f7d\u6570\u636e\u5bf9\u8c61\n    const PayloadDTO& getPayload();\n};\n\n/**\n * \u81ea\u5b9a\u4e49\u6388\u6743\u5904\u7406\u5668\n */\nclass CustomerAuthorizeHandler : public oatpp::web::server::handler::BearerAuthorizationHandler\n{\npublic:\n    // \u6784\u9020\u521d\u59cb\u5316\u516c\u94a5\u8bfb\u53d6\n    CustomerAuthorizeHandler();\n    // \u6388\u6743\u903b\u8f91\n    std::shared_ptr<AuthorizationObject> authorize(const oatpp::String& token) override;\n};\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u8bfb\u53d6\u516c\u94a5",(0,a.jsx)(e.code,{children:"public.pem"}),"\u6587\u4ef6, \u800c\u4e0d\u662f\u5199\u6b7b\u5728\u4ee3\u7801\u91cc\u9762."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C++",children:'// .cpp\nCustomerAuthorizeHandler::CustomerAuthorizeHandler()\n{\n    //\u8bfb\u53d6\u516c\u94a5\n    if (!RSA_PUB_KEY)\n    {\n        std::string pubKey = "";\n        std::ifstream ifs("public.pem");\n        if (ifs.is_open())\n        {\n            std::string tmp;\n            while (std::getline(ifs, tmp))\n            {\n                pubKey += tmp + "\\n";\n            }\n            ifs.close();\n        }\n        RSA_PUB_KEY = std::make_unique<std::string>(pubKey);\n    }\n}\n\nstd::shared_ptr<oatpp::web::server::handler::AuthorizationHandler::AuthorizationObject> CustomerAuthorizeHandler::authorize(const oatpp::String& token)\n{\n    // \u89e3\u6790\u51ed\u8bc1\n    PayloadDTO payload = JWTUtil::verifyTokenByRsa(token, RSA_PUB_KEY->c_str());\n    if (payload.getCode() != PayloadCode::SUCCESS) {\n        std::stringstream ss;\n        ss << "Token: check fail code <" << PayloadDTO::getCodeName(payload.getCode()) << ">.";\n        throw std::logic_error(ss.str());\n    }\n    // \u5c06\u6570\u636e\u5b58\u653e\u5230\u6388\u6743\u5bf9\u8c61\u4e2d\n    payload.setToken(token);\n    return std::make_shared<CustomerAuthorizeObject>(payload);\n}\n'})}),"\n",(0,a.jsx)(e.h1,{id:"\u4e8celk",children:"\u4e8c\u3001ELK"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"\u5b66java\u7684\u6709\u798f\u4e86"}),"\n"]}),"\n",(0,a.jsx)(e.h1,{id:"\u4e09ee",children:"\u4e09\u3001EE"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"\u5b66java\u7684\u6709\u798f\u4e86"}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>d});var s=t(96540);const a={},r=s.createContext(a);function i(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),s.createElement(r.Provider,{value:e},n.children)}},45949:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/Clip_2024-05-16_16-35-35-c630f193baf96881e9d8c158e60fc687.png"}}]);