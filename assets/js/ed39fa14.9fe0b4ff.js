"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[42464],{28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>a});var s=t(96540);const r={},o=s.createContext(r);function d(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(o.Provider,{value:n},e.children)}},45634:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>i,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u6e90\u7801\u9605\u8bfb/\u96c5\u5170\u4ead\u5e93/http\u670d\u52a1\u7aef\u67b6\u6784/index","title":"http\u670d\u52a1\u7aef\u67b6\u6784\u6e90\u7801\u5206\u6790","description":"\u4e00\u3001api","source":"@site/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/008-\u6e90\u7801\u9605\u8bfb/001-\u96c5\u5170\u4ead\u5e93/002-http\u670d\u52a1\u7aef\u67b6\u6784/index.md","sourceDirName":"002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/008-\u6e90\u7801\u9605\u8bfb/001-\u96c5\u5170\u4ead\u5e93/002-http\u670d\u52a1\u7aef\u67b6\u6784","slug":"/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u6e90\u7801\u9605\u8bfb/\u96c5\u5170\u4ead\u5e93/http\u670d\u52a1\u7aef\u67b6\u6784/","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u6e90\u7801\u9605\u8bfb/\u96c5\u5170\u4ead\u5e93/http\u670d\u52a1\u7aef\u67b6\u6784/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/008-\u6e90\u7801\u9605\u8bfb/001-\u96c5\u5170\u4ead\u5e93/002-http\u670d\u52a1\u7aef\u67b6\u6784/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1747379049000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"C++\u65e0\u5b8f\u53cd\u5c04\u7814\u7a76","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u6e90\u7801\u9605\u8bfb/\u96c5\u5170\u4ead\u5e93/C++\u65e0\u5b8f\u53cd\u5c04\u7814\u7a76/"},"next":{"title":"vscode\u76f8\u5173","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u73af\u5883\u642d\u5efa/vscode\u76f8\u5173/"}}');var r=t(74848),o=t(28453);const d={},a="http\u670d\u52a1\u7aef\u67b6\u6784\u6e90\u7801\u5206\u6790",p={},l=[{value:"\u4e00\u3001api",id:"\u4e00api",level:2},{value:"\u4e8c\u3001\u5177\u4f53\u5b9e\u73b0",id:"\u4e8c\u5177\u4f53\u5b9e\u73b0",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"http\u670d\u52a1\u7aef\u67b6\u6784\u6e90\u7801\u5206\u6790",children:"http\u670d\u52a1\u7aef\u67b6\u6784\u6e90\u7801\u5206\u6790"})}),"\n",(0,r.jsx)(n.h2,{id:"\u4e00api",children:"\u4e00\u3001api"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-C++",children:'cinatra::coro_http_server server(1 /*\u7ebf\u7a0b\u6570*/, 9001 /*\u7aef\u53e3*/);\n\nserver.set_http_handler<cinatra::GET, cinatra::POST>("/delay2", [](\n    coro_http_request &req,\n    coro_http_response &resp\n) -> async_simple::coro::Lazy<void> {\n    resp.set_delay(true);\n    std::this_thread::sleep_for(200ms);\n    resp.set_status_and_content(status_type::ok, "delay reply in coro");\n    co_await resp.get_conn()->reply();\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u8fd8\u652f\u6301\u9762\u5411\u5207\u9762\u7684\u7f16\u7a0b:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-C++",children:'//\u5c06\u4fe1\u606f\u4ece\u4e2d\u95f4\u4ef6\u4f20\u8f93\u5230\u5904\u7406\u7a0b\u5e8f\nstruct get_data {\n    bool before(coro_http_request& req, coro_http_response& res) {\n        req.set_aspect_data("hello world");\n        return true;\n    }\n}\n\nserver.set_http_handler<GET,POST>("/aspect/data", [](coro_http_request& req, coro_http_response& res) {\n    std::string hello = req.get_aspect_data()[0];\n    res.set_status_and_content(status_type::ok, std::move(hello));\n}, get_data{} /*\u53ef\u6ce8\u5165\u591a\u4e2a\u5207\u9762*/);\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"\u4e8c\u5177\u4f53\u5b9e\u73b0",children:"\u4e8c\u3001\u5177\u4f53\u5b9e\u73b0"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u6dfb\u52a0\u7aef\u70b9:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\u652f\u6301\u6dfb\u52a0\u5bf9\u4e0d\u540c\u7684",(0,r.jsx)(n.code,{children:"method"}),"\u5230\u76f8\u540c\u7684\u7aef\u70b9(\u901a\u8fc7",(0,r.jsx)(n.code,{children:"..."}),"\u5c55\u5f00)"]}),"\n",(0,r.jsx)(n.li,{children:"\u5c0f\u7ec6\u8282: \u5982\u679c\u53ea\u6709\u4e00\u4e2a, \u5c31\u91c7\u7528\u79fb\u52a8!"}),"\n",(0,r.jsx)(n.li,{children:"\u8def\u7531\u662f\u7c7b\u72ec\u4eab\u7684, \u800c\u4e0d\u662f\u5168\u5c40\u5355\u4f8b!"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-C++",children:'template <http_method... method, typename Func, typename... Aspects>\n  void set_http_handler(std::string key, Func handler, Aspects &&...asps) {\n    static_assert(sizeof...(method) >= 1, "must set http_method");\n    if constexpr (sizeof...(method) == 1) {\n      (router_.set_http_handler<method>(std::move(key), std::move(handler),\n                                        std::forward<Aspects>(asps)...),\n       ...);\n    }\n    else {\n      (router_.set_http_handler<method>(key, handler,\n                                        std::forward<Aspects>(asps)...),\n       ...);\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u6dfb\u52a0\u7aef\u70b9\u5230\u8def\u7531:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-C++",children:'template <http_method method, typename Func, typename... Aspects>\n  void set_http_handler(std::string key, Func handler, Aspects&&... asps) {\n    constexpr auto method_name = cinatra::method_name(method);\n    std::string whole_str;\n    whole_str.append(method_name).append(" ").append(key);\n\n    // hold keys to make sure map_handles_ key is\n    // std::string_view, avoid memcpy when route\n    using return_type = typename util::function_traits<Func>::return_type;\n    if constexpr (coro_io::is_lazy_v<return_type>) {\n      std::function<async_simple::coro::Lazy<void>(coro_http_request & req,\n                                                   coro_http_response & resp)>\n          http_handler;\n      if constexpr (sizeof...(Aspects) > 0) {\n        http_handler = [this, handler = std::move(handler), ... asps = std::forward<Aspects>(asps)](\n                           coro_http_request& req,\n                           coro_http_response& resp) mutable\n            -> async_simple::coro::Lazy<void> {\n          bool ok = true;\n          (do_before(asps, req, resp, ok), ...);\n          if (ok) {\n            co_await handler(req, resp);\n          }\n          ok = true;\n          (do_after(asps, req, resp, ok), ...);\n        };\n      }\n      else {\n        http_handler = std::move(handler);\n      }\n\n      if (whole_str.find(":") != std::string::npos) {\n        std::string method_str(method_name);\n        coro_router_tree_->coro_insert(whole_str, std::move(http_handler),\n                                       method_str);\n      }\n      else {\n        if (whole_str.find("{") != std::string::npos ||\n            whole_str.find(")") != std::string::npos) {\n          std::string pattern = whole_str;\n\n          if (pattern.find("{}") != std::string::npos) {\n            replace_all(pattern, "{}", "([^/]+)");\n          }\n\n          coro_regex_handles_.emplace_back(std::regex(pattern),\n                                           std::move(http_handler));\n        }\n        else {\n          auto [it, ok] = coro_keys_.emplace(std::move(whole_str));\n          if (!ok) {\n            CINATRA_LOG_WARNING << key << " has already registered.";\n            return;\n          }\n          coro_handles_.emplace(*it, std::move(http_handler));\n        }\n      }\n    }\n    else {\n      std::function<void(coro_http_request & req, coro_http_response & resp)>\n          http_handler;\n      if constexpr (sizeof...(Aspects) > 0) {\n        http_handler = [this, handler = std::move(handler),\n                        ... asps = std::forward<Aspects>(asps)](\n                           coro_http_request& req,\n                           coro_http_response& resp) mutable {\n          bool ok = true;\n          (do_before(asps, req, resp, ok), ...);\n          if (ok) {\n            handler(req, resp);\n          }\n          ok = true;\n          (do_after(asps, req, resp, ok), ...);\n        };\n      }\n      else {\n        http_handler = std::move(handler);\n      }\n\n      if (whole_str.find(\':\') != std::string::npos) {\n        std::string method_str(method_name);\n        router_tree_->insert(whole_str, std::move(http_handler), method_str);\n      }\n      else if (whole_str.find("{") != std::string::npos ||\n               whole_str.find(")") != std::string::npos) {\n        std::string pattern = whole_str;\n\n        if (pattern.find("{}") != std::string::npos) {\n          replace_all(pattern, "{}", "([^/]+)");\n        }\n\n        regex_handles_.emplace_back(std::regex(pattern),\n                                    std::move(http_handler));\n      }\n      else {\n        auto [it, ok] = keys_.emplace(std::move(whole_str));\n        if (!ok) {\n          CINATRA_LOG_WARNING << key << " has already registered.";\n          return;\n        }\n        map_handles_.emplace(*it, std::move(http_handler));\n      }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u652f\u6301\u9762\u5411\u5207\u9762\u7684\u5b9e\u73b0\u7684\u6838\u5fc3\u601d\u60f3: (\u5c06\u4ed6\u4eec\u88c5\u5728\u4e00\u8d77, \u800c\u4e0d\u662f\u5206\u5f00)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-C++",children:"\u8c03\u7528\u4f53 = [...]() {\n    bool ok = true;\n    (do_before(asps, req, resp, ok), ...);\n    if (ok) {\n      handler(req, resp);\n    }\n    ok = true;\n    (do_after(asps, req, resp, ok), ...);\n};\n\n\u8def\u7531.add(url, \u8c03\u7528\u4f53);\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u7136\u540e\u63d2\u5165\u5230\u8def\u7531\u6811\u4e2d(\u5185\u90e8\u4e3a\u8fed\u4ee3\u5b9e\u73b0, \u800c\u975e\u9012\u5f52)"})]})}function i(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);