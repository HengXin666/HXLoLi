"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[1922],{28453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>r});var s=t(96540);const i={},_=s.createContext(i);function o(n){const e=s.useContext(_);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),s.createElement(_.Provider,{value:e},n.children)}},38393:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/Clip_2024-08-03_18-58-15-c7835a66fcce89f4131314a7a0474c73.png"},42102:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u73b0\u4ee3C++\u534f\u7a0b/\u533a\u5206\u6709\u6808\u3001\u65e0\u6808\u534f\u7a0b/index","title":"\u533a\u5206\u6709\u6808\u6216\u65e0\u6808\u534f\u7a0b","description":"1.1 \u770b\u770bC++20\u7684\u534f\u7a0b, \u5e76\u5b9e\u73b0\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u751f\u6210\u5668","source":"@site/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/006-\u73b0\u4ee3C++\u534f\u7a0b/002-\u533a\u5206\u6709\u6808\u3001\u65e0\u6808\u534f\u7a0b/index.md","sourceDirName":"002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/006-\u73b0\u4ee3C++\u534f\u7a0b/002-\u533a\u5206\u6709\u6808\u3001\u65e0\u6808\u534f\u7a0b","slug":"/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u73b0\u4ee3C++\u534f\u7a0b/\u533a\u5206\u6709\u6808\u3001\u65e0\u6808\u534f\u7a0b/","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u73b0\u4ee3C++\u534f\u7a0b/\u533a\u5206\u6709\u6808\u3001\u65e0\u6808\u534f\u7a0b/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/006-\u73b0\u4ee3C++\u534f\u7a0b/002-\u533a\u5206\u6709\u6808\u3001\u65e0\u6808\u534f\u7a0b/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1747379049000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u3010C++\u3011\u4ece\u5f00\u59cb\u81ea\u5236\u534f\u7a0b\u5e93,\u6709\u624b\u5c31\u884c","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u73b0\u4ee3C++\u534f\u7a0b/\u3010C++\u3011\u4ece\u5f00\u59cb\u81ea\u5236\u534f\u7a0b\u5e93,\u6709\u624b\u5c31\u884c/"},"next":{"title":"\u534f\u7a0b\u901f\u8bb0","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u73b0\u4ee3C++\u534f\u7a0b/\u534f\u7a0b\u901f\u8bb0/"}}');var i=t(74848),_=t(28453);const o={},r="\u533a\u5206\u6709\u6808\u6216\u65e0\u6808\u534f\u7a0b",l={},a=[{value:"1.1 \u770b\u770bC++20\u7684\u534f\u7a0b, \u5e76\u5b9e\u73b0\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u751f\u6210\u5668",id:"11-\u770b\u770bc20\u7684\u534f\u7a0b-\u5e76\u5b9e\u73b0\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u751f\u6210\u5668",level:2},{value:"1.2 \u8f6c\u6362\u4e3a\u624b\u6495",id:"12-\u8f6c\u6362\u4e3a\u624b\u6495",level:2},{value:"1.2.1 \u4ec0\u4e48\u662f\u6709\u6808/\u65e0\u6808\u534f\u7a0b",id:"121-\u4ec0\u4e48\u662f\u6709\u6808\u65e0\u6808\u534f\u7a0b",level:3},{value:"1.2.2 \u534f\u7a0b\u306e\u6838\u5fc3\u539f\u7406",id:"122-\u534f\u7a0b\u306e\u6838\u5fc3\u539f\u7406",level:3},{value:"1.2.3 \u8f6c\u79fb\u6240\u6709\u6743",id:"123-\u8f6c\u79fb\u6240\u6709\u6743",level:3},{value:"1.2.4 \u534f\u7a0b\u5e27",id:"124-\u534f\u7a0b\u5e27",level:3},{value:"1.3 \u770b\u770b\u7f16\u8bd1\u5668\u5e72\u4e86\u5565\u5b50",id:"13-\u770b\u770b\u7f16\u8bd1\u5668\u5e72\u4e86\u5565\u5b50",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,_.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"\u533a\u5206\u6709\u6808\u6216\u65e0\u6808\u534f\u7a0b",children:"\u533a\u5206\u6709\u6808\u6216\u65e0\u6808\u534f\u7a0b"})}),"\n",(0,i.jsx)(e.h2,{id:"11-\u770b\u770bc20\u7684\u534f\u7a0b-\u5e76\u5b9e\u73b0\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u751f\u6210\u5668",children:"1.1 \u770b\u770bC++20\u7684\u534f\u7a0b, \u5e76\u5b9e\u73b0\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u751f\u6210\u5668"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-C++",children:"#include <coroutine>\n\nstruct RepeatAwaiter {\n    bool await_ready() const noexcept { \n        return false;\n    }\n\n    std::coroutine_handle<> await_suspend(std::coroutine_handle<> coroutine) const noexcept {\n        return std::noop_coroutine();\n    }\n\n    void await_resume() const noexcept {}\n};\n\ntemplate<class T>\nstruct Promise {\n    auto initial_suspend() {\n        return std::suspend_always();\n    }\n\n    auto final_suspend() noexcept {\n        return std::suspend_always();\n    }\n\n    void unhandled_exception() {\n        throw;\n    }\n\n    auto yield_value(T ret) {\n        mRetValue = ret;\n        return RepeatAwaiter();\n    }\n\n    void return_void() {\n        mRetValue = 0;\n    }\n\n    std::coroutine_handle<Promise> get_return_object() {\n        return std::coroutine_handle<Promise>::from_promise(*this);\n    }\n\n    T mRetValue;\n};\n\ntemplate<class T>\nstruct Task {\n    using promise_type = Promise<T>;\n\n    Task(std::coroutine_handle<promise_type> coroutine)\n        : mCoroutine(coroutine) {}\n\n    std::coroutine_handle<promise_type> mCoroutine;\n};\n\ntemplate<class T>\nTask<T> fib() { // \u6590\u6ce2\u90a3\u5951\u6570\u5217\u751f\u6210\u5668\u534f\u7a0b\n    T a = 1, b = 1;\n    co_yield a;\n    co_yield b;\n    while (1) {\n        T c = a + b;\n        co_yield c;\n        a = b;\n        b = c;\n    }\n}\n\nint main() {\n    // \u5b9e\u73b0\u4e00\u4e2a \u751f\u6210\u5668\n    using ll = long long;\n    auto task = fib<ll>();\n    while (1) {\n        task.mCoroutine.resume();\n        std::cout << task.mCoroutine.promise().mRetValue << '\\n';\n        getchar();\n    }\n    return 0;\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u6211\u4eec\u5982\u679c\u60f3\u8981\u624b\u6495\u4e00\u4e2a\u4e0a\u9762\u7684\u5b9e\u73b0\u600e\u4e48\u529e?"}),"\n",(0,i.jsx)(e.h2,{id:"12-\u8f6c\u6362\u4e3a\u624b\u6495",children:"1.2 \u8f6c\u6362\u4e3a\u624b\u6495"}),"\n",(0,i.jsxs)(e.p,{children:["\u5982\u679c\u6211\u4eec\u66b4\u529b\u7684\u628a",(0,i.jsx)(e.code,{children:"co_yield"}),"\u66ff\u6362\u4e3a",(0,i.jsx)(e.code,{children:"return"}),"\u663e\u7136\u662f\u4e0d\u884c\u7684."]}),"\n",(0,i.jsxs)(e.p,{children:["\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u8fdb\u5165",(0,i.jsx)(e.code,{children:"fib"}),"\u662f\u53c8\u4ece\u7b2c\u4e00\u53e5\u5f00\u59cb, \u800c\u4e0d\u662f\u4ece",(0,i.jsx)(e.code,{children:"return"}),"\u7684\u5730\u65b9\u7ee7\u7eed:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-C++",children:"#include <cstdio>\n\nusing ll = long long; // \u4e3a\u4e86\u7a81\u51fa\u91cd\u70b9, \u5c31\u4e0d\u4f7f\u7528\u6a21\u7248\u4e86qwq\n\nll fib() {\n    ll a = 1, b = 1;\n    return a;\n    return b;\n\n    while (1) {\n        ll c = a + b;\n        return c;\n        b = a;\n        a = c;\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u4e00\u4e0b\u72b6\u6001, \u6bd4\u5982\u653e\u5230\u4e00\u4e2a\u7ed3\u6784\u4f53\u91cc\u9762:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-C++",children:"using ll = long long; // \u4e3a\u4e86\u7a81\u51fa\u91cd\u70b9, \u5c31\u4e0d\u4f7f\u7528\u6a21\u7248\u4e86qwq\n\nstruct FibTask {\n    int state = 0;\n    ll a, b, c;\n};\n\n\nll fib(FibTask& f) {\n    switch (f.state) {\n    case 0: // \u7b2c\u4e00\u6b21\u8fdb\u5165\n        f.a = f.b = 1;\n        f.state = 1;\n        goto st_01;\n    case 1: // \u7b2c\u4e8c\u6b21\u8fdb\u5165\n        f.state = 2;\n        goto st_02;\n    case 2: // \u7b2c\u4e09\u6b21\u8fdb\u5165\n        f.state = 3;\n        goto st_03;\n    case 3: // \u7b2c4\u6b21\u53ca\u5176\u4ee5\u540e\u7684\u8fdb\u5165\n        goto st_04;\n    }\n\nst_01:\n    return f.a;\nst_02:\n    return f.b;\nst_03:\n    while (1) {\n        f.c = f.a + f.b; // \u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\u4f5c\u4e3a c, \u56e0\u4e3a c \u662f\u5728\u6062\u590d\u7684\u65f6\u5019\u8fd8\u7528\u5230\u7684\n        return f.c;\n    st_04: // \u901a\u8fc7\u4e0a\u9762\u5199\u7684\u7ecf\u9a8c\u4e5f\u53ef\u4ee5\u77e5\u9053: \u6bcf\u4e2areturn\u540e\u9762\u90fd\u6709\u4e00\u4e2agoto\u7684\u6807\u8bc6, \u7528\u4e8e\u6062\u590d.\n        f.b = f.a;\n        f.a = f.c;\n    }\n}\n\nint main() {\n    FibTask f;\n    while (1) {\n        std::cout << fib(f) << '\\n';\n        getchar();\n    }\n    return 0;\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528",(0,i.jsx)(e.code,{children:"static"}),"\u9759\u6001\u53d8\u91cf/\u6216\u8005\u5168\u5c40\u53d8\u91cf, \u4f60\u601d\u8003\u4e00\u4e0b: fib\u53ea\u80fd\u8c03\u7528\u4e00\u6b21\u5417(\u53ef\u91cd\u5165)? fib\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u5417(\u867d\u7136\u4e0a\u9762\u7684\u4e5f\u4e0d\u662f\u5f88\u5b89\u5168)"]}),"\n",(0,i.jsx)(e.p,{children:"\u603b\u800c\u8a00\u4e4b, \u6211\u4eec\u5df2\u7ecf\u624b\u6495\u4e00\u4e2a\u8d85\u7b80\u5355\u7684\u534f\u7a0b\u4e86 (?)"}),"\n",(0,i.jsx)(e.p,{children:"\u800c\u4e3a\u4e86\u66f4\u52a0\u7b26\u5408\u67d0\u4e9b\u601d\u60f3, \u6211\u4eec\u53ef\u4ee5\u5c01\u88c5\u4e00\u4e0b:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-C++",children:"struct FibTask {\n    int state = 0;\n    ll a, b, c;\n\n    ll fib() {\n        switch (state) {\n        case 0: // \u7b2c\u4e00\u6b21\u8fdb\u5165\n            a = b = 1;\n            state = 1;\n            goto st_01;\n        case 1: // \u7b2c\u4e8c\u6b21\u8fdb\u5165\n            state = 2;\n            goto st_02;\n        case 2: // \u7b2c\u4e09\u6b21\u8fdb\u5165\n            state = 3;\n            goto st_03;\n        case 3: // \u7b2c4\u6b21\u53ca\u5176\u4ee5\u540e\u7684\u8fdb\u5165\n            goto st_04;\n        }\n\n    st_01:\n        return a;\n    st_02:\n        return b;\n    st_03:\n        while (1) {\n            c = a + b; // \u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\u4f5c\u4e3a c, \u56e0\u4e3a c \u662f\u5728\u6062\u590d\u7684\u65f6\u5019\u8fd8\u7528\u5230\u7684\n            return c;\n        st_04:\n            b = a;\n            a = c;\n        }\n    }\n};\n\nint main() {\n    FibTask f;\n    while (1) {\n        std::cout << f.fib() << '\\n';\n        getchar();\n    }\n    return 0;\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u8fd9\u6837\u5b83\u7684\u903b\u8f91\u5c31\u5f88\u5b8c\u5584\u4e86.."}),"\n",(0,i.jsx)(e.h3,{id:"121-\u4ec0\u4e48\u662f\u6709\u6808\u65e0\u6808\u534f\u7a0b",children:"1.2.1 \u4ec0\u4e48\u662f\u6709\u6808/\u65e0\u6808\u534f\u7a0b"}),"\n",(0,i.jsxs)(e.p,{children:["\u7efc\u4e0a\u6240\u8ff0, \u8fd9\u4e2a\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a",(0,i.jsx)(e.code,{children:"\u65e0\u6808\u534f\u7a0b"}),", \u5373\u628a\u5f62\u53c2/\u5c40\u90e8\u53d8\u91cf\u653e\u5230\u4e00\u4e2a\u7ed3\u6784\u4f53\u91cc\u9762.."]}),"\n",(0,i.jsxs)(e.p,{children:["\u4e0e\u6b64\u76f8\u5bf9\u7684, \u76f4\u63a5\u9884\u5148\u5206\u914d\u6bd4\u5982 2000 \u4e2a\u5b57\u8282\u8fd9\u79cd, \u5c31\u662f",(0,i.jsx)(e.code,{children:"\u6709\u6808\u534f\u7a0b"})]}),"\n",(0,i.jsx)(e.h3,{id:"122-\u534f\u7a0b\u306e\u6838\u5fc3\u539f\u7406",children:"1.2.2 \u534f\u7a0b\u306e\u6838\u5fc3\u539f\u7406"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u6682\u505c/\u6062\u590d\u6267\u884c\u6743 (return)"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u6062\u590d\uff0f\u4fdd\u5b58\u72b6\u6001 (\u534f\u7a0b\u5e27, switch-goto)"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u8fd9\u91cc\u6211\u4eec\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b9e\u73b0\u4e86\u534f\u7a0b\u5e27\u914d\u5408switch-goto\u6765\u5b8c\u6210\u4e86\u534f\u7a0b\u7684\u6062\u590d"}),"\n",(0,i.jsx)(e.h3,{id:"123-\u8f6c\u79fb\u6240\u6709\u6743",children:"1.2.3 \u8f6c\u79fb\u6240\u6709\u6743"}),"\n",(0,i.jsx)(e.p,{children:"\u975e\u5bf9\u79f0\u534f\u7a0b: (\u5982: GO\u8bed\u8a00)"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"##container##"})})}),(0,i.jsx)(e.tbody,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.td,{style:{textAlign:"center"},children:(0,i.jsx)(e.img,{alt:"Clip_2024-08-03_18-58-15.png ##w600##",src:t(38393).A+"",width:"848",height:"616"})})})})]}),"\n",(0,i.jsx)(e.p,{children:"\u5bf9\u79f0\u534f\u7a0b"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"##container##"})})}),(0,i.jsx)(e.tbody,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.td,{style:{textAlign:"center"},children:(0,i.jsx)(e.img,{alt:"Clip_2024-08-03_18-59-11.png ##w600##",src:t(77578).A+"",width:"704",height:"531"})})})})]}),"\n",(0,i.jsx)(e.p,{children:"\u8fd9\u79cd\u65b9\u6cd5\u8c03\u5ea6\u5668\u662f\u6beb\u4e0d\u77e5\u60c5\u7684, \u8fd9\u79cd\u66f4\u5feb\u66f4\u7075\u6d3b; \u5982\u679c\u4e0d\u4f7f\u7528switch to, \u90a3\u4e48\u53ea\u662f\u4f1a\u9000\u5316\u4e3a \u975e\u5bf9\u79f0\u534f\u7a0b ."}),"\n",(0,i.jsx)(e.h3,{id:"124-\u534f\u7a0b\u5e27",children:"1.2.4 \u534f\u7a0b\u5e27"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"##container##"})})}),(0,i.jsx)(e.tbody,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.td,{style:{textAlign:"center"},children:(0,i.jsx)(e.img,{alt:"Clip_2024-08-03_20-09-47.png ##w600##",src:t(73919).A+"",width:"790",height:"584"})})})})]}),"\n",(0,i.jsxs)(e.p,{children:["\u6211\u4eec\u4e4b\u524d\u5199\u7684\u4ee3\u7801\u5c31\u662f\u65e0\u6808\u534f\u7a0b,, \u5b83\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u5b58\u653e\u53c2\u6570, \u5c40\u90e8\u53d8\u91cf\u548c\u72b6\u6001\u7b49\u7b49\u4e1c\u897f, \u4e0d\u540c\u7684\u534f\u7a0b\u4f1a\u5bf9\u5e94\u7740\u4e0d\u540c\u7684\u7ed3\u6784\u4f53, \u800c\u6709\u6808\u534f\u7a0b\u5462, \u5b83\u4e0d\u7ba1\u4f60\u8981\u5b58\u4ec0\u4e48\u4e1c\u897f, \u901a\u901a\u7ed9\u4f602000\u4e2a\u5b57\u8282, \u4f60\u60f3\u585e\u4ec0\u4e48\u5c31\u585e\u4ec0\u4e48\u5566, \u53cd\u6b63\u5bb9\u91cf\u7ba1\u591f, \u66f4\u8fdb\u4e00\u6b65, \u8fd92000\u5b57\u8282\u4f1a\u88ab\u76f4\u63a5\u5f53\u4f5c\u6808\u5185\u5b58\u6765\u4f7f\u7528, \u4f60\u60f3\u7533\u8bf7\u5c40\u90e8\u53d8\u91cf\u662f\u5427, \u4f60\u60f3\u9012\u5f52, \u76f4\u63a5\u5728\u8fd92000\u4e2a\u5b57\u8282\u7684\u6808\u4e0a\u9762\u505a\u5c31\u53ef\u4ee5\u4e86, \u4f60\u4f1a\u53d1\u73b0\u8fd9\u65f6\u5019\u6709\u6808\u534f\u7a0b\u548c\u666e\u901a\u51fd\u6570\u51e0\u4e4e\u6ca1\u6709\u533a\u522b, \u53ea\u4e0d\u8fc7\u666e\u901a\u51fd\u6570\u662f\u5728\u7ebf\u7a0b\u6808\u4e0a\u5de5\u4f5c, \u6709\u6808\u534f\u7a0b\u5462 \u662f\u5728\u6307\u5b9a\u76842000\u4e2a\u5b57\u8282\u4e0a\u9762\u5de5\u4f5c\u7f62\u4e86, \u6211\u4eec\u4f1a\u770b\u5230\u8fd9\u4e24\u79cd\u8bbe\u8ba1\u5728\u4ee3\u7801\u98ce\u683c\u4e0a\u7684\u5de8\u5927\u5dee\u522b.. \u5177\u4f53\u53ef\u770b\u770b: ",(0,i.jsx)(e.a,{href:"https://www.bilibili.com/video/BV1dv4y127YT/",children:"https://www.bilibili.com/video/BV1dv4y127YT/"})]}),"\n",(0,i.jsx)(e.h2,{id:"13-\u770b\u770b\u7f16\u8bd1\u5668\u5e72\u4e86\u5565\u5b50",children:"1.3 \u770b\u770b\u7f16\u8bd1\u5668\u5e72\u4e86\u5565\u5b50"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-C++",children:"/*************************************************************************************\n * NOTE: The coroutine transformation you've enabled is a hand coded transformation! *\n *       Most of it is _not_ present in the AST. What you see is an approximation.   *\n *************************************************************************************/\n#include <coroutine>\n#include <iostream>\n\nstruct RepeatAwaiter\n{\n  inline bool await_ready() const noexcept\n  {\n    return false;\n  }\n  \n  inline std::coroutine_handle<void> await_suspend(std::coroutine_handle<void> coroutine) const noexcept\n  {\n    return std::noop_coroutine().operator std::coroutine_handle<void>();\n  }\n  \n  inline void await_resume() const noexcept\n  {\n  }\n  \n};\n\n\ntemplate<class T>\nstruct Promise\n{\n  inline auto initial_suspend()\n  {\n    return std::suspend_always();\n  }\n  \n  inline auto final_suspend() noexcept\n  {\n    return std::suspend_always();\n  }\n  \n  inline void unhandled_exception()\n  {\n    throw ;\n  }\n  \n  inline auto yield_value(T ret)\n  {\n    this->mRetValue = ret;\n    return RepeatAwaiter();\n  }\n  \n  inline void return_void()\n  {\n    this->mRetValue = 0;\n  }\n  \n  inline std::coroutine_handle<Promise<T> > get_return_object()\n  {\n    return std::coroutine_handle<Promise<T> >::from_promise(*this);\n  }\n  \n  T mRetValue;\n};\n\n/* First instantiated from: insights.cpp:75 */\n#ifdef INSIGHTS_USE_TEMPLATE\ntemplate<>\nstruct Promise<long long>\n{\n  inline std::suspend_always initial_suspend()\n  {\n    return std::suspend_always();\n  }\n  \n  inline std::suspend_always final_suspend() noexcept\n  {\n    return std::suspend_always();\n  }\n  \n  inline void unhandled_exception()\n  {\n    throw ;\n  }\n  \n  inline RepeatAwaiter yield_value(long long ret)\n  {\n    this->mRetValue = ret;\n    return RepeatAwaiter();\n  }\n  \n  inline void return_void()\n  {\n    this->mRetValue = 0;\n  }\n  \n  inline std::coroutine_handle<Promise<long long> > get_return_object()\n  {\n    return std::coroutine_handle<Promise<long long> >::from_promise(*this);\n  }\n  \n  long long mRetValue;\n  // inline constexpr Promise() noexcept = default;\n};\n\n#endif\n\ntemplate<class T>\nstruct Task\n{\n  using promise_type = Promise<T>;\n  inline Task(std::coroutine_handle<promise_type> coroutine)\n  : mCoroutine(coroutine)\n  {\n  }\n  \n  std::coroutine_handle<promise_type> mCoroutine;\n};\n\n/* First instantiated from: insights.cpp:72 */\n#ifdef INSIGHTS_USE_TEMPLATE\ntemplate<>\nstruct Task<long long>\n{\n  using promise_type = Promise<long long>;\n  inline Task(std::coroutine_handle<Promise<long long> > coroutine)\n  : mCoroutine{std::coroutine_handle<Promise<long long> >(coroutine)}\n  {\n  }\n  \n  std::coroutine_handle<Promise<long long> > mCoroutine;\n};\n\n#endif\n\ntemplate<class T>\nTask<T> fib()\n{\n  T a = 1;\n  T b = 1;\n  co_yield a;\n  co_yield b;\n  while(1) {\n    T c = a + b;\n    co_yield c;\n    a = b;\n    b = c;\n  }\n  \n}\n\nstruct __fib_longlongFrame\n{\n  void (*resume_fn)(__fib_longlongFrame *);\n  void (*destroy_fn)(__fib_longlongFrame *);\n  Promise<long long> __promise;\n  int __suspend_index;\n  bool __initial_await_suspend_called;\n  long long a;\n  long long b;\n  long long c;\n  std::suspend_always __suspend_57_9;\n  RepeatAwaiter __suspend_59_5;\n  RepeatAwaiter __suspend_60_5;\n  RepeatAwaiter __suspend_63_9;\n  std::suspend_always __suspend_57_9_1;\n};\n\n/* First instantiated from: insights.cpp:72 */\n#ifdef INSIGHTS_USE_TEMPLATE\ntemplate<>\nTask<long long> fib<long long>()\n{\n  /* Allocate the frame including the promise */\n  /* Note: The actual parameter new is __builtin_coro_size */\n  __fib_longlongFrame * __f = reinterpret_cast<__fib_longlongFrame *>(operator new(sizeof(__fib_longlongFrame)));\n  __f->__suspend_index = 0;\n  __f->__initial_await_suspend_called = false;\n  \n  /* Construct the promise. */\n  new (&__f->__promise)Promise<long long>{};\n  \n  /* Forward declare the resume and destroy function. */\n  void __fib_longlongResume(__fib_longlongFrame * __f);\n  void __fib_longlongDestroy(__fib_longlongFrame * __f);\n  \n  /* Assign the resume and destroy function pointers. */\n  __f->resume_fn = &__fib_longlongResume;\n  __f->destroy_fn = &__fib_longlongDestroy;\n  \n  /* Call the made up function with the coroutine body for initial suspend.\n     This function will be called subsequently by coroutine_handle<>::resume()\n     which calls __builtin_coro_resume(__handle_) */\n  __fib_longlongResume(__f);\n  \n  \n  return Task<long long>(std::coroutine_handle<Promise<long long> >(static_cast<std::coroutine_handle<Promise<long long> > &&>(__coro_gro)));\n}\n\n/* This function invoked by coroutine_handle<>::resume() */\nvoid __fib_longlongResume(__fib_longlongFrame * __f)\n{\n  try \n  {\n    /* Create a switch to get to the correct resume point */\n    switch(__f->__suspend_index) {\n      case 0: break;\n      case 1: goto __resume_fib_longlong_1;\n      case 2: goto __resume_fib_longlong_2;\n      case 3: goto __resume_fib_longlong_3;\n      case 4: goto __resume_fib_longlong_4;\n    }\n    \n    /* co_await insights.cpp:57 */\n    __f->__suspend_57_9 = __f->__promise.initial_suspend();\n    if(!__f->__suspend_57_9.await_ready()) {\n      __f->__suspend_57_9.await_suspend(std::coroutine_handle<Promise<long long> >::from_address(static_cast<void *>(__f)).operator std::coroutine_handle<void>());\n      __f->__suspend_index = 1;\n      __f->__initial_await_suspend_called = true;\n      return;\n    } \n    \n    __resume_fib_longlong_1:\n    __f->__suspend_57_9.await_resume();\n    __f->a = 1;\n    __f->b = 1;\n    \n    /* co_yield insights.cpp:59 */\n    __f->__suspend_59_5 = __f->__promise.yield_value(__f->a);\n    if(!__f->__suspend_59_5.await_ready()) {\n      __builtin_coro_resume(__f->__suspend_59_5.await_suspend(std::coroutine_handle<Promise<long long> >::from_address(static_cast<void *>(__f)).operator std::coroutine_handle<void>()).address());\n      __f->__suspend_index = 2;\n      return;\n    } \n    \n    __resume_fib_longlong_2:\n    __f->__suspend_59_5.await_resume();\n    \n    /* co_yield insights.cpp:60 */\n    __f->__suspend_60_5 = __f->__promise.yield_value(__f->b);\n    if(!__f->__suspend_60_5.await_ready()) {\n      __builtin_coro_resume(__f->__suspend_60_5.await_suspend(std::coroutine_handle<Promise<long long> >::from_address(static_cast<void *>(__f)).operator std::coroutine_handle<void>()).address());\n      __f->__suspend_index = 3;\n      return;\n    } \n    \n    __resume_fib_longlong_3:\n    __f->__suspend_60_5.await_resume();\n    while(1) {\n      __f->c = (__f->a + __f->b);\n      \n      /* co_yield insights.cpp:63 */\n      __f->__suspend_63_9 = __f->__promise.yield_value(__f->c);\n      if(!__f->__suspend_63_9.await_ready()) {\n        __builtin_coro_resume(__f->__suspend_63_9.await_suspend(std::coroutine_handle<Promise<long long> >::from_address(static_cast<void *>(__f)).operator std::coroutine_handle<void>()).address());\n        __f->__suspend_index = 4;\n        return;\n      } \n      \n      __resume_fib_longlong_4:\n      __f->__suspend_63_9.await_resume();\n      __f->a = __f->b;\n      __f->b = __f->c;\n    }\n    \n    goto __final_suspend;\n  } catch(...) {\n    if(!__f->__initial_await_suspend_called) {\n      throw ;\n    } \n    \n    __f->__promise.unhandled_exception();\n  }\n  \n  __final_suspend:\n  \n  /* co_await insights.cpp:57 */\n  __f->__suspend_57_9_1 = __f->__promise.final_suspend();\n  if(!__f->__suspend_57_9_1.await_ready()) {\n    __f->__suspend_57_9_1.await_suspend(std::coroutine_handle<Promise<long long> >::from_address(static_cast<void *>(__f)).operator std::coroutine_handle<void>());\n    return;\n  } \n  \n  __f->destroy_fn(__f);\n}\n\n/* This function invoked by coroutine_handle<>::destroy() */\nvoid __fib_longlongDestroy(__fib_longlongFrame * __f)\n{\n  /* destroy all variables with dtors */\n  __f->~__fib_longlongFrame();\n  /* Deallocating the coroutine frame */\n  /* Note: The actual argument to delete is __builtin_coro_frame with the promise as parameter */\n  operator delete(static_cast<void *>(__f));\n}\n\n#endif\n\n\nint main()\n{\n  using ll = long long;\n  Task<long long> task = fib<ll>();\n  while(1) {\n    task.mCoroutine.resume();\n    std::operator<<(std::cout.operator<<(task.mCoroutine.promise().mRetValue), '\\n');\n    getchar();\n  }\n  \n  return 0;\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u6765\u81ea\u4e8e: 1.1 \u7684\u4ee3\u7801 to: cppinsights.io"}),"\n",(0,i.jsxs)(e.p,{children:["\u53ef\u4ee5\u770b\u5230, \u534f\u7a0b\u7684\u5f02\u5e38\u5904\u7406\u5b9e\u9645\u4e0a\u5c31\u662f\u5f80\u6574\u4e2a\u6267\u884c\u533a\u57df\u5957\u4e86\u4e00\u4e2a",(0,i.jsx)(e.code,{children:"try-catch"}),", \u5e76\u4e14\u4f7f\u7528",(0,i.jsx)(e.code,{children:"unhandled_exception"}),"\u628a\u5f02\u5e38\u7ed9\u5b58\u50a8\u8d77\u6765"]})]})}function c(n={}){const{wrapper:e}={...(0,_.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},73919:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/Clip_2024-08-03_20-09-47-14293ac63c3bed25eb9769345b0b67cd.png"},77578:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/Clip_2024-08-03_18-59-11-8cabd61df2c2c5d87b39820743383be8.png"}}]);