"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[61942],{14259:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u73b0\u4ee3C++\u5143\u6a21\u7248/auto/index","title":"auto","description":"\u4e00\u3001\u5404\u4e2a\u7248\u672c\u66f4\u65b0\u7684\u65b0\u7279\u6027","source":"@site/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/004-\u73b0\u4ee3C++\u5143\u6a21\u7248/003-auto/index.md","sourceDirName":"002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/004-\u73b0\u4ee3C++\u5143\u6a21\u7248/003-auto","slug":"/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u73b0\u4ee3C++\u5143\u6a21\u7248/auto/","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u73b0\u4ee3C++\u5143\u6a21\u7248/auto/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/004-\u73b0\u4ee3C++\u5143\u6a21\u7248/003-auto/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1750143828000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u7c7b\u578b\u8403\u53d6","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u73b0\u4ee3C++\u5143\u6a21\u7248/\u7c7b\u578b\u8403\u53d6/"},"next":{"title":"io\u4e36uring","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u73b0\u4ee3C++\u7f51\u7edc\u7f16\u7a0b/io\u4e36uring/"}}');var c=t(74848),i=t(28453);const s={},r="auto",l={},d=[{value:"\u4e00\u3001\u5404\u4e2a\u7248\u672c\u66f4\u65b0\u7684\u65b0\u7279\u6027",id:"\u4e00\u5404\u4e2a\u7248\u672c\u66f4\u65b0\u7684\u65b0\u7279\u6027",level:2},{value:"\u4e8c\u3001auto \u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7814\u7a76",id:"\u4e8cauto-\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7814\u7a76",level:2},{value:"2.1 auto",id:"21-auto",level:3},{value:"2.2 auto&amp;",id:"22-auto",level:3},{value:"2.3 auto&amp;&amp;",id:"23-auto",level:3},{value:"2.4 decltype(auto)",id:"24-decltypeauto",level:3},{value:"\u4e09\u3001todo ...",id:"\u4e09todo-",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",code:"code",div:"div",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",span:"span",ul:"ul",...(0,i.R)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.header,{children:(0,c.jsx)(e.h1,{id:"auto",children:"auto"})}),"\n",(0,c.jsx)(e.h2,{id:"\u4e00\u5404\u4e2a\u7248\u672c\u66f4\u65b0\u7684\u65b0\u7279\u6027",children:"\u4e00\u3001\u5404\u4e2a\u7248\u672c\u66f4\u65b0\u7684\u65b0\u7279\u6027"}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsxs)(e.p,{children:["from: ",(0,c.jsx)(e.a,{href:"https://cppreference.cn/w/cpp/keyword/auto",children:"https://cppreference.cn/w/cpp/keyword/auto"})]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"\u7528\u6cd5:"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u81ea\u52a8\u5b58\u50a8\u671f\u8bf4\u660e\u7b26 (\u4e4b\u524d C++11)"}),"\n",(0,c.jsx)(e.li,{children:"auto \u5360\u4f4d\u7b26\u7c7b\u578b\u8bf4\u660e\u7b26\u3001\u5177\u6709\u5c3e\u968f\u8fd4\u56de\u7c7b\u578b\u7684\u51fd\u6570\u58f0\u660e (\u8d77\u59cb C++11)"}),"\n",(0,c.jsx)(e.li,{children:"\u7ed3\u6784\u5316\u7ed1\u5b9a\u58f0\u660e (\u8d77\u59cb C++17)"}),"\n",(0,c.jsx)(e.li,{children:"\u7f29\u5199\u51fd\u6570\u6a21\u677f (\u8d77\u59cb C++20)"}),"\n",(0,c.jsx)(e.li,{children:"\u663e\u5f0f\u8f6c\u6362\u4e3a prvalue \u526f\u672c (\u8d77\u59cb C++23)"}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"\u53c2\u89c1:"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["decltype (",(0,c.jsx)(e.code,{children:"decltype(auto)"}),") (\u8d77\u59cb C++14)"]}),"\n",(0,c.jsx)(e.li,{children:"register (\u81ea\u52a8\u5b58\u50a8\u671f\u8bf4\u660e\u7b26) (\u4e4b\u524d C++17)"}),"\n"]}),"\n",(0,c.jsx)(e.h2,{id:"\u4e8cauto-\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7814\u7a76",children:"\u4e8c\u3001auto \u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7814\u7a76"}),"\n",(0,c.jsxs)(e.p,{children:["\u6b64\u5904\u5c06\u6bd4\u8f83 ",(0,c.jsx)(e.code,{children:"auto"}),"\u3001",(0,c.jsx)(e.code,{children:"auto&"}),"\u3001",(0,c.jsx)(e.code,{children:"auto&&"}),"\u3001",(0,c.jsx)(e.code,{children:"decltype(auto)"}),"\u4f5c\u4e3a\u8fd4\u56de\u503c\u65f6\u5019\u7684\u533a\u522b"]}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsxs)(e.p,{children:["\u5b9e\u9a8c\u4ee3\u7801: ",(0,c.jsx)(e.a,{href:"https://github.com/HengXin666/HXTest/blob/main/src/06-std-analyse/test/09-auto/01_auto_return.cpp",children:"https://github.com/HengXin666/HXTest/blob/main/src/06-std-analyse/test/09-auto/01_auto_return.cpp"})]}),"\n"]}),"\n",(0,c.jsxs)(e.p,{children:["\u6211\u4eec\u4f7f\u7528\u5982\u4e0b\u5b8f\u6765\u67e5\u770b\u5177\u4f53\u7684\u7c7b\u578b (\u4ee5\u53ca",(0,c.jsx)(e.code,{children:"clangd"}),"\u63d2\u4ef6)"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-cpp",children:'template <typename T>\nstd::string_view getType() {\n#if 1\n    auto str = __PRETTY_FUNCTION__;\n    std::string_view res{str};\n    res = res.substr(res.find(\'[\') + 1);\n    res = res.substr(0, res.size() - 1);\n    return res;\n#else\n    auto str = __FUNCSIG__; // MSVC \u7684 __FUNCSIG__\n    #error "not code"\n#endif\n}\n\n#define infoType(__TYPE__) \\\nHX::print::println(#__TYPE__": ", getType<__TYPE__>())\n'})}),"\n",(0,c.jsx)(e.p,{children:"\u5b9e\u9a8c\u6570\u636e:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-cpp",children:"int x = 0;\nconst int c_x = x;\nint& r_x = x;\nconst int& cr_x = x;\n"})}),"\n",(0,c.jsx)(e.h3,{id:"21-auto",children:"2.1 auto"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-cpp",children:"template <typename T>\nauto funA1(T t) {       // \u6709 const \u4e5f\u4e0d\u4f1a\u4fdd\u7559, \u4ec5\u8fd4\u56de T\n                        // \u5ffd\u7565\u6240\u6709\u7684 & \u4e0e &&\n    return t;\n}\n\ninfoType(decltype(funA1(x)));               // int\ninfoType(decltype(funA1(c_x)));             // int\ninfoType(decltype(funA1(r_x)));             // int\ninfoType(decltype(funA1(cr_x)));            // int\ninfoType(decltype(funA1(std::move(x))));    // int\n"})}),"\n",(0,c.jsx)(e.h3,{id:"22-auto",children:"2.2 auto&"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-cpp",children:"template <typename T>\nauto& funA2(T& t) {     // \u6709 const \u4f1a\u4fdd\u7559 const\n    return t;\n}\n\ninfoType(decltype(funA2(x)));               // int&\ninfoType(decltype(funA2(c_x)));             // const int&\ninfoType(decltype(funA2(r_x)));             // int&\ninfoType(decltype(funA2(cr_x)));            // const int&\n// infoType(decltype(funA2(std::move(x)))); // \u6ca1\u6709\u5339\u914d\u7684\u51fd\u6570\n"})}),"\n",(0,c.jsx)(e.h3,{id:"23-auto",children:"2.3 auto&&"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-cpp",children:"template <typename T>\nauto&& funA3(T&& t) {   // \u6709 const \u4f1a\u4fdd\u7559 const\n    if constexpr (0) {\n        return t; // \u8fd4\u56de & \u7c7b\u578b, \u548c auto&& + & -> auto&&& \u89e6\u53d1\u5f15\u7528\u6298\u53e0 [(&&)&] -> auto&\n    } else if constexpr (0) {\n        return std::move(t); // \u8fd4\u56de && \u7c7b\u578b, \u548c auto&& + && -> auto&&&& \u89e6\u53d1\u5f15\u7528\u6298\u53e0 [(&&)&&] -> auto&&\n    } else {\n        return std::forward<T>(t);\n    }\n}\n\n// #define __TEST__\n#ifdef __TEST__\ntemplate <typename T>\nauto&& funA3_nr(T t) {\n    return t;\n}\n#endif // !__TEST__\n\ninfoType(decltype(funA3(x)));               // int&\ninfoType(decltype(funA3(c_x)));             // const int&\ninfoType(decltype(funA3(r_x)));             // int&\ninfoType(decltype(funA3(cr_x)));            // const int&\ninfoType(decltype(funA3(std::move(x))));    // inr&&\n\n#ifdef __TEST__\ninfoType(decltype(funA3_nr(x)));            // int&\n#endif // \uff01__TEST__\n"})}),"\n",(0,c.jsx)(e.h3,{id:"24-decltypeauto",children:"2.4 decltype(auto)"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-cpp",children:"template <typename T>\ndecltype(auto) funA4(T&& t) {   // decltype(auto) \u662f\u8fd4\u56de\u503c\u7684\u5b8c\u7f8e\u8f6c\u53d1\n    if constexpr (0) {          // \u5982\u679c\u8fd4\u56de\u503c\u662f\u5f15\u7528, \u5219\u8fd4\u56de\u5f15\u7528\n                                // \u5982\u679c\u8fd4\u56de\u503c\u662f\u53f3\u503c, \u5219\u8fd4\u56de\u53f3\u503c\n                                // \u5982\u679c\u8fd4\u56de\u503c\u65e0&, \u4ec5\u8fd4\u56de\u8be5\u7c7b\u578b\n                                // \u4e00\u5207\u64cd\u4f5c\u4fdd\u7559\u539f\u6709\u7684 const\n        return t;\n    } else if constexpr (0) {\n        return std::move(t);\n    } else {\n        return std::forward<T>(t);\n    }\n}\n\ntemplate <typename T>\ndecltype(auto) funA4_nr(T t) {\n    return t;\n}\n\ninfoType(decltype(funA4(x)));               // int&\ninfoType(decltype(funA4(c_x)));             // const int&\ninfoType(decltype(funA4(r_x)));             // int&\ninfoType(decltype(funA4(cr_x)));            // const int&\ninfoType(decltype(funA4(std::move(x))));    // int&&\n\ninfoType(decltype(funA4_nr(x)));            // int\n"})}),"\n",(0,c.jsxs)(e.div,{className:"markdown-alert markdown-alert-tip",children:["\n",(0,c.jsxs)(e.p,{className:"markdown-alert-title",children:[(0,c.jsx)(e.span,{className:"octicon octicon-tip",style:{"--oct-icon":"url(\"data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' class='octicon octicon-light-bulb mr-2' viewBox='0 0 16 16' version='1.1' width='16' height='16' aria-hidden='true'%3E%3Cpath d='M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z'%3E%3C/path%3E%3C/svg%3E\")"}}),"Tip"]}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.code,{children:"decltype(auto)"})," \u548c ",(0,c.jsx)(e.code,{children:"auto&&"})," \u5728\u8fd4\u56de\u503c\u65f6\u5019\u552f\u4e00\u4e0d\u540c\u7684\u662f:"]}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsx)(e.p,{children:"\u540e\u8005\u6c38\u8fdc\u662f\u5e26\u5f15\u7528\u7684, \u800c\u524d\u8005\u662f\u771f\u6b63\u610f\u4e49\u7684\u5b8c\u7f8e\u8f6c\u53d1, \u8fd8\u53ef\u4ee5\u88abRVO(\u6d88\u9664\u590d\u5236)\u4f18\u5316"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.h2,{id:"\u4e09todo-",children:"\u4e09\u3001todo ..."})]})}function p(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(a,{...n})}):a(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>r});var o=t(96540);const c={},i=o.createContext(c);function s(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:s(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);