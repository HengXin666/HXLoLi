"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[20371],{28453:(n,i,t)=>{t.d(i,{R:()=>L,x:()=>s});var e=t(96540);const c={},r=e.createContext(c);function L(n){const i=e.useContext(r);return e.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function s(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:L(n.components),e.createElement(r.Provider,{value:i},n.children)}},48270:(n,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>L,metadata:()=>e,toc:()=>l});const e=JSON.parse('{"id":"\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6027\u8868/\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u4e36\u9759\u6001\u94fe\u8868/index","title":"\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784-\u9759\u6001\u94fe\u8868","description":"\u4ee3\u7801\u5b9e\u73b0","source":"@site/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/003-\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6027\u8868/003-\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u4e36\u9759\u6001\u94fe\u8868/index.md","sourceDirName":"001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/003-\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6027\u8868/003-\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u4e36\u9759\u6001\u94fe\u8868","slug":"/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6027\u8868/\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u4e36\u9759\u6001\u94fe\u8868/","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6027\u8868/\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u4e36\u9759\u6001\u94fe\u8868/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/003-\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6027\u8868/003-\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u4e36\u9759\u6001\u94fe\u8868/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u4e36\u6570\u7ec4","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6027\u8868/\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u4e36\u6570\u7ec4/"},"next":{"title":"\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u4e36\u5355\u5411\u94fe\u8868","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6027\u8868/\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u4e36\u5355\u5411\u94fe\u8868/"}}');var c=t(74848),r=t(28453);const L={},s="\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784-\u9759\u6001\u94fe\u8868",d={},l=[{value:"\u4ee3\u7801\u5b9e\u73b0",id:"\u4ee3\u7801\u5b9e\u73b0",level:2}];function a(n){const i={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,r.R)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(i.header,{children:(0,c.jsx)(i.h1,{id:"\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784-\u9759\u6001\u94fe\u8868",children:"\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784-\u9759\u6001\u94fe\u8868"})}),"\n",(0,c.jsx)(i.h2,{id:"\u4ee3\u7801\u5b9e\u73b0",children:"\u4ee3\u7801\u5b9e\u73b0"}),"\n",(0,c.jsx)(i.pre,{children:(0,c.jsx)(i.code,{className:"language-C",children:'#include <stdio.h>\n\n#define MAXSIZE 600\n#define OK 1    // \u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\n#define ERROR 0 // \u7a0b\u5e8f\u8fd0\u884c\u62a5\u9519\n#define TRUE 1  //\n#define FALSE 0 //\n\n// --- \u7ebf\u6027\u8868 \u5c01\u88c5 --- (\u9759\u6001\u94fe\u8868)\ntypedef int ElemType;\ntypedef struct{\n    ElemType data;  // \u6570\u636e\n    int cur;        // \u6e38\u6807\n} Component, StaticLinkList[MAXSIZE];\n\nvoid initList(StaticLinkList L);                    // \u521d\u59cb\u5316\u64cd\u4f5c, \u5efa\u7acb\u4e00\u4e2a\u7a7a\u7684\u7ebf\u6027\u8868\nint listEmpty(StaticLinkList L);                    // \u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u8868 1\u662f0\u5426\nvoid clearList(StaticLinkList L);                   // \u5c06\u7ebf\u6027\u8868\u6e05\u7a7a\nvoid getElem(StaticLinkList L, int i, int *e);      // \u5c06\u7ebf\u6027\u8868L\u7b2ci\u4e2a\u5143\u7d20\u8fd4\u56de\u7ed9e\nint locateElem(StaticLinkList L, int e);            // \u67e5\u627e\u7ebf\u6027\u8868L\u4e2d\u662f\u5426\u6709\u503c\u4e3ae\u7684\u5143\u7d20, \u6709\u5219\u8fd4\u56de\u5176\u5728\u8868\u4e2d\u7684\u5e8f\u53f7, \u54260\nint listInsert(StaticLinkList L, int i, int e);     // \u5728\u7ebf\u6027\u8868L\u4e2d\u7b2ci\u4e2a\u4f4d\u7f6e\u63d2\u5165\u65b0\u5143\u7d20e\nint listDelete(StaticLinkList L, int i, int *e);    // \u5220\u9664\u7ebf\u6027\u8868L\u4e2d\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20, \u5e76\u8fd4\u56de\u5176\u503c\u7ed9e\n\nint listAdd(StaticLinkList L, int e);               // \u5728\u7ebf\u6027\u8868\u5c3e\u90e8\u6dfb\u52a0\u5143\u7d20\nint listLength(StaticLinkList L);                   // \u8fd4\u56de\u7ebf\u6027\u8868\u7684\u957f\u5ea6\nint printStaticLinkList(StaticLinkList L);          // \u6253\u5370\u7ebf\u6027\u8868\u7684\u5185\u5bb9\n\nvoid initList(StaticLinkList L)\n{\n    // \u521d\u59cb\u5316\u64cd\u4f5c, \u5efa\u7acb\u4e00\u4e2a\u7a7a\u7684\u7ebf\u6027\u8868\n    for (int i = 0; i < MAXSIZE - 1; i++)\n    {\n        L[i].cur = i + 1;\n    }\n\n    L[MAXSIZE - 1].cur = 0;\n}\n\nint listAdd(StaticLinkList L, int e)\n{\n    // \u5728\u7ebf\u6027\u8868\u5c3e\u90e8\u6dfb\u52a0\u5143\u7d20\n    int index = MAXSIZE - 1;\n    L[L[0].cur].data = e;\n    if (L[MAXSIZE - 1].cur == 0)// \u4fee\u6539\u5934\u6307\u9488, \u6307\u5411\u7b2c\u4e00\u4e2a\u6709\u6548\u5143\u7d20\n    {\n        L[MAXSIZE - 1].cur = L[0].cur;\n    }\n    else\n    {\n        while (L[index].cur)\n        {\n            index = L[index].cur;\n        }\n        L[index].cur = L[0].cur;\n    }\n    L[L[0].cur].cur = 0;        // \u7ed3\u5c3e\n    L[0].cur++;                 // \u5907\u7528\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9\u4e0b\u6807\n}\n\nint printStaticLinkList(StaticLinkList L)\n{\n    // \u6253\u5370\u7ebf\u6027\u8868\u7684\u5185\u5bb9\n    int i = L[MAXSIZE - 1].cur;\n    while (i)\n    {\n        printf("[%d]: %d\\n", i, L[i].data);\n        i = L[i].cur;\n    }\n}\n\nint listInsert(StaticLinkList L, int i, int e)\n{\n    // \u5728\u7ebf\u6027\u8868L\u4e2d\u7b2ci\u4e2a\u4f4d\u7f6e\u63d2\u5165\u65b0\u5143\u7d20e\n    int j = 1;\n    int index = MAXSIZE - 1;\n    int index_cache = L[L[0].cur].cur;\n    while (j < i && index)\n    {   \n        index = L[index].cur;\n        ++j;\n    }\n    \n    if (!index || i < 1)\n    {\n        return ERROR;\n    }\n\n    L[L[0].cur].data = e;               // \u5c3e\u52a0\n    L[L[0].cur].cur = L[index].cur;     // \u5c3e\u6807\u4e3a\u76ee\u6807\u524d\u9a71\u6807\n    L[index].cur = L[0].cur;            // \u76ee\u6807\u524d\u9a71\u8868 \u8d4b\u503c \u5c3e\u52a0\u7d22\u5f15\n    L[0].cur = index_cache;             // [0]\u6e38\u6807 \u8d4b\u503c \u5c3e\u52a0\u539f\u6e38\u6807\n\n    return OK;\n}\n\nint listDelete(StaticLinkList L, int i, int *e)\n{\n    // \u5220\u9664\u7ebf\u6027\u8868L\u4e2d\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20, \u5e76\u8fd4\u56de\u5176\u503c\u7ed9e\n    int j = 1;\n    int index = MAXSIZE - 1;\n    \n    while (j < i && index)\n    {   \n        index = L[index].cur;\n        ++j;\n    }\n\n    if (!index || i < 1)\n    {\n        return ERROR;\n    }\n    \n    int index_cache = L[index].cur;\n    *e = L[L[index].cur].data;\n    L[0].cur = L[index].cur;\n\n    L[index].cur = L[L[index].cur].cur;\n    L[index_cache].cur = L[L[0].cur].cur;\n\n    return OK;\n}\n\nint main(void)\n{\n    // \u5355\u94fe\u8868 - \u9759\u6001\u94fe\u8868\n    // \u8fd9\u91cc\u662f\u6570\u636e\u8bbe\u8ba1, \u6e38\u6807 == 0, \u4ee3\u8868\u7ed3\u675f\n    StaticLinkList list;\n    int e;\n    initList(list);\n    listAdd(list, 233);\n    listAdd(list, 666);\n    listAdd(list, 123);\n    listAdd(list, 456);\n    listAdd(list, 789);\n    listAdd(list, 100);\n    printf("%d\\n", listInsert(list, 3, 888));\n    listDelete(list, 2, &e);\n    printf("\u5220\u9664\u4e86%d\\n", e);\n    listAdd(list, 101);\n    printStaticLinkList(list);\n\n    return 0;\n}\n'})})]})}function u(n={}){const{wrapper:i}={...(0,r.R)(),...n.components};return i?(0,c.jsx)(i,{...n,children:(0,c.jsx)(a,{...n})}):a(n)}}}]);