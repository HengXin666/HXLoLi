"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[22819],{7707:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/Clip_2024-02-28_11-40-58-356b812acdd40b131afbfd119842f3d2.png"},28453:(n,e,r)=>{r.d(e,{R:()=>a,x:()=>t});var i=r(96540);const s={},l=i.createContext(s);function a(n){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),i.createElement(l.Provider,{value:e},n.children)}},42243:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/Clip_2024-02-27_22-27-47-6b5d387a0a98419000b24733101002f3.png"},58283:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>t,default:()=>o,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6bb5\u6811/\u666e\u901a\u7ebf\u6bb5\u6811/index","title":"\u7ebf\u6bb5\u6811","description":"\u5f15\u5165","source":"@site/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/010-\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6bb5\u6811/001-\u666e\u901a\u7ebf\u6bb5\u6811/index.md","sourceDirName":"001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/010-\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6bb5\u6811/001-\u666e\u901a\u7ebf\u6bb5\u6811","slug":"/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6bb5\u6811/\u666e\u901a\u7ebf\u6bb5\u6811/","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6bb5\u6811/\u666e\u901a\u7ebf\u6bb5\u6811/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/010-\u3010\u6570\u636e\u7ed3\u6784\u3011\u7ebf\u6bb5\u6811/001-\u666e\u901a\u7ebf\u6bb5\u6811/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u4e8c\u7ef4\u524d\u7f00\u548c","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u7b97\u6cd5\u3011\u524d\u7f00\u548c/\u4e8c\u7ef4\u524d\u7f00\u548c/"},"next":{"title":"\u6c42\u6700\u5927\u516c\u7ea6\u6570or\u6700\u5c0f\u516c\u500d\u6570","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u7b97\u6cd5\u3011\u6570\u5b66/\u6700\u5927\u516c\u7ea6\u6570\u3010GCD\u3011\u4e0e\u6700\u5c0f\u516c\u500d\u6570\u3010LCM\u3011/\u6c42\u6700\u5927\u516c\u7ea6\u6570or\u6700\u5c0f\u516c\u500d\u6570/"}}');var s=r(74848),l=r(28453);const a={},t="\u7ebf\u6bb5\u6811",d={},c=[{value:"\u5f15\u5165",id:"\u5f15\u5165",level:2},{value:"\u7ebf\u6bb5\u6570\u7684\u7ed3\u6784",id:"\u7ebf\u6bb5\u6570\u7684\u7ed3\u6784",level:2},{value:"\u5355\u70b9\u4fee\u6539\u7ebf\u6bb5\u6811",id:"\u5355\u70b9\u4fee\u6539\u7ebf\u6bb5\u6811",level:2},{value:"\u5efa\u6811",id:"\u5efa\u6811",level:3},{value:"\u5355\u70b9\u4fee\u6539",id:"\u5355\u70b9\u4fee\u6539",level:3},{value:"\u533a\u95f4\u67e5\u8be2",id:"\u533a\u95f4\u67e5\u8be2",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u4e00\u4e9b\u7591\u95ee\u7684\u89e3\u51b3",id:"\u4e00\u4e9b\u7591\u95ee\u7684\u89e3\u51b3",level:2},{value:"\u4e3a\u4ec0\u4e48 [l, r] \u548c mid \u6bd4\u8f83\u5c31\u53ef\u4ee5\u786e\u5b9a\u53f6\u7ed3\u70b9/\u76ee\u6807\u533a\u95f4",id:"\u4e3a\u4ec0\u4e48-l-r-\u548c-mid-\u6bd4\u8f83\u5c31\u53ef\u4ee5\u786e\u5b9a\u53f6\u7ed3\u70b9\u76ee\u6807\u533a\u95f4",level:3},{value:"\u533a\u95f4\u4fee\u6539\u7ebf\u6bb5\u6811",id:"\u533a\u95f4\u4fee\u6539\u7ebf\u6bb5\u6811",level:2},{value:"\u5efa\u6811",id:"\u5efa\u6811-1",level:3},{value:"\u533a\u95f4\u4fee\u6539",id:"\u533a\u95f4\u4fee\u6539",level:3},{value:"lazy\u6807\u8bb0",id:"lazy\u6807\u8bb0",level:4},{value:"\u4ee3\u7801",id:"\u4ee3\u7801-1",level:3},{value:"\u7ec3\u4e60",id:"\u7ec3\u4e60",level:2},{value:"P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1",id:"p3372-\u6a21\u677f\u7ebf\u6bb5\u6811-1",level:3},{value:"\u533a\u95f4\u5e26\u4e58",id:"\u533a\u95f4\u5e26\u4e58",level:2},{value:"\u533a\u95f4\u8d4b\u503c\u548c\u52a0\u6cd5, \u6c42\u533a\u95f4\u6700\u5927\u503c",id:"\u533a\u95f4\u8d4b\u503c\u548c\u52a0\u6cd5-\u6c42\u533a\u95f4\u6700\u5927\u503c",level:2},{value:"\u6ce8\u89e3",id:"\u6ce8\u89e3",level:2},{value:"[1]",id:"1",level:3}];function m(n){const e={a:"a",annotation:"annotation",blockquote:"blockquote",code:"code",del:"del",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",mtext:"mtext",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",sup:"sup",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"\u7ebf\u6bb5\u6811",children:"\u7ebf\u6bb5\u6811"})}),"\n",(0,s.jsx)(e.h2,{id:"\u5f15\u5165",children:"\u5f15\u5165"}),"\n",(0,s.jsx)(e.p,{children:"\u73b0\u5728\u6211\u7ed9\u4f60\u4e00\u9053\u9898:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mtext,{children:"\u7ed9\u4f60"}),(0,s.jsx)(e.mi,{children:"n"}),(0,s.jsx)(e.mtext,{children:"\u4e2a\u6570"}),(0,s.jsx)(e.mo,{separator:"true",children:","}),(0,s.jsx)(e.mtext,{children:"\u7ed9\u4f60"}),(0,s.jsx)(e.mi,{children:"m"}),(0,s.jsx)(e.mtext,{children:"\u4e2a\u8303\u56f4"}),(0,s.jsx)(e.mo,{separator:"true",children:","}),(0,s.jsx)(e.mtext,{children:"\u8981\u4f60\u6c42\u8303\u56f4\u5185\u7684\u548c"}),(0,s.jsx)(e.mi,{mathvariant:"normal",children:"."}),(0,s.jsx)(e.mo,{stretchy:"false",children:"("}),(0,s.jsx)(e.mi,{children:"n"}),(0,s.jsx)(e.mo,{children:"\u2264"}),(0,s.jsxs)(e.msup,{children:[(0,s.jsx)(e.mn,{children:"10"}),(0,s.jsx)(e.mn,{children:"6"})]}),(0,s.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"\u7ed9\u4f60n\u4e2a\u6570, \u7ed9\u4f60m\u4e2a\u8303\u56f4, \u8981\u4f60\u6c42\u8303\u56f4\u5185\u7684\u548c. (n \\le 10^6)"})]})})}),(0,s.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u7ed9\u4f60"}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u4e2a\u6570"}),(0,s.jsx)(e.span,{className:"mpunct",children:","}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u7ed9\u4f60"}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u4e2a\u8303\u56f4"}),(0,s.jsx)(e.span,{className:"mpunct",children:","}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u8981\u4f60\u6c42\u8303\u56f4\u5185\u7684\u548c"}),(0,s.jsx)(e.span,{className:"mord",children:"."}),(0,s.jsx)(e.span,{className:"mopen",children:"("}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.jsx)(e.span,{className:"mrel",children:"\u2264"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord",children:"1"}),(0,s.jsxs)(e.span,{className:"mord",children:[(0,s.jsx)(e.span,{className:"mord",children:"0"}),(0,s.jsx)(e.span,{className:"msupsub",children:(0,s.jsx)(e.span,{className:"vlist-t",children:(0,s.jsx)(e.span,{className:"vlist-r",children:(0,s.jsx)(e.span,{className:"vlist",style:{height:"0.8141em"},children:(0,s.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,s.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,s.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,s.jsx)(e.span,{className:"mord mtight",children:"6"})})]})})})})})]}),(0,s.jsx)(e.span,{className:"mclose",children:")"})]})]})]})}),"\n",(0,s.jsxs)(e.p,{children:["\u8fd9\u4e0d\u662f\u5f88\u7b80\u5355\uff0c\u4e0d\u662f\u5c0f\u5b66\u751f\u7684 ",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mi,{children:"I"}),(0,s.jsx)(e.mi,{children:"O"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"IO"})]})})}),(0,s.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"0.6833em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.07847em"},children:"I"}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"})]})})]})," \u9898, \u79d2\u6740."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u518d\u52a0\u5f3a:"}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mtext,{children:"\u7ed9\u4f60"}),(0,s.jsx)(e.mi,{children:"n"}),(0,s.jsx)(e.mtext,{children:"\u4e2a\u6570"}),(0,s.jsx)(e.mo,{separator:"true",children:","}),(0,s.jsx)(e.mtext,{children:"\u7ed9\u4f60"}),(0,s.jsx)(e.mi,{children:"k"}),(0,s.jsx)(e.mtext,{children:"\u4e2a\u64cd\u4f5c"}),(0,s.jsx)(e.mo,{separator:"true",children:","}),(0,s.jsx)(e.mtext,{children:"\u8ba9\u4f60\u5728"}),(0,s.jsx)(e.mo,{stretchy:"false",children:"["}),(0,s.jsx)(e.mi,{children:"l"}),(0,s.jsx)(e.mo,{separator:"true",children:","}),(0,s.jsx)(e.mtext,{children:"\xa0"}),(0,s.jsx)(e.mi,{children:"r"}),(0,s.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,s.jsx)(e.mtext,{children:"\u533a\u95f4\u5185\u52a0\u4e00\u4e2a\u6570"}),(0,s.jsx)(e.mo,{separator:"true",children:","}),(0,s.jsx)(e.mtext,{children:"\u6216\u8ba9\u4f60\u6c42\u533a\u95f4\u5185\u7684\u548c"}),(0,s.jsx)(e.mi,{mathvariant:"normal",children:"."}),(0,s.jsx)(e.mo,{stretchy:"false",children:"("}),(0,s.jsx)(e.mi,{children:"n"}),(0,s.jsx)(e.mo,{children:"\u2264"}),(0,s.jsxs)(e.msup,{children:[(0,s.jsx)(e.mn,{children:"10"}),(0,s.jsx)(e.mn,{children:"6"})]}),(0,s.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"\u7ed9\u4f60n\u4e2a\u6570, \u7ed9\u4f60k\u4e2a\u64cd\u4f5c, \u8ba9\u4f60\u5728[l,\\ r]\u533a\u95f4\u5185\u52a0\u4e00\u4e2a\u6570, \u6216\u8ba9\u4f60\u6c42\u533a\u95f4\u5185\u7684\u548c. (n \\le 10^6)"})]})})}),(0,s.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u7ed9\u4f60"}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u4e2a\u6570"}),(0,s.jsx)(e.span,{className:"mpunct",children:","}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u7ed9\u4f60"}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u4e2a\u64cd\u4f5c"}),(0,s.jsx)(e.span,{className:"mpunct",children:","}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u8ba9\u4f60\u5728"}),(0,s.jsx)(e.span,{className:"mopen",children:"["}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,s.jsx)(e.span,{className:"mpunct",children:","}),(0,s.jsx)(e.span,{className:"mspace",children:"\xa0"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,s.jsx)(e.span,{className:"mclose",children:"]"}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u533a\u95f4\u5185\u52a0\u4e00\u4e2a\u6570"}),(0,s.jsx)(e.span,{className:"mpunct",children:","}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u6216\u8ba9\u4f60\u6c42\u533a\u95f4\u5185\u7684\u548c"}),(0,s.jsx)(e.span,{className:"mord",children:"."}),(0,s.jsx)(e.span,{className:"mopen",children:"("}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.jsx)(e.span,{className:"mrel",children:"\u2264"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord",children:"1"}),(0,s.jsxs)(e.span,{className:"mord",children:[(0,s.jsx)(e.span,{className:"mord",children:"0"}),(0,s.jsx)(e.span,{className:"msupsub",children:(0,s.jsx)(e.span,{className:"vlist-t",children:(0,s.jsx)(e.span,{className:"vlist-r",children:(0,s.jsx)(e.span,{className:"vlist",style:{height:"0.8141em"},children:(0,s.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,s.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,s.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,s.jsx)(e.span,{className:"mord mtight",children:"6"})})]})})})})})]}),(0,s.jsx)(e.span,{className:"mclose",children:")"})]})]})]})}),"\n",(0,s.jsx)(e.p,{children:"\u524d\u7f00\u548c\u5df2\u7ecf\u65e0\u80fd\u4e3a\u529b\u4e86..."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u7ebf\u6bb5\u6570\u7684\u7ed3\u6784",children:"\u7ebf\u6bb5\u6570\u7684\u7ed3\u6784"}),"\n",(0,s.jsxs)(e.p,{children:["\u6240\u4ee5\u4eba\u4eec\u5c31\u53d1\u660e\u4e86 ",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsx)(e.mrow,{children:(0,s.jsx)(e.mtext,{children:"\u7ebf\u6bb5\u6811"})}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"\u7ebf\u6bb5\u6811"})]})})}),(0,s.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"0.6833em"}}),(0,s.jsx)(e.span,{className:"mord cjk_fallback",children:"\u7ebf\u6bb5\u6811"})]})})]}),", \u56fe\u5982\u4e0b: (",(0,s.jsx)(e.em,{children:"\u793a\u4f8b\u662f\u5b58\u50a8\u4e86 1 ~ 10 \u4e2a\u6570\u7684\u7ebf\u6bb5\u6811"}),")"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"Clip_2024-02-27_22-27-47.png",src:r(42243).A+"",width:"1277",height:"822"})}),"\n",(0,s.jsx)(e.p,{children:"\u5176\u4e2d:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7ea2\u8272\u662f\u6811\u7684\u7ed3\u70b9(\u5b9e\u9645\u7684\u5b58\u503c\u662f \u5de6\u53f3\u5b69\u5b50\u7684\u503c\u7684\u548c),"}),"\n",(0,s.jsx)(e.li,{children:"\u9ec4\u8272\u662f\u53f6\u5b50,"}),"\n",(0,s.jsxs)(e.li,{children:["\u84dd\u8272\u5219\u662f\u6811\u7684\u7ebf\u6027\u8868\u793a\u7684\u6570\u7ec4\u4e0b\u6807(\u4e0d\u59a8\u79f0\u8fd9\u4e2a\u6570\u7ec4\u53eb\u505a",(0,s.jsx)(e.code,{children:"tree"}),")"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u5355\u70b9\u4fee\u6539\u7ebf\u6bb5\u6811",children:"\u5355\u70b9\u4fee\u6539\u7ebf\u6bb5\u6811"}),"\n",(0,s.jsx)(e.h3,{id:"\u5efa\u6811",children:"\u5efa\u6811"}),"\n",(0,s.jsx)(e.p,{children:"\u5176\u4e2d:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u5bf9\u4e8e",(0,s.jsx)(e.code,{children:"tree[1]"}),"\u5373\u6811\u7684\u6839\u7ed3\u70b9, \u8868\u793a\u7684\u662f [1, 10] \u8fd9\u4e2a\u533a\u95f4\u7684\u548c"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"tree[1]"})," \u7684 \u5de6\u5b50\u6811 ",(0,s.jsx)(e.code,{children:"tree[1 * 2]"})," \u5219\u4ee3\u8868 [1, (1 + 10) / 2] \u8fd9\u4e2a\u533a\u95f4\u7684\u548c"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"tree[1]"})," \u7684 \u53f3\u5b50\u6811 ",(0,s.jsx)(e.code,{children:"tree[1 * 2 + 1]"})," \u5219\u4ee3\u8868 [(1 + 10) / 2 + 1, 10] \u8fd9\u4e2a\u533a\u95f4\u7684\u548c"]}),"\n",(0,s.jsx)(e.li,{children:"\u4ee5\u6b64\u7c7b\u63a8"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-C++",children:"/** \u5bf9\u4e8e\u6784\u5efa\u65f6\u5019, \u4f1a\u51fa\u73b0 l == r \u7684\u63a8\u5bfc: (\u6ce8: \u4e3a\u4ec0\u4e48\u662f0, \u662f\u56e0\u4e3a\u8fd9\u4e2a\u5bf9\u5e94\u7684\u662farr(\u88ab\u6784\u5efa\u7684\u6570\u7ec4)\u7684\u4e0b\u6807(\u5177\u4f53\u8bf7\u89c1\u5b8c\u6574\u4ee3\u7801))\n * 0, (n - 1) / 2\n * 0, (n - 1) / 4 \n * 0, (n - 1) / 8\n * 0, (n - 1) / 16\n * 0, (n - 1) / 32\n * 0, (n - 1) / 2^(n + 1)\n * 0, \u4e0b\u53d6\u6574{(n - 1) / 2^(n + 1)} --\x3e 0 \u5373 l == r\n * */\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u76f4\u5230 [l, r] \u5176\u4e2d ",(0,s.jsx)(e.code,{children:"l == r"})," \u65f6, \u5219\u4e3a\u53f6\u5b50\u7ed3\u70b9."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u76f4\u5230\u5168\u90e8\u7684\u53f6\u7ed3\u70b9\u90fd\u5df2\u7ecf\u521d\u59cb\u5316\u5b8c\u6bd5, \u6211\u4eec\u5c31\u53ef\u4ee5\u63a5\u6536\u64cd\u4f5c\u4e86:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\u5bf9\u533a\u95f4(\u70b9) [t, t] \u52a0\u4e0a\u4e00\u4e2a\u6570 ",(0,s.jsx)(e.code,{children:"k"})," (\u73b0\u5728\u7f16\u5199\u7684\u662f\u521d\u7ea7\u7248\u672c: \u652f\u6301\u5355\u70b9\u4fee\u6539\u7684\u7ebf\u6bb5\u6811)"]}),"\n",(0,s.jsx)(e.li,{children:"\u67e5\u8be2 [l, r] \u533a\u95f4\u7684\u548c"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\u5355\u70b9\u4fee\u6539",children:"\u5355\u70b9\u4fee\u6539"}),"\n",(0,s.jsx)(e.p,{children:"\u5bf9\u4e8e\u5355\u70b9\u4fee\u6539, \u6211\u4eec\u7684\u6b65\u9aa4\u662f:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\u9012\u5f52, \u9012: \u67e5\u627e\u5230\u53f6\u5b50\u7ed3\u70b9[t, t], \u5bf9\u5176\u52a0",(0,s.jsx)(e.code,{children:"k"})]}),"\n",(0,s.jsxs)(e.li,{children:["\u9012\u5f52, \u5f52: (\u66f4\u65b0\u533a\u95f4) ",(0,s.jsx)(e.code,{children:"tree[i] = tree[i * 2] + tree[i * 2 + 1]"})]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u5b8c\u6210!"}),"\n",(0,s.jsx)(e.h3,{id:"\u533a\u95f4\u67e5\u8be2",children:"\u533a\u95f4\u67e5\u8be2"}),"\n",(0,s.jsx)(e.p,{children:"\u9996\u5148\u6211\u4eec\u8981\u627e\u5230\u67e5\u8be2\u7684\u76ee\u6807\u533a\u95f4 [l, r]"}),"\n",(0,s.jsx)(e.p,{children:"\u5728\u67e5\u8be2\u4e2d\u6211\u4eec\u5c31\u5206\u6210 3 \u79cd\u60c5\u51b5:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"\u5f53\u524d\u67e5\u627e \u5168\u90e8\u4f4d\u4e8e \u5de6\u8fb9"}),"\n",(0,s.jsx)(e.li,{children:"\u5f53\u524d\u67e5\u627e \u5168\u90e8\u4f4d\u4e8e \u53f3\u8fb9"}),"\n",(0,s.jsx)(e.li,{children:"\u5f53\u524d\u67e5\u627e \u8d2f\u7a7f\u4e24\u8fb9, \u5bf9\u7b56: return \u5de6\u8fb9\u90e8\u5206 + \u53f3\u8fb9\u90e8\u5206"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u5b8c\u6210!"}),"\n",(0,s.jsx)(e.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-C++",children:'#include <cstdio>\n#include <vector>\n#include <iostream>\n\nusing namespace std;\n\n// \u6784\u5efa\u7ebf\u6bb5\u6811\n// \u521d\u59cb\u5316\u65f6\u4f20\u5165: buildTree(arr, tree, 1, 0, n - 1);\nvoid buildTree(vector<int>& arr, vector<int>& tree, int now_i, int l, int r) {\n    if (l == r) {\n        tree[now_i] = arr[l];\n        return;\n    }\n\n    int mid = l + (r - l) / 2;\n    buildTree(arr, tree, now_i * 2, l, mid); /** \u663e\u7136\u518d\u67d0\u4e2a\u5730\u65b9\u7684\u9012\u5f52\u4f1a\u51fa\u73b0\u5f52\u4e2d: l == r \u7684\u60c5\u51b5\n                                              * 0, (n - 1) / 2\n                                              * 0, (n - 1) / 4 \n                                              * 0, (n - 1) / 8\n                                              * 0, (n - 1) / 16\n                                              * 0, (n - 1) / 32\n                                              * 0, (n - 1) / 2^(n + 1)\n                                              * 0, \u4e0b\u53d6\u6574{(n - 1) / 2^(n + 1)} --\x3e 0 \u5373 l == r\n                                              */\n    buildTree(arr, tree, now_i * 2 + 1, mid + 1, r);\n\n    tree[now_i] = tree[now_i * 2] + tree[now_i * 2 + 1];\n}\n\n/**\n * \u5bf9 [target, target] + k\n * now_i \u5f53\u524d\u8282\u70b9\n * l \u5de6\u8fb9\u754c\n * r \u53f3\u8fb9\u754c\n * target \u76ee\u6807\u7ed3\u70b9\n * k \u9700\u8981\u589e\u52a0\u7684\u503c\n * tree \u7ebf\u6bb5\u6811\n */\nvoid addTree(int now_i, int l, int r, int target, int k, vector<int>& tree) {\n    if (l == r) {\n        tree[l] += k;\n        return;\n    }\n\n    int mid = l + (r - l) / 2;\n    if (target <= mid) { // \u4e3a\u4ec0\u4e48\u548c mid \u6bd4?, \u539f\u7406\u5176\u5b9e\u540c\u4e0a\n        addTree(now_i * 2, l, mid, target, k, tree);\n    }\n    else {\n        addTree(now_i * 2 + 1, mid + 1, r, target, k, tree);\n    }\n\n    tree[now_i] = tree[now_i * 2] + tree[now_i * 2 + 1];\n}\n\n/**\n * \u67e5\u8be2 [L, R] \u533a\u95f4\u7684\u548c\n * now_i \u5f53\u524d\u8282\u70b9\n * l \u5de6\u8fb9\u754c\n * r \u53f3\u8fb9\u754c\n * L \u76ee\u6807[L,R]\n * R \u76ee\u6807[L,R]\n * tree \u7ebf\u6bb5\u6811\n */\nint findTree(int now_i, int l, int r, int L, int R, vector<int>& tree) {\n    if (L <= l && r <= R)\n        return tree[now_i];\n\n    int mid = l + (r - l) / 2, res = 0;\n    if (L <= mid) {\n        res = findTree(now_i * 2, l, mid, L, R, tree);\n    }\n    \n    if (R > mid) {\n        res += findTree(now_i * 2 + 1, mid + 1, r, L, R, tree);\n    }\n\n    return res;\n}\n\nint main() {\n    vector<int> arr{ 1,1,1,1,1,1, };\n\n    int n = arr.size();\n\n    // \u6784\u5efa\u7ebf\u6bb5\u6811\n    vector<int> tree(n * 4); // 4 \u500d\u7a7a\u95f4\u8db3\u591f\n    buildTree(arr, tree, 1, 0, n - 1);\n\n    addTree(1, 1, n, 3, 3, tree);\n\n    // \u652f\u6301\u5355\u70b9\u589e\u52a0(\u51cf), \u533a\u95f4\u67e5\u8be2\u7684\u7ebf\u6bb5\u6811\n    int result = findTree(1, 0, n - 1, 1, 5, tree);\n    cout << "\u533a\u95f4 [1, 5] \u7684\u548c\uff1a" << result << endl;\n\n    return 0;\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u4e00\u4e9b\u7591\u95ee\u7684\u89e3\u51b3",children:"\u4e00\u4e9b\u7591\u95ee\u7684\u89e3\u51b3"}),"\n",(0,s.jsx)(e.h3,{id:"\u4e3a\u4ec0\u4e48-l-r-\u548c-mid-\u6bd4\u8f83\u5c31\u53ef\u4ee5\u786e\u5b9a\u53f6\u7ed3\u70b9\u76ee\u6807\u533a\u95f4",children:"\u4e3a\u4ec0\u4e48 [l, r] \u548c mid \u6bd4\u8f83\u5c31\u53ef\u4ee5\u786e\u5b9a\u53f6\u7ed3\u70b9/\u76ee\u6807\u533a\u95f4"}),"\n",(0,s.jsxs)(e.p,{children:["\u672c\u8d28\u306e\u539f\u56e0\u662f: ",(0,s.jsxs)(e.span,{style:{color:"red"},children:[(0,s.jsx)(e.code,{children:"mid"})," ",(0,s.jsx)(e.code,{children:"[l, r]"})," \u4f7f\u7528\u7684\u7d22\u5f15\u662f \u539f\u6570\u7ec4\u7684(\u5efa\u6811\u65f6\u4f7f\u7528\u7684\u6570\u7ec4(",(0,s.jsx)(e.code,{children:"arr"}),"))\u7684\u7d22\u5f15, \u800c\u4e0d\u662f\u7ebf\u6bb5\u6811(",(0,s.jsx)(e.code,{children:"tree"}),")\u7684\u7d22\u5f15, \u6240\u4ee5\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8f83, \u800c\u6bd4\u8f83\u8fc7\u540e, \u4f5c\u7528\u7684\u5374\u662f",(0,s.jsx)(e.code,{children:"tree"}),"\u6570\u7ec4(\u4f7f\u7528",(0,s.jsx)(e.code,{children:"now_i"}),")"]})]}),"\n",(0,s.jsx)(e.p,{children:"\u524d\u4eba\u7684\u5de7\u5999\u8bbe\u8ba1 awa..."}),"\n",(0,s.jsx)(e.h2,{id:"\u533a\u95f4\u4fee\u6539\u7ebf\u6bb5\u6811",children:"\u533a\u95f4\u4fee\u6539\u7ebf\u6bb5\u6811"}),"\n",(0,s.jsx)(e.h3,{id:"\u5efa\u6811-1",children:"\u5efa\u6811"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u540c\u4e0a"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\u533a\u95f4\u4fee\u6539",children:"\u533a\u95f4\u4fee\u6539"}),"\n",(0,s.jsx)(e.p,{children:"\u5bf9\u533a\u95f4 [l, r] \u52a0\u4e0a\u4e00\u4e2a\u6570 k"}),"\n",(0,s.jsxs)(e.p,{children:["(\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u6267\u884c r - l \u6b21 \u7684\u5206\u522b\u5bf9\u533a\u95f4\u7684\u5355\u70b9\u8fdb\u884c\u4fee\u6539, \u4f46\u662f\u663e\u7136\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a ",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mi,{children:"O"}),(0,s.jsx)(e.mo,{stretchy:"false",children:"("}),(0,s.jsx)(e.mo,{stretchy:"false",children:"("}),(0,s.jsx)(e.mi,{children:"r"}),(0,s.jsx)(e.mo,{children:"\u2212"}),(0,s.jsx)(e.mi,{children:"l"}),(0,s.jsx)(e.mo,{stretchy:"false",children:")"}),(0,s.jsx)(e.mo,{children:"\u2217"}),(0,s.jsx)(e.mi,{children:"l"}),(0,s.jsx)(e.mi,{children:"o"}),(0,s.jsx)(e.mi,{children:"g"}),(0,s.jsx)(e.mi,{children:"N"}),(0,s.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"O((r - l) * logN)"})]})})}),(0,s.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,s.jsx)(e.span,{className:"mopen",children:"(("}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,s.jsx)(e.span,{className:"mclose",children:")"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.jsx)(e.span,{className:"mbin",children:"\u2217"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"o"}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10903em"},children:"N"}),(0,s.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),", \u67d0\u4e9b\u60c5\u51b5\u4e0b\u4ee3\u4ef7\u53ef\u80fd\u592a\u5927\u4e86: \u5bf9\u4e8eN\u6b21\u5bf9\u533a\u95f4[0, N]\u7684\u4fee\u6539\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f4\u63a5\u5c31 ",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mi,{children:"O"}),(0,s.jsx)(e.mo,{stretchy:"false",children:"("}),(0,s.jsxs)(e.msup,{children:[(0,s.jsx)(e.mi,{children:"N"}),(0,s.jsx)(e.mn,{children:"2"})]}),(0,s.jsx)(e.mi,{children:"l"}),(0,s.jsx)(e.mi,{children:"o"}),(0,s.jsx)(e.mi,{children:"g"}),(0,s.jsx)(e.mi,{children:"N"}),(0,s.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(N^2logN)"})]})})}),(0,s.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,s.jsx)(e.span,{className:"mopen",children:"("}),(0,s.jsxs)(e.span,{className:"mord",children:[(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10903em"},children:"N"}),(0,s.jsx)(e.span,{className:"msupsub",children:(0,s.jsx)(e.span,{className:"vlist-t",children:(0,s.jsx)(e.span,{className:"vlist-r",children:(0,s.jsx)(e.span,{className:"vlist",style:{height:"0.8141em"},children:(0,s.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,s.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,s.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,s.jsx)(e.span,{className:"mord mtight",children:"2"})})]})})})})})]}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"o"}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10903em"},children:"N"}),(0,s.jsx)(e.span,{className:"mclose",children:")"})]})})]})," \u4e86, (\u4e00\u4e0b\u5b50\u5c31\u88ab\u5361\u4e86qwq))"]}),"\n",(0,s.jsxs)(e.p,{children:["\u6240\u4ee5\u4eba\u4eec\u53c8\u53d1\u660e\u4e86",(0,s.jsx)(e.code,{children:"lazy"}),"\u6807\u8bb0, \u4fd7\u79f0\u61d2\u6807\u8bb0"]}),"\n",(0,s.jsx)(e.h4,{id:"lazy\u6807\u8bb0",children:"lazy\u6807\u8bb0"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsx)(e.tr,{children:(0,s.jsx)(e.th,{style:{textAlign:"center"},children:"##container##"})})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsx)(e.tr,{children:(0,s.jsxs)(e.td,{style:{textAlign:"center"},children:["\u5177\u4f53\u601d\u8def",(0,s.jsx)(e.sup,{children:"[1]"})]})}),(0,s.jsx)(e.tr,{children:(0,s.jsx)(e.td,{style:{textAlign:"center"},children:(0,s.jsx)(e.img,{alt:"Clip_2024-02-27_23-06-29.png ##w800##",src:r(84228).A+"",width:"1131",height:"570"})})}),(0,s.jsx)(e.tr,{children:(0,s.jsx)(e.td,{style:{textAlign:"center"},children:(0,s.jsx)(e.img,{alt:"Clip_2024-02-28_11-40-58.png ##w800##",src:r(7707).A+"",width:"997",height:"588"})})})]})]}),"\n",(0,s.jsx)(e.h3,{id:"\u4ee3\u7801-1",children:"\u4ee3\u7801"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u89c1\u7ec3\u4e60"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u7ec3\u4e60",children:"\u7ec3\u4e60"}),"\n",(0,s.jsx)(e.h3,{id:"p3372-\u6a21\u677f\u7ebf\u6bb5\u6811-1",children:"P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-C++",children:'#include <cstdio>\n#include <vector>\nusing namespace std;\n\ntypedef struct {\n    long long var;\n    long long lazy;\n} STree;\n\n// \u6784\u5efa\u7ebf\u6bb5\u6811\n// \u521d\u59cb\u5316\u65f6\u4f20\u5165: buildTree(arr, tree, 1, 0, n - 1);\nvoid buildTree(vector<long long>& arr, vector<STree>& tree, int now_i, int l, int r) {\n    if (l == r) {\n        tree[now_i].var = arr[l];\n        return;\n    }\n\n    int mid = l + (r - l) / 2;\n    buildTree(arr, tree, now_i * 2, l, mid); /** \u663e\u7136\u518d\u67d0\u4e2a\u5730\u65b9\u7684\u9012\u5f52\u4f1a\u51fa\u73b0\u5f52\u4e2d: l == r \u7684\u60c5\u51b5\n                                              * 0, (n - 1) / 2\n                                              * 0, (n - 1) / 4\n                                              * 0, (n - 1) / 8\n                                              * 0, (n - 1) / 16\n                                              * 0, (n - 1) / 32\n                                              * 0, (n - 1) / 2^(n + 1)\n                                              * 0, \u4e0b\u53d6\u6574{(n - 1) / 2^(n + 1)} --\x3e 0 \u5373 l == r\n                                              */\n    buildTree(arr, tree, now_i * 2 + 1, mid + 1, r);\n\n    tree[now_i].var = tree[now_i * 2].var + tree[now_i * 2 + 1].var;\n}\n\n// \u4e0b\u4f20\u61d2\u6807\u8bb0\ninline void playLazyToTree(int now_i, int l, int r, long long lazy, vector<STree>& tree) {\n    tree[now_i].var += lazy * (r - l + 1); // \u6ce8\u610f [l, r] \u533a\u95f4, \u5219 += (r -  l + 1) \u4e2a k \u4e86\n    tree[now_i].lazy += lazy;\n}\n\n/**\n * \u5bf9 [L, R] + k\n * now_i \u5f53\u524d\u8282\u70b9\n * l \u5de6\u8fb9\u754c\n * r \u53f3\u8fb9\u754c\n * [L, R] \u76ee\u6807\u533a\u95f4\n * k \u9700\u8981\u589e\u52a0\u7684\u503c\n * tree \u7ebf\u6bb5\u6811\n */\nvoid addTree(int now_i, int l, int r, int L, int R, long long k, vector<STree>& tree) {\n    if (L <= l && r <= R) {\n        playLazyToTree(now_i, l, r, k, tree); // \u53c2\u6570\u4e00\u4e3anow_i, \u5373\u5bf9\u81ea\u5df1\u8d4b\u503c\n        return;\n    }\n\n    int mid = l + (r - l) / 2;\n    // \u61d2\u6807\u8bb0\u4e0b\u4f20\n    if (tree[now_i].lazy != 0) {\n        playLazyToTree(now_i * 2, l, mid, tree[now_i].lazy, tree);\n        playLazyToTree(now_i * 2 + 1, mid + 1, r, tree[now_i].lazy, tree);\n        tree[now_i].lazy = 0; // \u6e05\u9664\u5f53\u524d\u7684\u61d2\u6807\u8bb0\n    }\n\n    // \u641c\u7d22\u5de6\u53f3\u5b50\u533a\u95f4\n    if (L <= mid) {\n        addTree(now_i * 2, l, mid, L, R, k, tree);\n    }\n\n\n    if (R > mid) {\n        addTree(now_i * 2 + 1, mid + 1, r, L, R, k, tree);\n    }\n\n    tree[now_i].var = tree[now_i * 2].var + tree[now_i * 2 + 1].var;\n}\n\n/**\n * \u67e5\u8be2 [L, R] \u533a\u95f4\u7684\u548c\n * now_i \u5f53\u524d\u8282\u70b9\n * l \u5de6\u8fb9\u754c\n * r \u53f3\u8fb9\u754c\n * L \u76ee\u6807[L,R]\n * R \u76ee\u6807[L,R]\n * tree \u7ebf\u6bb5\u6811\n */\nlong long findTree(int now_i, int l, int r, int L, int R, vector<STree>& tree) {\n    if (L <= l && r <= R)\n        return tree[now_i].var;\n\n    int mid = l + (r - l) / 2;\n    // \u61d2\u6807\u8bb0\u4e0b\u4f20\n    if (tree[now_i].lazy != 0) {\n        playLazyToTree(now_i * 2, l, mid, tree[now_i].lazy, tree);\n        playLazyToTree(now_i * 2 + 1, mid + 1, r, tree[now_i].lazy, tree);\n        tree[now_i].lazy = 0; // \u6e05\u9664\u5f53\u524d\u7684\u61d2\u6807\u8bb0\n    }\n\n    long long res = 0;\n    if (L <= mid) { // \u4e3a\u4ec0\u4e48\u548c mid \u6bd4?, \u89c1:\n        res = findTree(now_i * 2, l, mid, L, R, tree);\n    }\n\n    if (R > mid) {\n        res += findTree(now_i * 2 + 1, mid + 1, r, L, R, tree);\n    }\n\n    return res;\n}\n\nint main(void)\n{\n    int n, m;\n    scanf("%d %d", &n, &m);\n    vector<STree> tree(n * 4);\n    {\n        vector<long long> arr(n);\n        for (int i = 0; i < n; ++i) {\n            scanf("%lld", &arr[i]);\n        }\n        buildTree(arr, tree, 1, 0, n - 1);\n    }\n\n    for (int i = 0; i < m; ++i) {\n        int j;\n        scanf("%d", &j);\n        if (j == 1) {\n            int x, y;\n            long long k;\n            scanf("%d %d %lld", &x, &y, &k);\n            addTree(1, 0, n - 1, x - 1, y - 1, k, tree);\n        }\n        else {\n            int x, y;\n            scanf("%d %d", &x, &y);\n            printf("%lld\\n", findTree(1, 0, n - 1, x - 1, y - 1, tree));\n        }\n    }\n    \n    return 0;\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u533a\u95f4\u5e26\u4e58",children:"\u533a\u95f4\u5e26\u4e58"}),"\n",(0,s.jsxs)(e.p,{children:["\u9898\u76ee: ",(0,s.jsx)(e.a,{href:"https://www.luogu.com.cn/problem/P3373",children:"P3373 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 2"})]}),"\n",(0,s.jsx)(e.p,{children:"\u6ce8\u89e3: \u518d\u6765\u4e2a\u61d2\u6807\u8bb0\u4e00\u4e0b\u4e58\u7684\u5373\u53ef, \u601d\u8def\u540c; \u4f46\u662f\u6709\u5751"}),"\n",(0,s.jsx)(e.p,{children:"\u5f97\u5148\u4e58\u540e\u52a0, \u800c\u4e14\u4f20\u9012\u7684\u65f6\u5019, \u4e58\u8981\u8bb0\u5f97\u628a \u52a0\u7684\u61d2\u6807\u8bb0\u4e5f\u4e58\u4e0a!!!"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-C++",children:"              8 + 3*4(x1, +4) // \u6ce8\u610f, \u73b0\u5728\u6b63\u786e\u7684\u6570\u5c31\u53ea\u6709 tree[1] ((5 + 2 * 4) + (3 + 4) = 20)\n              /        \\\n          5(x1, +0)     3(x2, +0)\n          /    \\\n        2       3\n\n\u5168\u533a\u95f4\u4e582\n              20*2(x2, +4*2)\n              /        \\\n          5(x1, +0)     3(x2, +0)\n          /    \\\n        2       3\n                  \n\u67e5\u8be2 [1, 1]:\n1. \u4e0b\u4f20 val=10 \u8282\u70b9\n              20*2(x2, +4*2)------\\\n              /                       \\\n          5*2 + 8*2(x2, +8)     3*2+8(x4, +8)\n          /    \\\n        2       3\n\n2. \u518d\u4e0b\u4f20\n              40(x2, +4*2)------\\\n              /                     \\\n          5*2 + 8*2(x2, +8)   14(x4, +8)\n          /       \\\n        2*2+8   3*2+8\n\n3. \u9a8c\u8bc1\u6ca1\u6709\u95ee\u9898\n              40(x2, +4*2)------\\\n              /                     \\\n          26(x2, +1*2+8)   14(x4, +8)\n          /       \\\n         12       14\n\n\u53ef\u4ee5\u9a8c\u8bc1\u786e\u5b9e\u9700\u8981\u5728\u4e58\u7684\u65f6\u5019\u628a\u52a0\u7684lazy\u6807\u8bb0\u4e5f\u4e58\u4e0a\u5bf9\u5e94\u7684k\n\n\u6cdb\u5316\u95ee\u9898: (\u5176\u4e2d [i...j].len=2, \u4e0b\u65b9\u7684[i, j]\u662f\u5148\u6709\u4e58\u518d\u6709\u52a0\u7684)\n\n      (i+j)*a+b*([i...j].len) {xa, +b} // \u5148*a, \u518d\u52a0b\u7684\n     /    \\\n    i      j\n\n\u5bf9\u4e8e\u67e5\u8be2i (\u4e0b\u4f20\u61d2\u6807\u8bb0)\n\n      (i+j)*a+b*([i...j].len) {x1, +0}\n     /        \\\n    i*a+b      j*a+b\n\n\u5bf9[i,j]\u52a0c\n\n      (i+j)*a+(b+c)*([i...j].len) {x1, +c}\n     /        \\\n    i*a+b      j*a+b\n\n\u5bf9[i,j]\u4e58d\n\n      d*[(i+j)*a+(b+c)*([i...j].len)] {xd, +c*d} // \u8fd9\u6837\u5f80\u6b63\u786e\u7684\u6f14\u793a\u4e86: c \u4e5f\u5f97\u4e58 d\n     /        \\\n    i*a+b      j*a+b\n\n\u5bf9\u4e8e\u67e5\u8be2i (\u4e0b\u4f20\u61d2\u6807\u8bb0)\n\n      d*[(i+j)*a+(b+c)*([i...j].len)] {x1, +0}\n     /                 \\\n    d*(i*a+b)+c*d     d*(j*a+b)+c*d\n\n\u770b\u5230\u8fd9\u91cc\u4f60\u5e94\u8be5\u660e\u767d\u4e86\u5427?!\nd*[(i+j)*a+(b+c)*([i...j].len)] == d*(i*a+b)+c*d + d*(j*a+b)+c*d\n                                == d*(i*a+b+c+j*a+b+c)\n                                == d*[(i+j)*a + 2*(b+c)], \u6f14\u793a, \u6bd5.\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u4ee5\u540e\u5f00ll\u65e9\u70b9\u5f00, scanf\u597d\u591a\u90fd\u6ca1\u6709\u8c03,,,!"}),"\n",(0,s.jsx)(e.p,{children:"\u6ce8\u610f: \u4e58\u7684\u521d\u59cb\u5316\u8981\u4e3a1, (0*\u4efb\u4f55\u6570 === 0)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-C++",children:'#include <cstdio>\n#include <vector>\n\nusing namespace std;\n\ntypedef struct {\n    long long var;\n    long long addL;\n    long long cL;\n} STree;\n\nvoid initSTree(int now_i, int l, int r, vector<STree>& tree, const vector<long long>& arr) {\n    if (l == r) {\n        tree[now_i].var = arr[l];\n        return;\n    }\n\n    int mid = l + (r - l) / 2;\n    initSTree(now_i * 2, l, mid, tree, arr);\n    initSTree(now_i * 2 + 1, mid + 1, r, tree, arr);\n\n    tree[now_i].var = tree[now_i * 2].var + tree[now_i * 2 + 1].var;\n}\n\ninline void addLBJ(int now_i, int l, int r, long long k, long long m, vector<STree>& tree) {\n    tree[now_i].var = (tree[now_i].var + k * (r - l + 1)) % m;\n    tree[now_i].addL += k;\n}\n\ninline void cLBJ(int now_i, long long k, long long m, vector<STree>& tree) {\n    tree[now_i].var = (tree[now_i].var * k) % m;\n    tree[now_i].addL = (tree[now_i].addL * k) % m; // \u4e3a\u4ec0\u4e48\u8fd9\u4e00\u884c???? \u5173\u952e!!! \u52a0\u4e0a\u5c31AC\u4e86\u8279\u8279\u8279\n    //tree[now_i].cL *= k;\n    tree[now_i].cL = (tree[now_i].cL * k) % m;\n}\n\nvoid cSTree(int now_i, int l, int r, int L, int R, long long k, long long m, vector<STree>& tree) {\n    if (L <= l && r <= R) {\n        cLBJ(now_i, k, m, tree);\n        return;\n    }\n\n    int mid = l + (r - l) / 2;\n    if (tree[now_i].cL != 1) {\n        // \u6e05\u9664\u4e58\u6cd5leze\n        cLBJ(now_i * 2, tree[now_i].cL, m, tree);\n        cLBJ(now_i * 2 + 1, tree[now_i].cL, m, tree);\n        tree[now_i].cL = 1;\n    }\n    \n    if (tree[now_i].addL) {\n        // \u6e05\u695a\u52a0\u6cd5leze\n        addLBJ(now_i * 2, l, mid, tree[now_i].addL, m, tree);\n        addLBJ(now_i * 2 + 1, mid + 1, r, tree[now_i].addL, m, tree);\n        tree[now_i].addL = 0;\n    }\n\n    if (L <= mid) {\n        cSTree(now_i * 2, l, mid, L, R, k, m, tree);\n    }\n\n    if (mid < R) {\n        cSTree(now_i * 2 + 1, mid + 1, r, L, R, k, m, tree);\n    }\n\n    tree[now_i].var = tree[now_i * 2].var + tree[now_i * 2 + 1].var;\n}\n\nvoid addSTree(int now_i, int l, int r, int L, int R, long long k, long long m, vector<STree>& tree) {\n    if (L <= l && r <= R) {\n        addLBJ(now_i, l, r, k, m, tree);\n        return;\n    }\n\n    int mid = l + (r - l) / 2;\n    if (tree[now_i].cL != 1) {\n        // \u6e05\u9664\u4e58\u6cd5leze\n        cLBJ(now_i * 2, tree[now_i].cL, m, tree);\n        cLBJ(now_i * 2 + 1, tree[now_i].cL, m, tree);\n        tree[now_i].cL = 1;\n    }\n\n    if (tree[now_i].addL) {\n        // \u6e05\u695a\u52a0\u6cd5leze\n        addLBJ(now_i * 2, l, mid, tree[now_i].addL, m, tree);\n        addLBJ(now_i * 2 + 1, mid + 1, r, tree[now_i].addL, m, tree);\n        tree[now_i].addL = 0;\n    }\n\n    if (L <= mid) {\n        addSTree(now_i * 2, l, mid, L, R, k, m, tree);\n    }\n    \n    if (mid < R){\n        addSTree(now_i * 2 + 1, mid + 1, r, L, R, k, m, tree);\n    }\n\n    tree[now_i].var = tree[now_i * 2].var + tree[now_i * 2 + 1].var;\n}\n\nlong long findSTree(int now_i, int l, int r, int L, int R, long long m, vector<STree>& tree) {\n    if (L <= l && r <= R) {\n        return tree[now_i].var;\n    }\n\n    int mid = l + (r - l) / 2;\n    if (tree[now_i].cL != 1) {\n        // \u6e05\u9664\u4e58\u6cd5leze\n        cLBJ(now_i * 2, tree[now_i].cL, m, tree);\n        cLBJ(now_i * 2 + 1, tree[now_i].cL, m, tree);\n        tree[now_i].cL = 1;\n    }\n\n    if (tree[now_i].addL) {\n        // \u6e05\u695a\u52a0\u6cd5leze\n        addLBJ(now_i * 2, l, mid, tree[now_i].addL, m, tree);\n        addLBJ(now_i * 2 + 1, mid + 1, r, tree[now_i].addL, m, tree);\n        tree[now_i].addL = 0;\n    }\n\n    long long res = 0;\n    if (L <= mid) {\n        res = findSTree(now_i * 2, l, mid, L, R, m, tree);\n        res %= m;\n    }\n\n    if (mid < R) {\n        res += findSTree(now_i * 2 + 1, mid + 1, r, L, R, m, tree);\n        res %= m;\n    }\n\n    return res % m;\n}\n\nint main(void)\n{\n    long long n, q, m;\n    scanf("%lld %lld %lld", &n, &q, &m);\n    vector<STree> tree(n * 4, {0LL, 0LL, 1LL});\n\n    {\n        vector<long long> arr(n);\n        for (int i = 0; i < n; ++i) {\n            scanf("%lld", &arr[i]);\n        }\n\n        initSTree(1, 0, n - 1, tree, arr);\n    }\n\n    for (int i = 0; i < q; ++i) {\n        int j;\n        scanf("%d", &j);\n        switch (j)\n        {\n        case 1: {\n            int x, y;\n            long long k;\n            scanf("%d %d %lld", &x, &y, &k);\n            cSTree(1, 0, n - 1, x - 1, y - 1, k, m, tree);\n            break;\n        }\n        case 2: {\n            int x, y;\n            long long k;\n            scanf("%d %d %lld", &x, &y, &k);\n            addSTree(1, 0, n - 1, x - 1, y - 1, k, m, tree);\n            break;\n        }\n        case 3: {\n            int x, y;\n            scanf("%d %d", &x, &y);\n            printf("%lld\\n", findSTree(1, 0, n - 1, x - 1, y - 1, m, tree) % m);\n            break;\n        }\n        default:\n            break;\n        }\n    }\n    \n    return 0;\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u533a\u95f4\u8d4b\u503c\u548c\u52a0\u6cd5-\u6c42\u533a\u95f4\u6700\u5927\u503c",children:"\u533a\u95f4\u8d4b\u503c\u548c\u52a0\u6cd5, \u6c42\u533a\u95f4\u6700\u5927\u503c"}),"\n",(0,s.jsxs)(e.p,{children:["\u9898\u76ee: ",(0,s.jsx)(e.a,{href:"https://www.luogu.com.cn/problem/P1253",children:"P1253 \u6276\u82cf\u7684\u95ee\u9898"})]}),"\n",(0,s.jsx)(e.p,{children:"\u6ce8\u610f: \u4e0d\u80fd\u5728\u6709\u8d4b\u503c\u7684\u5148\u8d4b\u503c\u518d\u52a0\u6cd5, \u8fd9\u6837\u5173\u7cfb\u4f1a\u5341\u5206\u6df7\u4e71"}),"\n",(0,s.jsx)(e.p,{children:"\u6240\u4ee5\u5efa\u8bae\u5982\u679c\u52a0\u6cd5\u5230\u6709\u8d4b\u503c\u7684, \u76f4\u63a5\u5728\u8d4b\u503c\u4e0a\u52a0\u5373\u53ef, \u4e0d\u9700\u8981\u8d4b\u503c\u540e, \u518d\u52a0, \u56e0\u4e3a\u8fd9\u6837lazy\u6807\u8bb0\u548ctag\u4f1a\u5f88\u6df7\u4e71! \u53cd\u6b63\u5c31\u662f\u6df7\u4e71!"}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.p,{children:"\u5728\u7ebf\u6bb5\u6811\u4e2d\u5b9e\u73b0\u533a\u95f4\u8d4b\u503c\u548c\u52a0\u6cd5\u64cd\u4f5c\u65f6\uff0c\u786e\u5b9e\u9700\u8981\u5c0f\u5fc3\u5904\u7406\uff0c\u4ee5\u907f\u514d\u6df7\u4e71\u548c\u9519\u8bef\u3002\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u76f4\u63a5\u5148\u8d4b\u503c\u518d\u52a0\u6cd5\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898\uff0c\u5e76\u8ba8\u8bba\u5982\u4f55\u6b63\u786e\u5904\u7406\u3002"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"\u76f4\u63a5\u5148\u8d4b\u503c\u518d\u52a0\u6cd5\u7684\u95ee\u9898"}),"\uff1a"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u5982\u679c\u5148\u6267\u884c\u8d4b\u503c\u64cd\u4f5c\uff0c\u7136\u540e\u518d\u8fdb\u884c\u52a0\u6cd5\u64cd\u4f5c\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6df7\u4e71\u7684\u6807\u8bb0\u72b6\u6001\u3002\u5047\u8bbe\u4e00\u4e2a\u533a\u95f4\u5df2\u7ecf\u88ab\u8d4b\u503c\u4e3a\u67d0\u4e2a\u503c\uff0c\u7136\u540e\u53c8\u5bf9\u8fd9\u4e2a\u533a\u95f4\u6267\u884c\u52a0\u6cd5\u64cd\u4f5c\uff0c\u5982\u679c\u4e0d\u5c0f\u5fc3\u5904\u7406\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8d4b\u503c\u6807\u8bb0\u548c\u52a0\u6cd5\u6807\u8bb0\u6df7\u5408\uff0c\u4f7f\u5f97\u533a\u95f4\u7684\u72b6\u6001\u53d8\u5f97\u6a21\u7cca\u4e0d\u6e05\uff0c\u96be\u4ee5\u6b63\u786e\u7ef4\u62a4\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u4f8b\u5982\uff0c\u5982\u679c\u5148\u7ed9\u4e00\u4e2a\u533a\u95f4\u8d4b\u503c\u4e3a2\uff0c\u7136\u540e\u518d\u5bf9\u8fd9\u4e2a\u533a\u95f4\u6267\u884c\u52a0\u6cd5\u64cd\u4f5c\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u8282\u70b9\u7684\u6807\u8bb0\u72b6\u6001\u53d8\u5f97\u4e0d\u4e00\u81f4\uff0c\u96be\u4ee5\u6b63\u786e\u5730\u8ba1\u7b97\u533a\u95f4\u7684\u6700\u5927\u503c\u3002"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"\u5efa\u8bae\u7684\u89e3\u51b3\u65b9\u6848"}),"\uff1a"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u5728\u8fdb\u884c\u52a0\u6cd5\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u5f53\u524d\u8282\u70b9\u662f\u5426\u5df2\u7ecf\u6709\u8d4b\u503c\u6807\u8bb0\uff0c\u5982\u679c\u6709\u8d4b\u503c\u6807\u8bb0\uff0c\u5219\u5728\u6267\u884c\u52a0\u6cd5\u64cd\u4f5c\u65f6\u76f4\u63a5\u5c06\u52a0\u6cd5\u64cd\u4f5c\u4f5c\u7528\u5728\u8d4b\u503c\u503c\u4e0a\uff0c\u800c\u4e0d\u662f\u5148\u8d4b\u503c\u518d\u52a0\u6cd5\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u4e0d\u4f1a\u51fa\u73b0\u6df7\u4e71\u7684\u6807\u8bb0\u72b6\u6001\uff0c\u540c\u65f6\u4fdd\u8bc1\u4e86\u6b63\u786e\u6027\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u8fd9\u79cd\u505a\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\u7b80\u5316\u4e86\u5904\u7406\u903b\u8f91\uff0c\u4e0d\u9700\u8981\u5728\u52a0\u6cd5\u64cd\u4f5c\u524d\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff0c\u76f4\u63a5\u5728\u52a0\u6cd5\u64cd\u4f5c\u4e2d\u5904\u7406\u5373\u53ef\u3002"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"\u5176\u4ed6\u5730\u65b9\u7684\u5904\u7406\u662f\u5426\u4f1a\u9ebb\u70e6\u4e00\u70b9"}),"\uff1a"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u5728\u5b9e\u73b0\u533a\u95f4\u8d4b\u503c\u548c\u52a0\u6cd5\u64cd\u4f5c\u65f6\uff0c\u786e\u5b9e\u9700\u8981\u5c0f\u5fc3\u5904\u7406\uff0c\u4f46\u53ea\u8981\u9075\u5faa\u6b63\u786e\u7684\u903b\u8f91\uff0c\u5176\u4ed6\u5730\u65b9\u7684\u5904\u7406\u5e76\u4e0d\u4f1a\u56e0\u4e3a\u8fd9\u79cd\u505a\u6cd5\u800c\u53d8\u5f97\u66f4\u52a0\u9ebb\u70e6\u3002\u76f8\u53cd\uff0c\u6b63\u786e\u7684\u5904\u7406\u65b9\u5f0f\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u903b\u8f91\uff0c\u51cf\u5c11\u51fa\u9519\u7684\u53ef\u80fd\u6027\u3002"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["\u603b\u7684\u6765\u8bf4\uff0c\u76f4\u63a5\u5728\u52a0\u6cd5\u64cd\u4f5c\u4e2d\u5904\u7406\u8d4b\u503c\u6807\u8bb0\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u903b\u8f91\uff0c\u5e76\u4e14\u786e\u4fdd\u4e86\u6b63\u786e\u6027\uff0c\u907f\u514d\u4e86\u6df7\u4e71\u7684\u6807\u8bb0\u72b6\u6001\u3002\u867d\u7136\u9700\u8981\u5c0f\u5fc3\u5904\u7406\uff0c\u4f46\u53ea\u8981\u9075\u5faa\u6b63\u786e\u7684\u903b\u8f91\uff0c\u5c31\u53ef\u4ee5\u786e\u4fdd\u4ee3\u7801\u7684\u6b63\u786e\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002",(0,s.jsx)(e.sup,{children:"By GPT-3.5"})]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-C++",children:'#include <cstdio>\n#include <vector>\n\n/**\n * \u52a0\u6cd5\u6807\u8bb0\u65f6: \u5982\u679c\u6709\u8d4b\u503c\u6807\u8bb0, \u5219\u4e0dlz\u52a0\u5230\u8d4b\u503c\u5904, \u800c\u4e0d\u7528lz\u6807\u8bb0\n * \u8d4b\u503c\u6807\u8bb0: \u6e05\u7a7a\u52a0\u6cd5\u6807\u8bb0\n */\nusing namespace std;\nnamespace _xds_005 {\n\n    typedef struct {\n        long long var;\n        long long lazy;\n        long long set; // \u6807\u8bb0\u662f\u5426\u8d4b\u503c\n        bool tag; // \u6807\u8bb0\u662f\u5426\u8d4b\u503c(\u4e3aset\u7684\u503c\n    } STree;\n\n    // \u6784\u5efa\u7ebf\u6bb5\u6811\n    // \u521d\u59cb\u5316\u65f6\u4f20\u5165: buildTree(arr, tree, 1, 0, n - 1);\n    void buildTree(vector<long long>& arr, vector<STree>& tree, int now_i, int l, int r) {\n        if (l == r) {\n            tree[now_i].var = arr[l];\n            return;\n        }\n\n        int mid = l + (r - l) / 2;\n        buildTree(arr, tree, now_i * 2, l, mid);\n        buildTree(arr, tree, now_i * 2 + 1, mid + 1, r);\n\n        tree[now_i].var = max(tree[now_i * 2].var, tree[now_i * 2 + 1].var);\n    }\n\n    // \u4e0b\u4f20\u61d2\u6807\u8bb0\n    inline void playLazyToTree(int now_i, int l, int r, long long lazy, vector<STree>& tree) {\n        tree[now_i].var += lazy; // \u6ce8\u610f [l, r] \u533a\u95f4, \u5219 += (r -  l + 1) \u4e2a k \u4e86\n        tree[now_i].lazy += lazy;\n    }\n\n    // \u4e0b\u4f20\u8d4b\u503c\u6807\u8bb0\n    inline void playSetLazyToTree(int now_i, int l, int r, long long set, vector<STree>& tree) {\n        tree[now_i].var = set; // \u6ce8\u610f [l, r] \u533a\u95f4, \u5219 += (r -  l + 1) \u4e2a k \u4e86\n        tree[now_i].set = set;\n        tree[now_i].tag = 1;\n        tree[now_i].lazy = 0;\n    }\n\n    /**\n     * \u5bf9 [L, R] + k\n     * now_i \u5f53\u524d\u8282\u70b9\n     * l \u5de6\u8fb9\u754c\n     * r \u53f3\u8fb9\u754c\n     * [L, R] \u76ee\u6807\u533a\u95f4\n     * k \u9700\u8981\u589e\u52a0\u7684\u503c\n     * tree \u7ebf\u6bb5\u6811\n     */\n    void addTree(int now_i, int l, int r, int L, int R, long long k, vector<STree>& tree) {\n        if (L <= l && r <= R) {\n            if (tree[now_i].tag) {\n                playSetLazyToTree(now_i, l, r, tree[now_i].var + k, tree);\n            }\n            else\n                playLazyToTree(now_i, l, r, k, tree); // \u53c2\u6570\u4e00\u4e3anow_i, \u5373\u5bf9\u81ea\u5df1\u8d4b\u503c\n            return;\n        }\n\n        int mid = l + (r - l) / 2;\n        if (tree[now_i].tag) {\n            playSetLazyToTree(now_i * 2, l, mid, tree[now_i].set, tree);\n            playSetLazyToTree(now_i * 2 + 1, mid + 1, r, tree[now_i].set, tree);\n            tree[now_i].tag = 0;\n            tree[now_i].set = 0;\n        }\n\n        // \u61d2\u6807\u8bb0\u4e0b\u4f20\n        if (tree[now_i].lazy != 0) {\n            playLazyToTree(now_i * 2, l, mid, tree[now_i].lazy, tree);\n            playLazyToTree(now_i * 2 + 1, mid + 1, r, tree[now_i].lazy, tree);\n            tree[now_i].lazy = 0; // \u6e05\u9664\u5f53\u524d\u7684\u61d2\u6807\u8bb0\n        }\n\n        // \u641c\u7d22\u5de6\u53f3\u5b50\u533a\u95f4\n        if (L <= mid) {\n            addTree(now_i * 2, l, mid, L, R, k, tree);\n        }\n\n\n        if (R > mid) {\n            addTree(now_i * 2 + 1, mid + 1, r, L, R, k, tree);\n        }\n\n        tree[now_i].var = max(tree[now_i * 2].var, tree[now_i * 2 + 1].var);\n    }\n\n    /**\n     * \u5bf9 [L, R] \u8d4b\u503c\u90fd\u4e3a k\n     * now_i \u5f53\u524d\u8282\u70b9\n     * l \u5de6\u8fb9\u754c\n     * r \u53f3\u8fb9\u754c\n     * [L, R] \u76ee\u6807\u533a\u95f4\n     * k \u9700\u8981\u589e\u52a0\u7684\u503c\n     * tree \u7ebf\u6bb5\u6811\n     */\n    void setTree(int now_i, int l, int r, int L, int R, long long k, vector<STree>& tree) {\n        if (L <= l && r <= R) {\n            //playLazyToTree(now_i, l, r, k, tree); // \u53c2\u6570\u4e00\u4e3anow_i, \u5373\u5bf9\u81ea\u5df1\u8d4b\u503c\n\n            // \u8fdb\u884c\u8d4b\u503c\n            /*_setTree(now_i, l, r, L, R, k, tree);*/\n\n            playSetLazyToTree(now_i, l, r, k, tree);\n            tree[now_i].lazy = 0;\n            return;\n        }\n\n        int mid = l + (r - l) / 2;\n        if (tree[now_i].tag) {\n            playSetLazyToTree(now_i * 2, l, mid, tree[now_i].set, tree);\n            playSetLazyToTree(now_i * 2 + 1, mid + 1, r, tree[now_i].set, tree);\n            tree[now_i].tag = 0;\n            tree[now_i].set = 0;\n        }\n\n        // \u61d2\u6807\u8bb0\u4e0b\u4f20\n        if (tree[now_i].lazy != 0) {\n            playLazyToTree(now_i * 2, l, mid, tree[now_i].lazy, tree);\n            playLazyToTree(now_i * 2 + 1, mid + 1, r, tree[now_i].lazy, tree);\n            tree[now_i].lazy = 0; // \u6e05\u9664\u5f53\u524d\u7684\u61d2\u6807\u8bb0\n        }\n\n        // \u641c\u7d22\u5de6\u53f3\u5b50\u533a\u95f4\n        if (L <= mid) {\n            setTree(now_i * 2, l, mid, L, R, k, tree);\n        }\n\n\n        if (R > mid) {\n            setTree(now_i * 2 + 1, mid + 1, r, L, R, k, tree);\n        }\n\n        tree[now_i].var = max(tree[now_i * 2].var, tree[now_i * 2 + 1].var);\n    }\n\n    /**\n     * \u67e5\u8be2 [L, R] \u533a\u95f4\u7684\u548c\n     * now_i \u5f53\u524d\u8282\u70b9\n     * l \u5de6\u8fb9\u754c\n     * r \u53f3\u8fb9\u754c\n     * L \u76ee\u6807[L,R]\n     * R \u76ee\u6807[L,R]\n     * tree \u7ebf\u6bb5\u6811\n     */\n    long long findTree(int now_i, int l, int r, int L, int R, vector<STree>& tree) {\n        if (L <= l && r <= R)\n            return tree[now_i].var;\n\n        int mid = l + (r - l) / 2;\n        if (tree[now_i].tag) {\n            playSetLazyToTree(now_i * 2, l, mid, tree[now_i].set, tree);\n            playSetLazyToTree(now_i * 2 + 1, mid + 1, r, tree[now_i].set, tree);\n            tree[now_i].tag = 0;\n            tree[now_i].set = 0;\n        }\n\n        // \u61d2\u6807\u8bb0\u4e0b\u4f20\n        if (tree[now_i].lazy != 0) {\n            playLazyToTree(now_i * 2, l, mid, tree[now_i].lazy, tree);\n            playLazyToTree(now_i * 2 + 1, mid + 1, r, tree[now_i].lazy, tree);\n            tree[now_i].lazy = 0; // \u6e05\u9664\u5f53\u524d\u7684\u61d2\u6807\u8bb0\n        }\n\n        long long res = -1e18;\n        if (L <= mid) { // \u4e3a\u4ec0\u4e48\u548c mid \u6bd4?, \u89c1:\n            res = findTree(now_i * 2, l, mid, L, R, tree);\n        }\n\n        if (R > mid) {\n            res = max(findTree(now_i * 2 + 1, mid + 1, r, L, R, tree), res);\n        }\n\n        return res;\n    }\n}\n\n\nint main(void)\n{\n    int n, m;\n    scanf("%d %d", &n, &m);\n    vector<_xds_005::STree> tree(n * 4);\n    {\n        vector<long long> arr(n);\n        for (int i = 0; i < n; ++i) {\n            scanf("%lld", &arr[i]);\n        }\n        _xds_005::buildTree(arr, tree, 1, 0, n - 1);\n    }\n\n    for (int i = 0; i < m; ++i) {\n        int j;\n        scanf("%d", &j);\n        if (j == 1) {\n            // \u628a\u533a\u95f4 [l, r]\u5168\u90e8\u4fee\u6539\u4e3ak\n            int x, y;\n            long long k;\n            scanf("%d %d %lld", &x, &y, &k);\n            _xds_005::setTree(1, 0, n - 1, x - 1, y - 1, k, tree);\n        }\n        else if (j == 2) {\n            int x, y;\n            long long k;\n            scanf("%d %d %lld", &x, &y, &k);\n            _xds_005::addTree(1, 0, n - 1, x - 1, y - 1, k, tree);\n        }\n        else {\n            int x, y;\n            scanf("%d %d", &x, &y);\n            printf("%lld\\n", _xds_005::findTree(1, 0, n - 1, x - 1, y - 1, tree));\n        }\n    }\n    \n    return 0;\n}\n\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u6ce8\u89e3",children:"\u6ce8\u89e3"}),"\n",(0,s.jsx)(e.h3,{id:"1",children:"[1]"}),"\n",(0,s.jsxs)(e.p,{children:["\u5f15",(0,s.jsx)(e.del,{children:"\u8bf1"}),"\u7528 + \u5b66\u4e60:"]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://www.bilibili.com/video/BV1yF411p7Bt",children:"\u3010neko\u7b97\u6cd5\u8bfe\u3011\u7ebf\u6bb5\u6811 \u6570\u636e\u7ed3\u6784\u30106\u671f\u3011"}),"(\u61d2\u6807\u8bb0\u7684\u5b66\u4e60(",(0,s.jsx)(e.del,{children:"\u672c\u5b50\u55b5"}),"))"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://www.bilibili.com/video/BV18t4y1p736",children:"\u7ebf\u6bb5\u6811\u5165\u95e8\u3010\u529b\u6263\u53cc\u5468\u8d5b 79\u3011LeetCode"}),"(\u91cd\u65b0\u53d1\u660e\u7ebf\u6bb5\u6811(",(0,s.jsx)(e.del,{children:"0x3f"}),"))"]}),"\n"]})]})}function o(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(m,{...n})}):m(n)}},84228:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/Clip_2024-02-27_23-06-29-8877d5e751188d3040a98804088db5e6.png"}}]);