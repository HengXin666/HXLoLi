"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[42513],{15316:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/Clip_2024-05-17_14-50-06-b170ef24d411d2400e40bd18838dca9a.png"},28453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>c});var s=i(96540);const t={},o=s.createContext(t);function l(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(o.Provider,{value:e},n.children)}},49904:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/MongoDB\u3001Redis\u3001C++\u8de8\u5e73\u53f0\u7f16\u8bd1/index","title":"\u4e00\u3001MongoDB","description":"1.1 \u30e2\u30f3\u30b4\u30c7\u30a3\u30fc\u30d3\u30fc\u3067\u3069\u3046\u3044\u3046\u3053\u3068","source":"@site/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/007-MongoDB\u3001Redis\u3001C++\u8de8\u5e73\u53f0\u7f16\u8bd1/index.md","sourceDirName":"002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/007-MongoDB\u3001Redis\u3001C++\u8de8\u5e73\u53f0\u7f16\u8bd1","slug":"/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/MongoDB\u3001Redis\u3001C++\u8de8\u5e73\u53f0\u7f16\u8bd1/","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/MongoDB\u3001Redis\u3001C++\u8de8\u5e73\u53f0\u7f16\u8bd1/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/008-\u5927\u9879\u76ee/001-\u5927\u9879\u76ee/001-\u5f00\u53d1\u7b14\u8bb0/007-MongoDB\u3001Redis\u3001C++\u8de8\u5e73\u53f0\u7f16\u8bd1/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u8ba4\u8bc1\u6388\u6743\u3001ELK\u3001EE","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/\u8ba4\u8bc1\u6388\u6743\u3001ELK\u3001EE/"},"next":{"title":"SMS\u3001Mail\u3001PDF","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u5927\u9879\u76ee/\u5927\u9879\u76ee/\u5f00\u53d1\u7b14\u8bb0/SMS\u3001Mail\u3001PDF/"}}');var t=i(74848),o=i(28453);const l={},c="\u4e00\u3001MongoDB",d={},r=[{value:"1.1 \u30e2\u30f3\u30b4\u30c7\u30a3\u30fc\u30d3\u30fc\u3067\u3069\u3046\u3044\u3046\u3053\u3068",id:"11-\u30e2\u30f3\u30b4\u30c7\u30a3\u30fc\u30d3\u30fc\u3067\u3069\u3046\u3044\u3046\u3053\u3068",level:2},{value:"1.2 \u5927\u81ea\u7136\u7684\u9988\u8d60: MongoClient.h",id:"12-\u5927\u81ea\u7136\u7684\u9988\u8d60-mongoclienth",level:2},{value:"1.3 \u4f7f\u7528\u793a\u4f8b",id:"13-\u4f7f\u7528\u793a\u4f8b",level:2},{value:"1.3.1 include",id:"131-include",level:3},{value:"1.3.2 \u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61",id:"132-\u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61",level:3},{value:"1.3.3 \u6dfb\u52a0\u5355\u6761\u6570\u636e",id:"133-\u6dfb\u52a0\u5355\u6761\u6570\u636e",level:3},{value:"1.3.4 \u6dfb\u52a0\u591a\u6761\u6570\u636e",id:"134-\u6dfb\u52a0\u591a\u6761\u6570\u636e",level:3},{value:"1.3.5 [\u81ea\u5b9a\u4e49] \u67e5\u8be2\u8c03\u7528",id:"135-\u81ea\u5b9a\u4e49-\u67e5\u8be2\u8c03\u7528",level:3},{value:"1.3.6 \u66f4\u591aAPI",id:"136-\u66f4\u591aapi",level:3},{value:"2.1 What is Redis?",id:"21-what-is-redis",level:2},{value:"2.2 \u5927\u81ea\u7136\u7684\u9988\u8d60: RedisClient",id:"22-\u5927\u81ea\u7136\u7684\u9988\u8d60-redisclient",level:2},{value:"2.3 \u4f7f\u7528\u793a\u4f8b",id:"23-\u4f7f\u7528\u793a\u4f8b",level:2},{value:"2.3.1 include",id:"231-include",level:3},{value:"2.3.2 \u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61",id:"232-\u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61",level:3},{value:"2.3.3 set\u6307\u4ee4",id:"233-set\u6307\u4ee4",level:3},{value:"2.3.4 get\u6307\u4ee4",id:"234-get\u6307\u4ee4",level:3},{value:"2.3.5 \u66f4\u591aAPI",id:"235-\u66f4\u591aapi",level:3},{value:"3.1 \u5148\u51b3\u6761\u4ef6",id:"31-\u5148\u51b3\u6761\u4ef6",level:2},{value:"3.2 \u542f\u52a8\u6210\u529f",id:"32-\u542f\u52a8\u6210\u529f",level:3}];function a(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"\u4e00mongodb",children:"\u4e00\u3001MongoDB"})}),"\n",(0,t.jsx)(e.h2,{id:"11-\u30e2\u30f3\u30b4\u30c7\u30a3\u30fc\u30d3\u30fc\u3067\u3069\u3046\u3044\u3046\u3053\u3068",children:"1.1 \u30e2\u30f3\u30b4\u30c7\u30a3\u30fc\u30d3\u30fc\u3067\u3069\u3046\u3044\u3046\u3053\u3068"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"MongoDB\u662f\u4e00\u4e2a\u6d41\u884c\u7684\u5f00\u6e90\u6587\u6863\u578b\u6570\u636e\u5e93\uff0c\u5b83\u4f7f\u7528\u7c7b\u4f3c JSON \u7684\u6587\u6863\u6a21\u578b\u5b58\u50a8\u6570\u636e\uff0c\u8fd9\u4f7f\u5f97\u6570\u636e\u5b58\u50a8\u53d8\u5f97\u975e\u5e38\u7075\u6d3b\u3002"}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"MongoDB \u662f\u4e00\u4e2a\u4ecb\u4e8e\u5173\u7cfb\u6570\u636e\u5e93\u548c\u975e\u5173\u7cfb\u6570\u636e\u5e93\u4e4b\u95f4\u7684\u4ea7\u54c1\uff0c\u662f\u975e\u5173\u7cfb\u6570\u636e\u5e93\u5f53\u4e2d\u529f\u80fd\u6700\u4e30\u5bcc\uff0c\u6700\u50cf\u5173\u7cfb\u6570\u636e\u5e93\u7684\u3002"}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"MongoDB\u662f\u4e00\u4e2a\u57fa\u4e8e\u5206\u5e03\u5f0f\u6587\u4ef6\u5b58\u50a8\u7684\u6570\u636e\u5e93"}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"\u7531C++\u8bed\u8a00\u7f16\u5199\uff0c\u65e8\u5728\u4e3aWEB\u5e94\u7528\u63d0\u4f9b\u53ef\u6269\u5c55\u7684\u9ad8\u6027\u80fd\u6570\u636e\u5b58\u50a8\u89e3\u51b3\u65b9\u6848\u3002"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"12-\u5927\u81ea\u7136\u7684\u9988\u8d60-mongoclienth",children:"1.2 \u5927\u81ea\u7136\u7684\u9988\u8d60: MongoClient.h"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"zero-one-08mes\\mes-cpp\\lib-common\\include\\MongoClient.h"})}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["\u6709\u4e24\u4e2a\u6784\u9020\u51fd\u6570, \u4f20\u5165",(0,t.jsx)(e.code,{children:"\u94fe\u63a5\u5730\u5740"}),"\u7684\u6784\u9020\u51fd\u6570\u662f\u4e3a\u4e86\u9002\u5e94\u5230\u65f6\u5019\u76f4\u63a5\u4ece\u914d\u7f6e\u6587\u4ef6\u670d\u52a1\u5668\u4e2d\u83b7\u53d6\u5230\u7684\u914d\u7f6e\u4fe1\u606f."]}),"\n",(0,t.jsx)(e.p,{children:"\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5c01\u88c5\u597d\u7684\u65b9\u6cd5: \u63d2\u5165\u4e00\u6216\u591a\u6761\u6570\u636e"}),"\n",(0,t.jsx)(e.p,{children:"\u4ee5\u53ca\u4e00\u4e2a\u901a\u8fc7\u56de\u8c03\u4f7f\u7528\u7684\u65b9\u6cd5, \u4f60\u53ef\u4ee5\u5728\u56de\u8c03\u51fd\u6570\u4e2d\u5199\u5165\u4f60\u7684\u81ea\u5b9a\u4e49\u64cd\u4f5c(\u66f4\u591a\u64cd\u4f5c\u8bf7\u89c1\u5b98\u65b9\u6587\u6863)"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-C++",children:'/**\n * MongoDB\u5ba2\u6237\u7aef\n */\nclass MongoClient\n{\nprivate:\n    // \u7528\u6237\u540d\n    string m_username;\n    // \u5bc6\u7801\n    string m_password;\n    // MongoDB\u670d\u52a1\u5668\u5730\u5740\n    string m_host;\n    // \u6570\u636e\u5e93\n    string m_db;\n    // MongoDB\u670d\u52a1\u5668\u7aef\u53e3\n    string m_port;\n    // \u6700\u5927\u8fde\u63a5\u6570\n    int m_max = 25;\n    // \u6700\u5c0f\u8fde\u63a5\u6570\u636e\n    int m_min = 25;\n    // \u6807\u8bb0\u662f\u5426\u5df2\u7ecf\u521d\u59cb\u5316\n    bool isInit;\n    // \u8d1f\u8d23\u6784\u9020\u548c\u6790\u6784\u8fde\u63a5\u9a71\u52a8\u7684\u5b9e\u4f8b\u5bf9\u8c61\n    static mongocxx::instance m_inst;\n    // \u8fde\u63a5\u6c60\u5bf9\u8c61\n    shared_ptr<mongocxx::pool> m_pool;\n    // \u521d\u59cb\u5316\u8fde\u63a5\u6c60\n    bool initPool();\npublic:\n    //************************************\n    // Method:    MongoClient\n    // FullName:  MongoClient::MongoClient\n    // Access:    public \n    // Returns:   \n    // Description: \u6784\u9020\u521d\u59cb\u5316\n    // Parameter: const string & username \u7528\u6237\u540d\n    // Parameter: const string & password \u5bc6\u7801\n    // Parameter: const string & host \u670d\u52a1\u5668\u5730\u5740\n    // Parameter: const string & db \u6570\u636e\u5e93\n    // Parameter: const string & port \u670d\u52a1\u5668\u7aef\u53e3\uff0c\u9ed8\u8ba4\u503c27017\n    //************************************\n    MongoClient(const string& username, const string& password, const string& host, const string& db, const string& port = "27017");\n    //************************************\n    // Method:    MongoClient\n    // FullName:  MongoClient::MongoClient\n    // Access:    public \n    // Returns:   \n    // Description: \u6784\u9020\u521d\u59cb\u5316\n    // Parameter: const string & uri \u8fde\u63a5\u5730\u5740\uff0c\u683c\u5f0f\u4e3a\uff1amongodb://\u8d26\u53f7:\u5bc6\u7801@\u4e3b\u673a\u5730\u5740:\u7aef\u53e3/\u6570\u636e\u5e93\u540d\u79f0\n    //************************************\n    explicit MongoClient(const string& uri);\n    // \u8bbe\u7f6e\u6700\u5927\u8fde\u63a5\u6570\n    void setMax(int max);\n    // \u8bbe\u7f6e\u6700\u5c0f\u8fde\u63a5\u6570\n    void setMin(int min);\n    //************************************\n    // Method:    execute\n    // FullName:  MongoClient::execute\n    // Access:    public \n    // Returns:   bool\n    // Description: \u5b9a\u4e49\u4e00\u4e2a\u6267\u884c\u65b9\u6cd5\uff0c\u7528\u4e8e\u652f\u6301\u64cd\u4f5c\u6269\u5c55\n    // Parameter: const string & collectionName \u96c6\u5408\u540d\u79f0\n    // Parameter: std::function<void mongocxx::collection*> callfun \u6269\u5c55\u6267\u884c\u56de\u8c03\u51fd\u6570\n    //************************************\n    bool execute(const string& collectionName, std::function<void(mongocxx::collection*)> callfun);\n    //************************************\n    // Method:    addOne\n    // FullName:  MongoClient::addOne\n    // Access:    public \n    // Returns:   bsoncxx::types::bson_value::view\n    // Description: \u6dfb\u52a0\u4e00\u6761\u6570\u636e\n    // Parameter: const string & collectionName \u96c6\u5408\u540d\u79f0\n    // Parameter: const bsoncxx::document::view & document \u6587\u6863\u5bf9\u8c61\n    //************************************\n    bsoncxx::types::bson_value::view addOne(const string& collectionName, const bsoncxx::document::view& document);\n    //************************************\n    // Method:    addMultiple\n    // FullName:  MongoClient::addMultiple\n    // Access:    public \n    // Returns:   int32_t \u63d2\u5165\u6570\u636e\u6761\u6570\n    // Description: \u6dfb\u52a0\u591a\u6761\u6570\u636e\n    // Parameter: const string & collectionName \u96c6\u5408\u540d\u79f0\n    // Parameter: const std::vector<bsoncxx::document::value> & documents \u6587\u6863\u5bf9\u8c61\u5217\u8868\n    //************************************\n    int32_t addMultiple(const string& collectionName, const std::vector<bsoncxx::document::value>& documents);\n};\n'})}),"\n",(0,t.jsx)(e.h2,{id:"13-\u4f7f\u7528\u793a\u4f8b",children:"1.3 \u4f7f\u7528\u793a\u4f8b"}),"\n",(0,t.jsx)(e.h3,{id:"131-include",children:"1.3.1 include"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-C++",children:'// MongoDB\u4f7f\u7528\u9700\u8981\u7684\u76f8\u5173\u5934\u6587\u4ef6\n#include "Macros.h"\n#include "NacosClient.h"\n#include "MongoClient.h"\n#include <bsoncxx/json.hpp>\n'})}),"\n",(0,t.jsx)(e.h3,{id:"132-\u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61",children:"1.3.2 \u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-C++",children:'/**\n *  \u5b9a\u4e49\u4e00\u4e2a\u6d4b\u8bd5\u5939\u5177\u7c7b\uff0c\u7528\u4e8e\u7ba1\u7406\u6570\u636e\u5e93\u8fde\u63a5\n */\nclass MongoTest : public testing::Test {\nprotected:\n    void SetUp() override\n    {\n        // \u83b7\u53d6\u914d\u7f6e\n        NacosClient nacosClient(TEST_NS_ADDR, TEST_NS_NAMESPACE);\n#ifdef LINUX\n        YAML::Node node = nacosClient.getConfig("data-source.yaml");\n#else\n        YAML::Node node = nacosClient.getConfig("./conf/data-source.yaml");\n#endif\n        // \u83b7\u53d6mongodb\u76f8\u5173\u914d\u7f6e\n        YamlHelper yaml;\n        string uri = yaml.getString(&node, "spring.data.mongodb.uri");\n\n        // \u521b\u5efa\u8fde\u63a5\u5bf9\u8c61\n        this->mc = new MongoClient(uri);\n    }\n    void TearDown() override\n    {\n        if (mc)\n        {\n            delete mc;\n            mc = nullptr;\n        }\n    }\n    // MongoDB\u5ba2\u6237\u7aef\u8fde\u63a5\u5bf9\u8c61\n    MongoClient* mc = nullptr;\n};\n'})}),"\n",(0,t.jsx)(e.h3,{id:"133-\u6dfb\u52a0\u5355\u6761\u6570\u636e",children:"1.3.3 \u6dfb\u52a0\u5355\u6761\u6570\u636e"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-C++",children:'// \u6d4b\u8bd5\u6dfb\u52a0\u5355\u6761\u6570\u636e\nTEST_F(MongoTest, AddOne) {\n    // \u4f7f\u7528\u6587\u6863\u6784\u5efa\u5668\u6784\u5efa\u6587\u6863\u6570\u636e\n    auto docBuilder = bsoncxx::builder::stream::document{};\n    bsoncxx::document::value doc = docBuilder\n        << "name" << "MongoDB"\n        << "type" << "database"\n        << "count" << 1\n        << "versions" << open_array << "v3.2" << "v3.0" << "v2.6" << close_array\n        << "info"\n        << open_document\n        << "x" << 203\n        << "y" << 102\n        << close_document\n        << finalize;\n    // \u6267\u884c\u6570\u636e\u6dfb\u52a0\n    auto res = mc->addOne("t1", doc.view());\n    ASSERT_NE(res.type(), bsoncxx::type::k_null);\n    std::cout << res.get_oid().value.to_string() << std::endl;\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u5982\u679c\u6211\u4eec\u4fee\u6539\u8fd9\u4e2a\u6570\u636e, \u4e5f\u662f\u4f9d\u65e7\u53ef\u4ee5\u6dfb\u52a0\u5230\u540c\u4e00\u4e2a\u8868, \u5373\u4fbf\u952e\u7684\u6570\u76ee\u4e0d\u7edf\u4e00 (\u8fd9\u91cc\u5c31\u4f53\u73b0\u4e86\u7c7b\u4f3cjson\u7684\u6570\u636e\u5b58\u50a8)"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"PixPin_2024-05-17_14-51-52.gif",src:i(53217).A+"",width:"1897",height:"547"})}),"\n",(0,t.jsx)(e.h3,{id:"134-\u6dfb\u52a0\u591a\u6761\u6570\u636e",children:"1.3.4 \u6dfb\u52a0\u591a\u6761\u6570\u636e"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-C++",children:'// \u6d4b\u8bd5\u6dfb\u52a0\u591a\u6761\u6570\u636e\nTEST_F(MongoTest, AddMultiple) {\n    // \u521b\u5efa\u591a\u4e2a\u6587\u6863\u5bf9\u8c61\n    std::vector<bsoncxx::document::value> documents;\n    for (int i = 0; i < 10; i++) {\n        documents.push_back(bsoncxx::builder::stream::document{} << "i" << i << finalize);\n    }\n    int32_t addNum = mc->addMultiple("t2", documents);\n    ASSERT_GT(addNum, 0);\n}\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u6ce8: mongoDB \u6dfb\u52a0\u6570\u636e\u7684\u65f6\u5019, \u5982\u679c\u8868\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\u8868.(\u53c8\u6ce8: \u6b64\u5904\u7684\u8868, \u79f0\u4e3a",(0,t.jsx)(e.code,{children:"\u96c6\u5408"}),"\u66f4\u597d)"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"Clip_2024-05-17_14-50-06.png",src:i(15316).A+"",width:"2290",height:"1070"})}),"\n",(0,t.jsx)(e.h3,{id:"135-\u81ea\u5b9a\u4e49-\u67e5\u8be2\u8c03\u7528",children:"1.3.5 [\u81ea\u5b9a\u4e49] \u67e5\u8be2\u8c03\u7528"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-C++",children:'// \u6d4b\u8bd5\u67e5\u8be2\u8c03\u7528\nTEST_F(MongoTest, Query) {\n    bool res = mc->execute("t2",\n        [](mongocxx::collection* collection) {\n            auto cursor = collection->find({});\n            for (auto doc : cursor) {\n                cout << bsoncxx::to_json(doc) << endl;\n            }\n        });\n    ASSERT_EQ(res, true);\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"136-\u66f4\u591aapi",children:"1.3.6 \u66f4\u591aAPI"}),"\n",(0,t.jsxs)(e.p,{children:["\u57fa\u7840\u5b66\u4e60: ",(0,t.jsx)(e.a,{href:"https://www.mongodb.com/zh-cn/docs/languages/cpp/cpp-driver/current/tutorial/#create-a-document",children:"MongoDB\u5b98\u65b9\u4e2d\u6587\u6587\u6863: \u57fa\u672c\u589e\u5220\u6539\u67e5"})]}),"\n",(0,t.jsxs)(e.p,{children:["\u66f4\u591a\u547d\u4ee4\u8bf7\u89c1: ",(0,t.jsx)(e.a,{href:"https://www.mongodb.com/zh-cn/docs/languages/cpp/cpp-driver/current/working-with-bson/",children:"MongoDB\u5b98\u65b9\u4e2d\u6587\u6587\u6863: \u4f7f\u7528 BSON"})]}),"\n",(0,t.jsx)(e.h1,{id:"\u4e8credis",children:"\u4e8c\u3001Redis"}),"\n",(0,t.jsx)(e.h2,{id:"21-what-is-redis",children:"2.1 What is Redis?"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"/HXLoLi/docs/%E4%B8%AD%E9%97%B4%E4%BB%B6/Redis/%E3%80%90Redis%E3%80%91%E7%9B%AE%E5%BD%95/",children:"[Redis]\u76ee\u5f55"})}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"22-\u5927\u81ea\u7136\u7684\u9988\u8d60-redisclient",children:"2.2 \u5927\u81ea\u7136\u7684\u9988\u8d60: RedisClient"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"zero-one-08mes\\mes-cpp\\lib-common\\include\\RedisClient.h"})}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"\u53ea\u662f\u5c01\u88c5\u4e86\u4e00\u4e9b\u8fde\u63a5\u64cd\u4f5c, \u5177\u4f53\u7684\u64cd\u4f5c\u9700\u8981\u6211\u4eec\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u8c03\u7528."}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-C++",children:'/**\n * Redis\u5ba2\u6237\u7aef\n */\nclass RedisClient\n{\nprivate:\n    // Redis\u8fde\u63a5\u5bf9\u8c61\n    shared_ptr<Redis> m_redis;\npublic:\n    //************************************\n    // Method:    RedisClient\n    // FullName:  RedisClient::RedisClient\n    // Access:    public \n    // Returns:   \n    // Description: \u6784\u9020\u521d\u59cb\u5316\n    // Parameter: const string & host Redis\u4e3b\u673a\u5730\u5740\n    // Parameter: int port Redis\u670d\u52a1\u5668\u7aef\u53e3\n    // Parameter: const string & password Redis\u670d\u52a1\u5668\u5bc6\u7801,\u9ed8\u8ba4\u6ca1\u6709\u5bc6\u7801\n    // Parameter: int db \u9009\u62e9\u7684\u6570\u636e\u5e93\uff0c\u9ed8\u8ba4\u503c0\n    // Parameter: int max \u6570\u636e\u5e93\u6700\u5927\u8fde\u63a5\u6570\uff0c\u9ed8\u8ba4\u4e3a10\n    //************************************\n    RedisClient(const string& host, int port, const string& password = "", int db = 0, int max = 10);\n    //************************************\n    // Method:    execute\n    // FullName:  RedisClient::execute\n    // Access:    public \n    // Returns:   T \u8fd4\u56de\u503c\u7c7b\u578b\n    // Description: \u6267\u884cRedis\u64cd\u4f5c\n    // Parameter: std::function<T<Redis*>> callfun \u64cd\u4f5c\u903b\u8f91\u51fd\u6570\uff0c\u6240\u6709\u64cd\u4f5c\u903b\u8f91\u51fd\u6570\u5728\u8fd9\u91cc\u5199\n    //************************************\n    template<class T>\n    T execute(std::function<T(Redis*)> callfun) {\n        try {\n            return callfun(m_redis.get());\n        } catch (const std::exception& e) {\n            cerr << e.what() << endl;\n        }\n        return {};\n    }\n};\n'})}),"\n",(0,t.jsx)(e.h2,{id:"23-\u4f7f\u7528\u793a\u4f8b",children:"2.3 \u4f7f\u7528\u793a\u4f8b"}),"\n",(0,t.jsx)(e.h3,{id:"231-include",children:"2.3.1 include"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-C++",children:'// \u4f7f\u7528Redis\u9700\u8981\u7684\u76f8\u5173\u5934\u6587\u4ef6\n#include "Macros.h"\n#include "NacosClient.h"\n#include "RedisClient.h"\n'})}),"\n",(0,t.jsx)(e.h3,{id:"232-\u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61",children:"2.3.2 \u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-C++",children:'/**\n *  \u5b9a\u4e49\u4e00\u4e2a\u6d4b\u8bd5\u5939\u5177\u7c7b\uff0c\u7528\u4e8e\u7ba1\u7406\u6570\u636e\u5e93\u8fde\u63a5\n */\nclass RedisTest : public testing::Test {\n\nprotected:\n    void SetUp() override\n    {\n        // \u83b7\u53d6\u914d\u7f6e\n        NacosClient nacosClient(TEST_NS_ADDR, TEST_NS_NAMESPACE);\n#ifdef LINUX\n        YAML::Node node = nacosClient.getConfig("data-source.yaml");\n#else\n        YAML::Node node = nacosClient.getConfig("./conf/data-source.yaml");\n#endif\n        // \u83b7\u53d6redis\u76f8\u5173\u914d\u7f6e\n        YamlHelper yaml;\n        string host = yaml.getString(&node, "spring.redis.host");\n        string port = yaml.getString(&node, "spring.redis.port");\n        string password = yaml.getString(&node, "spring.redis.password");\n\n        // \u521b\u5efaRedisClient\u5bf9\u8c61\n        this->rc = new RedisClient(host, atoi(port.c_str()), password);\n    }\n    void TearDown() override\n    {\n        if (rc)\n        {\n            delete rc;\n            rc = nullptr;\n        }\n    }\n    // Redis\u5ba2\u6237\u7aef\u8fde\u63a5\u5bf9\u8c61\n    RedisClient* rc = nullptr;\n};\n'})}),"\n",(0,t.jsx)(e.h3,{id:"233-set\u6307\u4ee4",children:"2.3.3 set\u6307\u4ee4"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-C++",children:'// \u6d4b\u8bd5set\u6307\u4ee4\nTEST_F(RedisTest, Set) {\n    bool res = rc->execute<bool>(\n        [](Redis* r) {\n            return r->set("foo", "bar");\n        });\n    ASSERT_EQ(res, true);\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"234-get\u6307\u4ee4",children:"2.3.4 get\u6307\u4ee4"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-C++",children:'// \u6d4b\u8bd5get\u6307\u4ee4\nTEST_F(RedisTest, Get) {\n    string val = rc->execute<string>(\n        [](Redis* r) {\n            return r->get("foo").value();\n        });\n    ASSERT_NE(val, "");\n    std::cout << val << std::endl;\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"235-\u66f4\u591aapi",children:"2.3.5 \u66f4\u591aAPI"}),"\n",(0,t.jsxs)(e.p,{children:["\u4e0d\u7528\u62c5\u5fc3! \u57fa\u672c\u4e0a\u5176\u65b9\u6cd5\u540d\u79f0\u90fd\u662f\u548c",(0,t.jsx)(e.code,{children:"redis"}),"\u5728\u547d\u4ee4\u884c\u4e0a\u7684\u547d\u4ee4\u540d\u79f0\u4e00\u6a21\u4e00\u6837\u7684! (\u6211\u968f\u673a\u5c1d\u8bd5\u4e86\u597d\u51e0\u4e2a\u7684\u662f\u8fd9\u6837\u7684) (\u6d88\u606f\u961f\u5217\u4ec0\u4e48\u7684\u5c31\u4e0d\u8981\u7406\u4e86, \u4ea4\u7ed9MQ! \u4e13\u4e1a\u7684\u4eba\u505a\u4e13\u4e1a\u7684\u4e8b)"]}),"\n",(0,t.jsx)(e.h1,{id:"\u4e09c\u8de8\u5e73\u53f0\u7f16\u8bd1",children:"\u4e09\u3001C++\u8de8\u5e73\u53f0\u7f16\u8bd1"}),"\n",(0,t.jsx)(e.h2,{id:"31-\u5148\u51b3\u6761\u4ef6",children:"3.1 \u5148\u51b3\u6761\u4ef6"}),"\n",(0,t.jsx)(e.p,{children:"VS2022\u5b89\u88c5\u4e86\u5bf9\u5e94\u7684\u5185\u5bb9, \u4ee5\u53ca:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"yum -y install openssh-server gcc-c++ gdb cmake make ninja-build rsync zip unzip\nyum -y install openssl-devel libcurl-devel libuuid-devel\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u914d\u7f6e\u597d",(0,t.jsx)(e.code,{children:"NACOS"}),"\u7684\u914d\u7f6e\u6587\u4ef6, \u7136\u540e\u4f7f\u7528\u542f\u52a8\u53c2\u6570\u542f\u52a8(\u91cd\u70b9\u4fee\u6539ip, na, dh\u53c2\u6570)"]}),"\n",(0,t.jsxs)(e.p,{children:["\u66f4\u591a\u542f\u52a8/\u540e\u53f0\u542f\u52a8/\u5173\u95ed \u8bf7\u53bb ",(0,t.jsx)(e.a,{href:"/HXLoLi/docs/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/C++/%E5%A4%A7%E9%A1%B9%E7%9B%AE/%E5%A4%A7%E9%A1%B9%E7%9B%AE/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/%E5%B7%A5%E7%A8%8B%E4%BB%8B%E7%BB%8D/",children:"\u5de5\u7a0b\u4ecb\u7ecd"})," \u67e5\u770b"]}),"\n",(0,t.jsx)(e.h3,{id:"32-\u542f\u52a8\u6210\u529f",children:"3.2 \u542f\u52a8\u6210\u529f"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"Clip_2024-05-17_16-18-17.png",src:i(92212).A+"",width:"2496",height:"783"})})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}},53217:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/PixPin_2024-05-17_14-51-52-3ad6d6c44f06b5cd1038b713c4a86b65.gif"},92212:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/Clip_2024-05-17_16-18-17-7bf2dead03fc261fe5dc751b073a4ebe.png"}}]);