"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[30386],{28453:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>i});var r=t(96540);const s={},o=r.createContext(s);function c(n){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),r.createElement(o.Provider,{value:e},n.children)}},91264:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"\u7a0b\u5e8f\u8bed\u8a00/C++/tmp\u4e36C++\u4e36memo/C++\u7f51\u7edc\u7f16\u7a0b/\u5b9e\u8df5\u7248\u672c/\u6700\u7b80\u5355\u7684\u5ba2\u6237\u7aef/index","title":"\u6700\u7b80\u5355\u7684\u5ba2\u6237\u7aef","description":"client.cpp","source":"@site/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/002-tmp\u4e36C++\u4e36memo/004-C++\u7f51\u7edc\u7f16\u7a0b/001-\u5b9e\u8df5\u7248\u672c/004-\u6700\u7b80\u5355\u7684\u5ba2\u6237\u7aef/index.md","sourceDirName":"002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/002-tmp\u4e36C++\u4e36memo/004-C++\u7f51\u7edc\u7f16\u7a0b/001-\u5b9e\u8df5\u7248\u672c/004-\u6700\u7b80\u5355\u7684\u5ba2\u6237\u7aef","slug":"/\u7a0b\u5e8f\u8bed\u8a00/C++/tmp\u4e36C++\u4e36memo/C++\u7f51\u7edc\u7f16\u7a0b/\u5b9e\u8df5\u7248\u672c/\u6700\u7b80\u5355\u7684\u5ba2\u6237\u7aef/","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/tmp\u4e36C++\u4e36memo/C++\u7f51\u7edc\u7f16\u7a0b/\u5b9e\u8df5\u7248\u672c/\u6700\u7b80\u5355\u7684\u5ba2\u6237\u7aef/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/002-tmp\u4e36C++\u4e36memo/004-C++\u7f51\u7edc\u7f16\u7a0b/001-\u5b9e\u8df5\u7248\u672c/004-\u6700\u7b80\u5355\u7684\u5ba2\u6237\u7aef/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u6700\u7b80\u5355\u7684\u670d\u52a1\u7aef","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/tmp\u4e36C++\u4e36memo/C++\u7f51\u7edc\u7f16\u7a0b/\u5b9e\u8df5\u7248\u672c/\u6700\u7b80\u5355\u7684\u670d\u52a1\u7aef/"},"next":{"title":"\u5957\u63a5\u5b57\u7684\u5e38\u7528\u5c5e\u6027","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/tmp\u4e36C++\u4e36memo/C++\u7f51\u7edc\u7f16\u7a0b/\u5b9e\u8df5\u7248\u672c/\u5957\u63a5\u5b57\u7684\u5e38\u7528\u5c5e\u6027/"}}');var s=t(74848),o=t(28453);const c={},i="\u6700\u7b80\u5355\u7684\u5ba2\u6237\u7aef",d={},a=[];function l(n){const e={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"\u6700\u7b80\u5355\u7684\u5ba2\u6237\u7aef",children:"\u6700\u7b80\u5355\u7684\u5ba2\u6237\u7aef"})}),"\n",(0,s.jsx)(e.p,{children:"client.cpp"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-C++",children:'#include <iostream>\n\n#include <cstring>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <unistd.h>\n#include <string>\nusing std::string;\n\nint main()\n{\n    // 1. \u521b\u5efa socket\n    int sockfd = ::socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n    if (sockfd < 0)\n    {\n        printf("create socket error: errno=%d errmsg=%s\\n", errno, strerror(errno));\n        return 1;\n    }\n    else\n    {\n        printf("create socket success!\\n");\n    }\n\n    // 2. \u8fde\u63a5\u670d\u52a1\u7aef\n    string ip = "127.0.0.1";\n    int port = 8080;\n\n    struct sockaddr_in sockaddr;\n    std::memset(&sockaddr, 0, sizeof(sockaddr));\n    sockaddr.sin_family = AF_INET;\n    sockaddr.sin_addr.s_addr = inet_addr(ip.c_str());\n    sockaddr.sin_port = htons(port);\n    if (::connect(sockfd, (struct sockaddr *)&sockaddr, sizeof(sockaddr)) < 0)\n    {\n        printf("socket connect error: errno=%d errmsg=%s\\n", errno, strerror(errno));\n        return 1;\n    }\n\n    // 3. \u5411\u670d\u52a1\u7aef\u53d1\u9001\u6570\u636e\n    string data = "hello world";\n    ::send(sockfd, data.c_str(), data.size(), 0);\n\n    // 4. \u63a5\u6536\u670d\u52a1\u7aef\u7684\u6570\u636e\n    char buf[1024] = {0};\n    ::recv(sockfd, buf, sizeof(buf), 0);\n\n    printf("recv: %s\\n", buf);\n\n    // 5. \u5173\u95ed socket\n    ::close(sockfd);\n\n    return 0;\n}\n'})})]})}function m(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}}}]);