"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[47769],{28453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>l});var s=n(96540);const r={},i=s.createContext(r);function a(t){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:a(t.components),s.createElement(i.Provider,{value:e},t.children)}},88132:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5b57\u7b26\u4e32/C++\u5b57\u7b26\u4e32\u5207\u5206/index","title":"C++\u5b57\u7b26\u4e32\u5207\u5206","description":"\u9009\u81ea\u6211\u7684\u9879\u76ee\u7684\u5de5\u5177\u51fd\u6570: HXSTL/utils/StringUtils.h (\u91cc\u9762\u8fd8\u6709\u5f88\u591a)","source":"@site/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/014-\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/001-\u5b57\u7b26\u4e32/001-C++\u5b57\u7b26\u4e32\u5207\u5206/index.md","sourceDirName":"001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/014-\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/001-\u5b57\u7b26\u4e32/001-C++\u5b57\u7b26\u4e32\u5207\u5206","slug":"/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5b57\u7b26\u4e32/C++\u5b57\u7b26\u4e32\u5207\u5206/","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5b57\u7b26\u4e32/C++\u5b57\u7b26\u4e32\u5207\u5206/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/014-\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/001-\u5b57\u7b26\u4e32/001-C++\u5b57\u7b26\u4e32\u5207\u5206/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u57fa\u6570\u6811\u3010\u538b\u7f29\u524d\u7f00\u6811\u3011","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u5b57\u5178\u6811/\u57fa\u6570\u6811\u3010\u538b\u7f29\u524d\u7f00\u6811\u3011/"},"next":{"title":"KMP","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5b57\u7b26\u4e32/KMP/"}}');var r=n(74848),i=n(28453);const a={},l="C++\u5b57\u7b26\u4e32\u5207\u5206",d={},o=[{value:"1. split",id:"1-split",level:3}];function c(t){const e={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"c\u5b57\u7b26\u4e32\u5207\u5206",children:"C++\u5b57\u7b26\u4e32\u5207\u5206"})}),"\n",(0,r.jsxs)(e.p,{children:["\u9009\u81ea\u6211\u7684\u9879\u76ee\u7684\u5de5\u5177\u51fd\u6570: ",(0,r.jsx)(e.a,{href:"https://github.com/HengXin666/HXLibs/blob/main/include/HXSTL/utils/StringUtils.h",children:"HXSTL/utils/StringUtils.h"})," (\u91cc\u9762\u8fd8\u6709\u5f88\u591a)"]}),"\n",(0,r.jsx)(e.h3,{id:"1-split",children:"1. split"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"/**\n * @brief \u5c06\u5b57\u7b26\u4e32\u6309`delimiter`\u5206\u5272\u4e3a\u6570\u7ec4\n * @tparam Str \u5b57\u7b26\u4e32\u7c7b\u578b, \u53ef\u4ee5\u662f`std::string`\u6216\u8005`std::string_view`\u7b49\n * @tparam SkipEmpty \u662f\u5426\u8df3\u8fc7\u5207\u5272\u51fa\u6765\u7684\u7a7a\u7684\u5b57\u7b26\u4e32\n * @param str \u9700\u8981\u5206\u5272\u7684\u5b57\u7b26\u4e32\n * @param delim \u5206\u5272\u5b57\u7b26\u4e32\n * @param res \u5f85\u8fd4\u56de\u6570\u7ec4, \u4f60\u53ef\u4ee5\u4e8b\u5148\u5728\u524d\u9762\u63d2\u5165\u5143\u7d20\n * @return std::vector<Str> \n */\ntemplate <typename Str, bool SkipEmpty = true>\ninline std::vector<Str> split(\n    std::string_view str,\n    std::string_view delim, \n    std::vector<Str> res = std::vector<Str>{}\n) {\n    if (str.empty()) \n        return res;\n\n    std::size_t start = 0;\n    std::size_t end = str.find(delim, start);\n    while (end != std::string_view::npos) {\n        if constexpr (SkipEmpty) {\n            auto tk = str.substr(start, end - start);\n            if (tk.size()) {\n                res.emplace_back(std::move(tk));\n            }\n        } else {\n            res.emplace_back(str.substr(start, end - start));\n        }\n        start = end + delim.size();\n        end = str.find(delim, start);\n    }\n\n    // \u6dfb\u52a0\u6700\u540e\u4e00\u4e2a\u5206\u5272\u7684\u90e8\u5206\n    if constexpr (SkipEmpty) {\n        auto tk = str.substr(start);\n        if (tk.size()) {\n            res.emplace_back(std::move(tk));\n        }\n    } else {\n        res.emplace_back(str.substr(start));\n    }\n    return res;\n}\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u4f7f\u7528\u793a\u4f8b:"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:'string path = "/home/../loli/./.../////a/b/c///";\nauto strList = split<string_view>(path, "/");\n\n// \u5f97\u5230: ["home", "..", "loli", ".", "...", "a", "b", "c"]\n'})})]})}function p(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(c,{...t})}):c(t)}}}]);