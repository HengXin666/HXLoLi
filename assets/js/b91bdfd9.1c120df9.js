"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[79762],{10680:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>d,contentTitle:()=>c,default:()=>x,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"\u5237\u9898\u65e5\u5fd7/\u54110x3f\u5927\u4f6c\u5b66\u4e60/BFS\u3001DFS\u603b\u7ed3/index","title":"index","description":"\u4e8c\u53c9\u6811 vs \u7f51\u683c\u56fe vs \u4e00\u822c\u56fe","source":"@site/docs/007-\u5237\u9898\u65e5\u5fd7/007-\u54110x3f\u5927\u4f6c\u5b66\u4e60/002-BFS\u3001DFS\u603b\u7ed3/index.md","sourceDirName":"007-\u5237\u9898\u65e5\u5fd7/007-\u54110x3f\u5927\u4f6c\u5b66\u4e60/002-BFS\u3001DFS\u603b\u7ed3","slug":"/\u5237\u9898\u65e5\u5fd7/\u54110x3f\u5927\u4f6c\u5b66\u4e60/BFS\u3001DFS\u603b\u7ed3/","permalink":"/HXLoLi/docs/\u5237\u9898\u65e5\u5fd7/\u54110x3f\u5927\u4f6c\u5b66\u4e60/BFS\u3001DFS\u603b\u7ed3/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/007-\u5237\u9898\u65e5\u5fd7/007-\u54110x3f\u5927\u4f6c\u5b66\u4e60/002-BFS\u3001DFS\u603b\u7ed3/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u56de\u6eaf","permalink":"/HXLoLi/docs/\u5237\u9898\u65e5\u5fd7/\u54110x3f\u5927\u4f6c\u5b66\u4e60/\u56de\u6eaf/"},"next":{"title":"\u6ed1\u52a8\u7a97\u53e3\u4e36","permalink":"/HXLoLi/docs/\u5237\u9898\u65e5\u5fd7/\u54110x3f\u5927\u4f6c\u5b66\u4e60/\u6ed1\u52a8\u7a97\u53e3\u4e36/"}}');var t=e(74848),r=e(28453);const l={},c=void 0,d={},o=[{value:"\u4e8c\u53c9\u6811 vs \u7f51\u683c\u56fe vs \u4e00\u822c\u56fe",id:"\u4e8c\u53c9\u6811-vs-\u7f51\u683c\u56fe-vs-\u4e00\u822c\u56fe",level:2},{value:"BFS \u6a21\u7248",id:"bfs-\u6a21\u7248",level:2},{value:"\u5404\u7c7b\u9898\u7684\u5199\u6cd5",id:"\u5404\u7c7b\u9898\u7684\u5199\u6cd5",level:3}];function a(n){const i={a:"a",annotation:"annotation",b:"b",blockquote:"blockquote",code:"code",div:"div",em:"em",h2:"h2",h3:"h3",li:"li",math:"math",mn:"mn",mo:"mo",mrow:"mrow",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",style:"style",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"\u4e8c\u53c9\u6811-vs-\u7f51\u683c\u56fe-vs-\u4e00\u822c\u56fe",children:"\u4e8c\u53c9\u6811 vs \u7f51\u683c\u56fe vs \u4e00\u822c\u56fe"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{}),(0,t.jsx)(i.th,{children:"\u91cd\u590d\u8bbf\u95ee"}),(0,t.jsx)(i.th,{children:"\u90bb\u5c45\u4e2a\u6570"}),(0,t.jsx)(i.th,{children:"DFS"}),(0,t.jsx)(i.th,{children:"BFS"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"\u4e8c\u53c9\u6811"}),(0,t.jsx)(i.td,{children:"\u5426"}),(0,t.jsx)(i.td,{children:(0,t.jsxs)(i.span,{className:"katex",children:[(0,t.jsx)(i.span,{className:"katex-mathml",children:(0,t.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(i.semantics,{children:[(0,t.jsxs)(i.mrow,{children:[(0,t.jsx)(i.mo,{children:"\u2264"}),(0,t.jsx)(i.mn,{children:"3"})]}),(0,t.jsx)(i.annotation,{encoding:"application/x-tex",children:"\\le 3"})]})})}),(0,t.jsxs)(i.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(i.span,{className:"base",children:[(0,t.jsx)(i.span,{className:"strut",style:{height:"0.7719em",verticalAlign:"-0.136em"}}),(0,t.jsx)(i.span,{className:"mrel",children:"\u2264"}),(0,t.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(i.span,{className:"base",children:[(0,t.jsx)(i.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(i.span,{className:"mord",children:"3"})]})]})]})}),(0,t.jsx)(i.td,{children:"\u524d\u4e2d\u540e\u5e8f"}),(0,t.jsx)(i.td,{children:"\u5c42\u5e8f"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"\u7f51\u683c\u56fe"}),(0,t.jsx)(i.td,{children:"\u662f"}),(0,t.jsx)(i.td,{children:(0,t.jsxs)(i.span,{className:"katex",children:[(0,t.jsx)(i.span,{className:"katex-mathml",children:(0,t.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(i.semantics,{children:[(0,t.jsxs)(i.mrow,{children:[(0,t.jsx)(i.mo,{children:"\u2264"}),(0,t.jsx)(i.mn,{children:"8"})]}),(0,t.jsx)(i.annotation,{encoding:"application/x-tex",children:"\\le 8"})]})})}),(0,t.jsxs)(i.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(i.span,{className:"base",children:[(0,t.jsx)(i.span,{className:"strut",style:{height:"0.7719em",verticalAlign:"-0.136em"}}),(0,t.jsx)(i.span,{className:"mrel",children:"\u2264"}),(0,t.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(i.span,{className:"base",children:[(0,t.jsx)(i.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(i.span,{className:"mord",children:"8"})]})]})]})}),(0,t.jsx)(i.td,{children:"\u8fde\u901a\u5757"}),(0,t.jsx)(i.td,{children:"\u6700\u77ed\u8def"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"\u4e00\u822c\u56fe"}),(0,t.jsx)(i.td,{children:"\u662f"}),(0,t.jsx)(i.td,{children:"\u4efb\u610f"}),(0,t.jsx)(i.td,{children:"\u8fde\u901a\u5757\u3001\u5224\u73af\u7b49"}),(0,t.jsx)(i.td,{children:"\u6700\u77ed\u8def\u7b49"})]})]})]}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsxs)(i.p,{children:["\u6ce81\uff1a\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f51\u683c\u56fe\u662f\u56db\u65b9\u5411\u7684\uff0c\u6bcf\u4e2a\u683c\u5b50\u7684\u90bb\u5c45\u4e2a\u6570\u4e0d\u8d85\u8fc7 ",(0,t.jsxs)(i.span,{className:"katex",children:[(0,t.jsx)(i.span,{className:"katex-mathml",children:(0,t.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(i.semantics,{children:[(0,t.jsx)(i.mrow,{children:(0,t.jsx)(i.mn,{children:"4"})}),(0,t.jsx)(i.annotation,{encoding:"application/x-tex",children:"4"})]})})}),(0,t.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(i.span,{className:"base",children:[(0,t.jsx)(i.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(i.span,{className:"mord",children:"4"})]})})]}),"\u3002\u672c\u9898\u662f\u516b\u65b9\u5411\u7684\uff0c\u6bcf\u4e2a\u683c\u5b50\u7684\u90bb\u5c45\u4e2a\u6570\u4e0d\u8d85\u8fc7 ",(0,t.jsxs)(i.span,{className:"katex",children:[(0,t.jsx)(i.span,{className:"katex-mathml",children:(0,t.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(i.semantics,{children:[(0,t.jsx)(i.mrow,{children:(0,t.jsx)(i.mn,{children:"8"})}),(0,t.jsx)(i.annotation,{encoding:"application/x-tex",children:"8"})]})})}),(0,t.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(i.span,{className:"base",children:[(0,t.jsx)(i.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(i.span,{className:"mord",children:"8"})]})})]}),"\u3002"]}),"\n",(0,t.jsx)(i.p,{children:"\u6ce82\uff1aBFS \u4e5f\u53ef\u4ee5\u5224\u65ad\u8fde\u901a\u5757\uff0c\u4f46\u8981\u624b\u52a8\u7528\u961f\u5217\u4fdd\u5b58\u5f85\u8bbf\u95ee\u8282\u70b9\uff1b\u800c DFS \u662f\u8ba1\u7b97\u673a\u5e2e\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u6808\uff0c\u81ea\u52a8\u4fdd\u5b58\u9012\u5f52\u8def\u5f84\u4e0a\u7684\u8282\u70b9\uff0c\u4e0d\u9700\u8981\u624b\u52a8\u5904\u7406\u3002\u6240\u4ee5\u4ee3\u7801\u4e0a DFS \u901a\u5e38\u6bd4 BFS \u8981\u7b80\u77ed\u3002"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"bfs-\u6a21\u7248",children:"BFS \u6a21\u7248"}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsxs)(i.strong,{children:["BFS \u53ef\u4ee5\u7528\u6765\u6c42",(0,t.jsx)(i.code,{children:"\u6700\u77ed\u8def\u5f84\u95ee\u9898"}),"\u3002BFS \u5148\u641c\u7d22\u5230\u7684\u7ed3\u70b9\uff0c\u4e00\u5b9a\u662f\u8ddd\u79bb\u6700\u8fd1\u7684\u7ed3\u70b9\u3002"]})}),"\n",(0,t.jsx)(i.p,{children:"BFS \u4f7f\u7528\u961f\u5217\uff0c\u628a\u6bcf\u4e2a\u8fd8\u6ca1\u6709\u641c\u7d22\u5230\u7684\u70b9\u4f9d\u6b21\u653e\u5165\u961f\u5217\uff0c\u7136\u540e\u518d\u5f39\u51fa\u961f\u5217\u7684\u5934\u90e8\u5143\u7d20\u5f53\u505a\u5f53\u524d\u904d\u5386\u70b9\u3002BFS \u603b\u5171\u6709\u4e24\u4e2a\u6a21\u677f\uff1a"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"\u5982\u679c\u4e0d\u9700\u8981\u786e\u5b9a\u5f53\u524d\u904d\u5386\u5230\u4e86\u54ea\u4e00\u5c42\uff0cBFS \u6a21\u677f\u5982\u4e0b\u3002"}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c++",metastring:"py",children:"while queue \u4e0d\u7a7a\uff1a\n    cur = queue.pop()\n    for \u8282\u70b9 in cur\u7684\u6240\u6709\u76f8\u90bb\u8282\u70b9\uff1a\n        if \u8be5\u8282\u70b9\u6709\u6548\u4e14\u672a\u8bbf\u95ee\u8fc7\uff1a\n            \u6807\u8bb0\u8be5\u8282\u70b9\u4e3a\u5df2\u7ecf\u8bbf\u95ee\n            queue.push(\u8be5\u8282\u70b9)\n"})}),"\n",(0,t.jsxs)(i.ol,{start:"2",children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"\u5982\u679c\u8981\u786e\u5b9a\u5f53\u524d\u904d\u5386\u5230\u4e86\u54ea\u4e00\u5c42\uff0cBFS \u6a21\u677f\u5982\u4e0b\u3002"}),"\n",(0,t.jsxs)(i.p,{children:["\u8fd9\u91cc\u589e\u52a0\u4e86",(0,t.jsx)(i.code,{children:"level"}),"\u8868\u793a\u5f53\u524d\u904d\u5386\u5230\u4e8c\u53c9\u6811\u4e2d\u7684\u54ea\u4e00\u5c42\u4e86\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u4e00\u4e2a\u56fe\u4e2d\uff0c\u73b0\u5728\u5df2\u7ecf\u8d70\u4e86\u591a\u5c11\u6b65\u4e86\u3002",(0,t.jsx)(i.code,{children:"size"}),"\u8868\u793a\u5728\u5f53\u524d\u904d\u5386\u5c42\u6709\u591a\u5c11\u4e2a\u5143\u7d20\uff0c\u4e5f\u5c31\u662f\u961f\u5217\u4e2d\u7684\u5143\u7d20\u6570\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\u5143\u7d20\u4e00\u6b21\u6027\u904d\u5386\u5b8c\uff0c\u5373\u628a\u5f53\u524d\u5c42\u7684\u6240\u6709\u5143\u7d20\u90fd\u5411\u5916\u8d70\u4e86\u4e00\u6b65\u3002"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",metastring:"py",children:"level = 0\nwhile queue \u4e0d\u7a7a\uff1a\n    size = queue.size()\n    while (size --) {\n        cur = queue.pop()\n        for \u8282\u70b9 in cur\u7684\u6240\u6709\u76f8\u90bb\u8282\u70b9\uff1a\n            if \u8be5\u8282\u70b9\u6709\u6548\u4e14\u672a\u88ab\u8bbf\u95ee\u8fc7\uff1a\n                \u6807\u8bb0\u8be5\u8282\u70b9\u4e3a\u5df2\u7ecf\u8bbf\u95ee\n                queue.push(\u8be5\u8282\u70b9)\n    }\n    level ++;\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsxs)(i.b,{style:{color:"red"},children:["\u8840\u7684\u6559\u8bad: \u6700\u597d\u4e0d\u8981\u5728",(0,t.jsx)(i.code,{children:"for"}),"\u5916\u9762\u8fdb\u884c\u6807\u8bb0\u662f\u5426\u5df2\u7ecf\u8bbf\u95ee,"]})}),(0,t.jsx)(i.b,{style:{color:"red"},children:"\n"}),(0,t.jsxs)(i.ul,{children:[(0,t.jsxs)(i.b,{style:{color:"red"},children:["\n",(0,t.jsx)(i.li,{children:"\u56e0\u4e3a\u53ef\u80fd\u4f60\u5165\u961f\u8fd8\u6ca1\u6709\u6765\u5f97\u53ca\u51fa\u961f(\u6807\u8bb0)"}),"\n",(0,t.jsx)(i.li,{children:"\u5c31\u53c8\u6709\u4e00\u4e2a\u5143\u7d20\u53c8tm\u8bbf\u95ee\u5230\u4f60\u4e4b\u524d\u7684\u4f4d\u7f6e, \u7136\u540e\u56e0\u4e3a\u6ca1\u6709\u6765\u5f97\u53ca\u6807\u8bb0, \u5c31\u5bfc\u81f4\u91cd\u590d\u5165\u961f\u4e86!!!"}),"\n"]}),(0,t.jsxs)(i.li,{children:[(0,t.jsxs)(i.b,{style:{color:"red"},children:[(0,t.jsxs)(i.em,{children:["\u4e0b\u9762\u524d\u51e0\u4e2a\u4ee3\u7801\u90fd\u6709\u8fd9\u79cd\u9519\u8bef, \u6211\u8fd8\u7eb3\u95f7\u4e86, \u6240\u4ee5\u5728",(0,t.jsx)(i.code,{children:"for"}),"\u5916\u9762\u5199\u4e86\u4e00\u4e9b\u5947\u5f62\u602a\u72b6\u7684",(0,t.jsx)(i.code,{children:"if"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"\u5404\u7c7b\u9898\u7684\u5199\u6cd5",children:"\u5404\u7c7b\u9898\u7684\u5199\u6cd5"}),"\n",(0,t.jsx)(i.style,{children:"\n    /* \u81ea\u5b9a\u4e49\u6eda\u52a8\u6761\u6837\u5f0f */\n    .hx::-webkit-scrollbar {\n        height: 10px; /* \u8bbe\u7f6e\u6eda\u52a8\u6761\u5bbd\u5ea6 */\n    }\n\n    /* \u8f68\u9053 */\n    .hx::-webkit-scrollbar-track {\n        background-color: #650056; /* \u8bbe\u7f6e\u8f68\u9053\u80cc\u666f\u8272 */\n    }\n\n    /* \u6ed1\u5757 */\n    .hx::-webkit-scrollbar-thumb {\n        background-color: #990099; /* \u8bbe\u7f6e\u6ed1\u5757\u80cc\u666f\u8272 */\n        border-radius: 5px; /* \u8bbe\u7f6e\u6ed1\u5757\u5706\u89d2 */\n    }\n\n    /* \u5f53\u9f20\u6807\u60ac\u505c\u5728\u6ed1\u5757\u4e0a\u65f6 */\n    .hx::-webkit-scrollbar-thumb:hover {\n        background-color: red; /* \u8bbe\u7f6e\u6ed1\u5757\u60ac\u505c\u65f6\u7684\u80cc\u666f\u8272 */\n    }\n"}),"\n",(0,t.jsxs)(i.div,{className:"hx",style:{display:"flex",overflowX:"auto"},children:["\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/max-area-of-island/description/",children:"695. \u5c9b\u5c7f\u7684\u6700\u5927\u9762\u79ef"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    int fx[4][2] = { // \u65b9\u5411\u5411\u91cf\n        {0, 1}, {0, -1}, {1, 0}, {-1, 0}\n    };\npublic:\n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n        int res = 0;\n        int now_s = 0;\n        function<void(int, int)> dfs = [&](int i, int j) {\n            if (i < 0 || j < 0 || i >= grid.size() || j >= grid[0].size() || grid[i][j] != 1)\n                return;\n\n            grid[i][j] = 2; // \u6807\u8bb0\u4e3a\u5df2\u7ecf\u8d70\u8fc7\n            ++now_s;\n\n            for (auto& it : fx) {\n                dfs(i + it[0], j + it[1]);\n            }\n        };\n\n        for (int i = 0; i < grid.size(); ++i) {\n            for (int j = 0; j < grid[i].size(); ++j) {\n                if (grid[i][j] == 1) {\n                    now_s = 0;\n                    dfs(i, j);\n                    res = max(res, now_s);\n                }\n            }\n        }\n\n        return res;\n    }\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/pond-sizes-lcci/description/",children:"\u9762\u8bd5\u9898 16.19. \u6c34\u57df\u5927\u5c0f"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    const int fx[8][2] = { // \u65b9\u5411\u5411\u91cf\n        {0, 1}, {0, -1},\n        {1, 0}, {-1, 0},\n        {1, 1}, {-1, -1},\n        {1, -1}, {-1, 1}\n    };\npublic:\n    vector<int> pondSizes(vector<vector<int>>& land) {\n        vector<int> tmp;\n        int now_s = 0;\n        function<void(int, int)> dfs = [&](int i, int j) {\n            if (i < 0 || j < 0 || i >= land.size() || j >= land[0].size() || land[i][j])\n                return;\n            land[i][j] = -1; // \u6807\u8bb0\u5df2\u7ecf\u8bbf\u95ee\u7684\n            ++now_s;\n            for (auto& it : fx) {\n                dfs(i + it[0], j + it[1]);\n            }\n        };\n\n        for (int i = 0; i < land.size(); ++i) {\n            for (int j = 0; j < land[0].size(); ++j) {\n                if (!land[i][j]) {\n                    now_s = 0;\n                    dfs(i, j);\n                    tmp.push_back(now_s);\n                }\n            }\n        }\n\n        sort(tmp.begin(), tmp.end());\n        return tmp;\n    }\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/island-perimeter/description/",children:"463. \u5c9b\u5c7f\u7684\u5468\u957f"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    const int fx[4][2] = {\n        {0, 1}, {0, -1},\n        {-1, 0}, {1, 0}\n    };\npublic:\n    int islandPerimeter(vector<vector<int>>& grid) {\n        int res = 0;\n        int n = grid.size(), m = grid[0].size();\n        // \u6070\u597d\u6709\u4e00\u4e2a\u5c9b\n        function<bool(int, int)> dfs = [&](int i, int j) {\n            if (i < 0 || j < 0 || i >= n || j >= m || !grid[i][j])\n                return 1;\n            if (grid[i][j] == 2)\n                return 0;\n            grid[i][j] = 2; // \u6807\u8bb0\n            for (auto& it : fx) {\n                if (dfs(i + it[0], j + it[1]))\n                    ++res;\n            }\n            return 0;\n        };\n\n        for (int i = 0; i < n; ++i)\n            for (int j = 0; j < m; ++j)\n                if (grid[i][j] == 1)\n                    dfs(i, j);\n        return res;\n    }\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/maximum-number-of-fish-in-a-grid/description/",children:"2658. \u7f51\u683c\u56fe\u4e2d\u9c7c\u7684\u6700\u5927\u6570\u76ee"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    const int fx[4][2] = {\n        {0, 1}, {1, 0},\n        {0, -1}, {-1, 0}\n    };\npublic:\n    int findMaxFish(vector<vector<int>>& grid) {\n        int res = 0;\n        int now_s = 0;\n        int n = grid.size(), m = grid[0].size();\n        function<void(int, int)> dfs = [&](int i, int j) {\n            if (i < 0 || j < 0 || i >= n || j >= m || grid[i][j] <= 0)\n                return;\n            \n            now_s += grid[i][j];\n            grid[i][j] = -1;\n\n            for (auto& it : fx) {\n                dfs(i + it[0], j + it[1]);\n            }\n        };\n\n        for (int i = 0; i < n; ++i)\n            for (int j = 0; j < m; ++j)\n                if (grid[i][j] > 0) {\n                    now_s = 0;\n                    dfs(i, j);\n                    res = max(res, now_s);\n                }\n        return res;\n    }\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/coloring-a-border/description/",children:"1034. \u8fb9\u754c\u7740\u8272"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    const int fx[4][2] = {\n        {0, 1}, \n        {1, 0},\n        {0, -1},\n        {-1, 0}\n    };\npublic:\n    vector<vector<int>> colorBorder(vector<vector<int>>& grid, int row, int col, int color) {\n        vector<vector<char>> vis(grid.size(), vector<char>(grid[0].size(), 0)); \n        // \u5bf9 \u76f8\u540c\u989c\u8272 [\u76f8\u540c\u8fde\u901a\u5206\u91cf]\n        // \u4e0d\u540c\u989c\u8272\u8fdb\u884c\u67d3\u8272 [\u76f8\u540c\u8fde\u901a\u5206\u91cf\u8fb9\u754c->\u6570\u7ec4\u8fb9\u754c/]\n        function<bool(int, int, int)> dfs = [&](int i, int j, int paColor) {\n            if (i < 0 \n            || j < 0 \n            || i >= grid.size() \n            || j >= grid[i].size())\n                return 1;\n            \n            if (vis[i][j])\n                return 0;\n\n            if (grid[i][j] != paColor) {\n                return 1;\n            }\n            \n            vis[i][j] = 1; // \u6807\u8bb0\n\n            for (auto& it : fx) {\n                if (dfs(i + it[0], j + it[1], paColor)) {\n                    grid[i][j] = color;\n                }\n            }\n\n            return 0;\n        };\n\n        dfs(row, col, grid[row][col]);\n\n        return grid;\n    }\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/01-matrix/description/",children:"542. 01 \u77e9\u9635"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    const int fx[4][2] = {\n        {0, 1}, {0, -1}, {1, 0}, {-1, 0}\n    };\npublic:\n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {\n        int n = mat.size();\n        int m = mat[0].size();\n        vector<vector<char>> vis(n, vector<char>(m));\n        queue<pair<pair<int, int>, int>> pq;\n\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                if (!mat[i][j]) {\n                    pq.push({{i, j}, 0});\n                } else\n                    mat[i][j] = -1;\n            }\n        }\n\n        while (pq.size()) {\n            auto [zb, jl] = pq.front();\n            auto [i, j] = zb;\n            pq.pop();\n\n            if (i < 0 || j < 0 || i >= n || j >= m || vis[i][j])\n                continue;\n            vis[i][j] = 1;\n\n            if (mat[i][j] == -1)\n                mat[i][j] = jl;\n\n            for (auto& it : fx) {\n                pq.push({{i + it[0], j + it[1]}, jl + 1});\n            }\n        }\n\n        return mat;\n    }\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/rotting-oranges/description/",children:"994. \u8150\u70c2\u7684\u6a58\u5b50"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    const int fx[4][2] = {\n        {0, 1}, {1, 0},\n        {-1, 0}, {0, -1}\n    };\npublic:\n    int orangesRotting(vector<vector<int>>& grid) {\n        int res = 0; // \u5206\u949f\u6570\n        int good = 0;\n        int n = grid.size();\n        int m = grid[0].size();\n        queue<pair<pair<int, int>, int>> pq;\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                if (grid[i][j] == 2) {\n                    pq.push({{i, j}, 0});\n                } else if (grid[i][j] == 1)\n                    ++good;\n            }\n        }\n\n        while (pq.size()) {\n            auto [zb, t] = pq.front();\n            auto [i, j] = zb;\n            pq.pop();\n            if (grid[i][j] == 3)\n                continue;\n            res = max(res, t);\n            if (grid[i][j] == 1 && --good == 0)\n                return res;\n            grid[i][j] = 3;\n            for (auto& it : fx) {\n                int y = i + it[0], x = j + it[1];\n                if (y >= 0 && y < n && x >= 0 && x < m && grid[y][x] == 1) {\n                    pq.push({{y, x}, t + 1});\n                }\n            }\n        }\n\n        return good ? -1 : res;\n    }\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/nearest-exit-from-entrance-in-maze/description/",children:"1926. \u8ff7\u5bab\u4e2d\u79bb\u5165\u53e3\u6700\u8fd1\u7684\u51fa\u53e3"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    const int fx[4][2] = {\n        {1, 0}, {0, 1}, {0, -1}, {-1, 0}\n    };\npublic:\n    int nearestExit(\n        vector<vector<char>>& maze, vector<int>& entrance) {\n            int n = maze.size();\n            int m = maze[0].size();\n            queue<pair<int, int>> pq;\n            pq.push({entrance[0], entrance[1]}); // [i][j]\n            int res = 0;\n            while (pq.size()) {\n                int k = pq.size();\n                while (k--) {\n                    auto [i, j] = pq.front();\n                    pq.pop();\n\n                    if (!(i == entrance[0] && j == entrance[1]) // \u627e\u5230\u51fa\u53e3\n                    && (i == 0 || j == 0 || i == n - 1 || j == m - 1))\n                        return res;\n\n                    for (auto& it : fx) {\n                        int y = i + it[0], x = j + it[1];\n                        if (y >= 0 && y < n && x >= 0 && x < m && maze[y][x] == '.') {\n                            maze[y][x] = '-';\n                            pq.push({y, x});\n                        }\n                    }\n                }\n                ++res;\n            }\n\n            return -1;\n    }\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/as-far-from-land-as-possible/description/",children:"1162. \u5730\u56fe\u5206\u6790"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    const int fx[4][2] = {\n        {1, 0}, {-1, 0}, {0, -1}, {0, 1}\n    };\npublic:\n    int maxDistance(vector<vector<int>>& grid) {\n        // \u627e\u51fa\u6240\u6709\u7684 0\n        // \u8981\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684 1\n        queue<pair<int, int>> pq;\n        int n = grid.size(), m = grid[0].size();\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                if (grid[i][j]) {\n                    grid[i][j] = -1; // \u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86\n                    pq.push({i, j});\n                }\n            }\n        }\n\n        if (!pq.size() || pq.size() == m * n)\n            return -1;\n\n        int res = 0;\n        while (pq.size()) {\n            int k = pq.size();\n            while (k--) {\n                auto [i, j] = pq.front();\n                pq.pop();\n\n                for (auto& it : fx) {\n                    int y = i + it[0], x = j + it[1];\n                    if (y >= 0 && y < n && x >= 0 && x < m && grid[y][x] != -1) {\n                        grid[y][x] = -1;\n                        pq.push({y, x});\n                    }\n                }\n            }\n            ++res;\n        }\n\n        return res - 1;\n    }\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/shortest-bridge/description/",children:"934. \u6700\u77ed\u7684\u6865"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    const int fx[4][2] = {\n        {1, 0}, {-1, 0}, {0, 1}, {0, -1}\n    };\npublic:\n    int shortestBridge(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        queue<pair<int, int>> pq;\n\n        function<void(int, int)> dfs = [&](int i, int j) {\n            if (i < 0 || j < 0 || i >= n || j >= m || grid[i][j] != 1)\n                return;\n            grid[i][j] = 2;\n            pq.push({i, j});\n            for (auto& it : fx) {\n                dfs(i + it[0], j + it[1]);\n            }\n        };\n\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                if (grid[i][j]) {\n                    dfs(i, j);\n                    goto FXXK;\n                }\n            }\n        }\n\n        FXXK:\n        int res = 0;\n        while (pq.size()) {\n            int k = pq.size();\n            while (k--) {\n                // \u6700\u5148\u627e\u52301\u7684\u662f\u8d62\u5bb6\n                auto [i, j] = pq.front();\n                pq.pop();\n\n                for (auto& it : fx) {\n                    int y = i + it[0], x = j + it[1];\n                    if (y >= 0 && y < n && x >= 0 && x < m && grid[y][x] != 2) {\n                        if (grid[y][x] == 1)\n                            return res;\n                        grid[y][x] = 2;\n                        pq.push({y, x});\n                    }\n                }\n            }\n            ++res;\n        }\n        return -1;\n    }\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/k-highest-ranked-items-within-a-price-range/description/",children:"2146. \u4ef7\u683c\u8303\u56f4\u5185\u6700\u9ad8\u6392\u540d\u7684 K \u6837\u7269\u54c1"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    const int fx[4][2] = {\n        {-1, 0}, {0, -1}, {1, 0}, {0, 1}\n    };\npublic:\n    vector<vector<int>> highestRankedKItems(\n        vector<vector<int>>& grid, \n        vector<int>& pricing, \n        vector<int>& start, int k) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int row = start[0], col = start[1];\n        int low = pricing[0], high = pricing[1];\n        // \u8ddd\u79bb - \u4ef7\u683c - \u5750\u6807[i][j]\n        vector<tuple<int, int, int, int>> tmp;\n        queue<tuple<int, int, int>> pq; // \u5f53\u524d\u5750\u6807[i][j] \u8ddd\u79bb\n        if (low <= grid[row][col] && grid[row][col] <= high)\n            tmp.push_back({0, grid[row][col], row, col});\n        grid[row][col] = -grid[row][col];\n        pq.push({row, col, 0});\n\n        while (pq.size()) {\n            auto [i, j, jl] = pq.front();\n            pq.pop();\n\n            ++jl;\n            for (auto& it : fx) {\n                int y = i + it[0], x = j + it[1];\n                if (y >= 0 && y < n && x >= 0 && x < m && grid[y][x] > 0) {\n                    if (low <= grid[y][x] && grid[y][x] <= high) {\n                        tmp.push_back({jl, grid[y][x], y, x});\n                    }\n                    grid[y][x] = -grid[y][x];\n                    pq.push({y, x, jl});\n                }\n            }\n        }\n        \n        sort(tmp.begin(), tmp.end()); // \u5229\u7528 tiple \u4ece\u5de6\u5230\u53f3 \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n        vector<vector<int>> res;\n        for (int i = 0; i < k && i < tmp.size(); ++i) {\n            auto [jl, jg, y, x] = tmp[i];\n            res.push_back({y, x});\n        }\n\n        return res;\n    }\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(i.div,{style:{flex:"1",border:"1px solid black",padding:"10px"},children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/map-of-highest-peak/description/",children:"1765. \u5730\u56fe\u4e2d\u7684\u6700\u9ad8\u70b9"})," (",(0,t.jsx)(i.em,{children:"\u7b26\u5408C++11\u7684\u5199\u6cd5"}),") \u6211\u611f\u89c9\u5df2\u7ecf\u975e\u5e38\u7684\u6a21\u7248(\u6807\u51c6)\u4e86"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-C++",children:"class Solution {\n    const int fx[4][2] = {\n        {0, 1}, {0, -1}, {1, 0}, {-1, 0}\n    };\npublic:\n    vector<vector<int>> highestPeak(\n        vector<vector<int>>& isWater) {\n        int n = isWater.size(), m = isWater[0].size();\n        vector<vector<char>> vis(n, vector<char>(m)); // \u6807\u8bb0\n        // [i][j] - \u9ad8\u5ea6\n        queue<tuple<int, int, int>> pq;\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                if (isWater[i][j]) {\n                    vis[i][j] = 1;\n                    isWater[i][j] = 0;\n                    pq.push(make_tuple(i, j, 0));\n                }\n            }\n        }\n\n        while (pq.size()) {\n            int i, j, h;\n            tie(i, j, h) = pq.front();\n            pq.pop();\n\n            ++h;\n            for (auto& it : fx) {\n                int y = i + it[0], x = j + it[1];\n                if (y >= 0 && y < n && x >= 0 && x < m && !vis[y][x]) {\n                    isWater[y][x] = h;\n                    vis[y][x] = 1;\n                    pq.push(make_tuple(y, x, h));\n                }\n            }\n        }\n\n        return isWater;\n    }\n};\n"})}),"\n"]}),"\n"]})]})}function x(n={}){const{wrapper:i}={...(0,r.R)(),...n.components};return i?(0,t.jsx)(i,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}},28453:(n,i,e)=>{e.d(i,{R:()=>l,x:()=>c});var s=e(96540);const t={},r=s.createContext(t);function l(n){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function c(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(r.Provider,{value:i},n.children)}}}]);