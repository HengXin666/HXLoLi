"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[37633],{28453:(n,s,e)=>{e.d(s,{R:()=>r,x:()=>l});var a=e(96540);const i={},t=a.createContext(i);function r(n){const s=a.useContext(t);return a.useMemo((function(){return"function"==typeof n?n(s):{...s,...n}}),[s,n])}function l(n){let s;return s=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),a.createElement(t.Provider,{value:s},n.children)}},29325:(n,s,e)=>{e.d(s,{A:()=>a});const a=e.p+"assets/images/Clip_2024-02-08_11-09-39-b29aee1034a8d91259a3fdc6ea33af60.png"},82534:(n,s,e)=>{e.d(s,{A:()=>a});const a=e.p+"assets/images/Clip_2024-03-09_14-01-08-fed121c23a39179c30f6141c482790ee.png"},93433:(n,s,e)=>{e.r(s),e.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/\u6700\u77ed\u8def\u5f84/Dijkstra\u7b97\u6cd5/index","title":"Dijkstra\u7b97\u6cd5","description":"\u5e94\u7528\u573a\u666f","source":"@site/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/005-\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/006-\u6700\u77ed\u8def\u5f84/001-Dijkstra\u7b97\u6cd5/index.md","sourceDirName":"001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/005-\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/006-\u6700\u77ed\u8def\u5f84/001-Dijkstra\u7b97\u6cd5","slug":"/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/\u6700\u77ed\u8def\u5f84/Dijkstra\u7b97\u6cd5/","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/\u6700\u77ed\u8def\u5f84/Dijkstra\u7b97\u6cd5/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/005-\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/006-\u6700\u77ed\u8def\u5f84/001-Dijkstra\u7b97\u6cd5/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1748594542000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Prim\u7b97\u6cd5","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/\u6700\u5c0f\u751f\u6210\u6811/Prim\u7b97\u6cd5/"},"next":{"title":"floyd\u7b97\u6cd5","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/\u6700\u77ed\u8def\u5f84/floyd\u7b97\u6cd5/"}}');var i=e(74848),t=e(28453);const r={},l="Dijkstra\u7b97\u6cd5",c={},d=[{value:"\u5e94\u7528\u573a\u666f",id:"\u5e94\u7528\u573a\u666f",level:2},{value:"\u7b97\u6cd5\u63cf\u8ff0",id:"\u7b97\u6cd5\u63cf\u8ff0",level:2},{value:"\u4e3e\u4f8b",id:"\u4e3e\u4f8b",level:2},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:2},{value:"\u7ade\u8d5b\u7248",id:"\u7ade\u8d5b\u7248",level:3},{value:"\u6734\u7d20\u7248(\u9002\u5408\u7a20\u5bc6\u56fe) O(N^2) \u65f6\u95f4\u590d\u6742\u5ea6",id:"\u6734\u7d20\u7248\u9002\u5408\u7a20\u5bc6\u56fe-on2-\u65f6\u95f4\u590d\u6742\u5ea6",level:4},{value:"\u5806\u4f18\u5316 O(NlogN) (\u9002\u5408\u7a00\u758f\u56fe)",id:"\u5806\u4f18\u5316-onlogn-\u9002\u5408\u7a00\u758f\u56fe",level:4},{value:"\u5b66\u4e60\u7248",id:"\u5b66\u4e60\u7248",level:3}];function h(n){const s={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",math:"math",mi:"mi",mo:"mo",mrow:"mrow",mstyle:"mstyle",mtext:"mtext",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"dijkstra\u7b97\u6cd5",children:"Dijkstra\u7b97\u6cd5"})}),"\n",(0,i.jsx)(s.h2,{id:"\u5e94\u7528\u573a\u666f",children:"\u5e94\u7528\u573a\u666f"}),"\n",(0,i.jsxs)(s.p,{children:["\u5728\u7ed9\u5b9a\u7684 ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"\u6709\u5411\u6709\u6743\u56fe"})})," \u4e2d, \u8f93\u51fa",(0,i.jsx)(s.strong,{children:"\u6307\u5b9a\u70b9"}),"\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed",(0,i.jsx)(s.strong,{children:"\u8def\u5f84"}),"."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"\u5bf9\u4e8e\u65e0\u5411\u56fe, \u53ef\u4ee5\u8f6c\u5316\u4e3a \u53cc\u5411\u7684\u6709\u5411\u56fe \u5373\u53ef..."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["\u9700\u8981\u6ce8\u610f\u7684\u662f, ",(0,i.jsx)(s.code,{children:"Dijkstra"}),"\u7b97\u6cd5\u53ea\u9002\u7528\u4e8e\u8fb9\u6743\u4e3a\u6b63\u6570\u7684\u60c5\u51b5, \u5982\u679c\u8fb9\u6743\u662f\u8d1f\u6570\u60c5\u51b5, \u5219\u5e94\u8be5\u8bd5\u7528",(0,i.jsx)(s.code,{children:"Bellman-Ford"}),"\u7b97\u6cd5\u548c",(0,i.jsx)(s.code,{children:"SPFA"}),"\u7b97\u6cd5\u3002"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"\u7b97\u6cd5\u63cf\u8ff0",children:"\u7b97\u6cd5\u63cf\u8ff0"}),"\n",(0,i.jsxs)(s.p,{children:["\u81ea\u5b9a\u4e49\u70b9",(0,i.jsx)(s.code,{children:"A"}),", \u5f97\u51fa\u56fe\u4e2d\u6240\u6709\u70b9\u5230",(0,i.jsx)(s.code,{children:"A"}),"\u7684\u6700\u77ed\u8def\u5f84 (\u5355\u539f\u70b9\u7684\u6700\u77ed\u8def\u5f84)"]}),"\n",(0,i.jsx)(s.p,{children:"\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\u4e3b\u8981\u7279\u70b9\u662f\u4ece\u8d77\u59cb\u70b9\u5f00\u59cb\uff0c\u91c7\u7528\u8d2a\u5fc3\u7b97\u6cd5\u7684\u7b56\u7565\uff0c\u6bcf\u6b21\u904d\u5386\u5230\u59cb\u70b9\u8ddd\u79bb\u6700\u8fd1\u4e14\u672a\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\u7684\u90bb\u63a5\u8282\u70b9\uff0c\u76f4\u5230\u6269\u5c55\u5230\u7ec8\u70b9\u4e3a\u6b62\u3002"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"\u53ef\u4ee5\u770b\u6210:"}),"\n",(0,i.jsx)(s.p,{children:'\u5047\u8bbe\u4f60\u7528\u624b\u62ce\u8d77\u4e0b\u56fe\u7684 "0", \u7bad\u5934\u6307\u5411\u53ef\u4ee5\u770b\u505a\u662f\u7ebf, \u6743\u662f\u7ebf\u7684\u957f\u5ea6,'}),"\n",(0,i.jsx)(s.p,{children:'\u5982\u679c\u7f13\u6162\u7684\u62ce\u8d77"0", \u90a3\u4e48\u63a5\u4e0b\u6765\u6700\u5148\u79bb\u5f00\u5730\u9762\u7684,\u5c31\u662f\u6700\u77ed\u8def\u5f84(\u5176\u4ed6\u7ebf\u8fd8\u90fd\u662f\u677e\u5f1b\u7684\u72b6\u6001)\u7ee7\u7eed\u4e0a\u62ce, \u76f4\u5230\u6700\u597d\u4e00\u4e2a\u8282\u70b9\u79bb\u5f00\u684c\u9762, \u90a3\u4e48"0"\u5230\u8fd9\u4e2a\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84\u5c31\u662f \u4e4b\u524d\u7684\u4f9d\u6b21\u88ab\u62c9\u8d77\u6765\u7684\u987a\u5e8f'}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"\u4e3e\u4f8b",children:"\u4e3e\u4f8b"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Clip_2024-02-08_11-09-39.png",src:e(29325).A+"",width:"2014",height:"1054"})}),"\n",(0,i.jsxs)(s.p,{children:["\u540c",(0,i.jsx)(s.a,{href:"/HXLoLi/docs/%E8%AE%A1%E4%BD%AC%E5%B8%B8%E8%AD%98/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E3%80%90%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%91%E5%9B%BE/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/Prim%E7%AE%97%E6%B3%95/",children:"Prim\u7b97\u6cd5"}),"\u9700\u8981:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-C",children:"int *min_weight = (int *)malloc(sizeof(int) * G->add_index);    // \u8bb0\u5f55\u6743\u7684\u6700\u5c0f\u503c\nint *connect = (int *)malloc(sizeof(int) * G->add_index);       // \u4e0e\u8c01\u7684\u8fde\u63a5\n_Bool *visit = (_Bool *)malloc(sizeof(_Bool) * G->add_index);   // \u662f\u5426\u88ab\u8bbf\u95ee\n"})}),"\n",(0,i.jsxs)(s.p,{children:["\u4f46\u662f",(0,i.jsx)(s.code,{children:"min_weight"}),"\u88ab\u91cd\u65b0\u5b9a\u4e49\u6210: \u4e3e\u4f8b\u539f\u70b9\u7684\u6700\u5c0f\u6743\u503c, \u800c\u4e0d\u662f\u548c\u7236\u8282\u70b9\u8fde\u63a5\u7684\u6743\u503c\u4e86"]}),"\n",(0,i.jsxs)(s.p,{children:["\u6240\u4ee5\u66f4\u65b0\u7684\u65f6\u5019\u5c31\u6709: ",(0,i.jsx)(s.em,{children:"(\u8282\u9009\u6838\u5fc3\u903b\u8f91)"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\u5982\u679c\u5f53\u524d",(0,i.jsx)(s.code,{children:"G[i][j]"}),"\u6709\u8fde\u63a5 ",(0,i.jsx)(s.em,{children:"(i -> j \u7684\u6743\u4e3a G[i][j])"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\u5219\u5224\u65ad ",(0,i.jsx)(s.code,{children:"min_weight[j] > G[i][j] +  min_weight[i]"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\u82e5\u6210\u7acb, \u5219\u9700\u8981\u66f4\u65b0: ",(0,i.jsx)(s.code,{children:"min_weight[j] = G[i][j] +  min_weight[i]"}),", ",(0,i.jsx)(s.code,{children:"parent[j] = i"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-C",children:"int *min_weight = (int *)malloc(sizeof(int) * G->add_index);    // \u8bb0\u5f55\u6743\u7684\u6700\u5c0f\u503c(\u8ddd\u79bb\u539f\u70b9)\nint *parent = (int *)malloc(sizeof(int) * G->add_index);        // \u4e0e\u8c01\u7684\u8fde\u63a5(\u7236\u8282\u70b9)\n_Bool *visit = (_Bool *)malloc(sizeof(_Bool) * G->add_index);   // \u662f\u5426\u88ab\u8bbf\u95ee\n"})}),"\n",(0,i.jsx)(s.h2,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,i.jsx)(s.h3,{id:"\u7ade\u8d5b\u7248",children:"\u7ade\u8d5b\u7248"}),"\n",(0,i.jsx)(s.h4,{id:"\u6734\u7d20\u7248\u9002\u5408\u7a20\u5bc6\u56fe-on2-\u65f6\u95f4\u590d\u6742\u5ea6",children:"\u6734\u7d20\u7248(\u9002\u5408\u7a20\u5bc6\u56fe) O(N^2) \u65f6\u95f4\u590d\u6742\u5ea6"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-C++",children:'void djstr(void)\n{\n    const int INF = 2e9;\n    int n, m, s;\n    scanf("%d %d %d", &n, &m, &s);\n\n    vector<vector<int>> G(n, vector<int>(n, INF));\n    for (int i = 0, j, k, w; i < m; ++i) {\n        scanf("%d %d %d", &j, &k, &w);\n        G[j - 1][k - 1] = min(G[j - 1][k - 1], w);\n    }\n\n    vector<int> min_weight(n, INF);    // \u8ddd\u79bb\u539f\u70b9\u6700\u5c0f\u6743\u548c\n    vector<int> parent(n, -1);        // \u7236\u8282\u70b9\n    vector<bool> visit(n, 0);        // \u662f\u5426\u5df2\u9009\u62e9\n\n    min_weight[s - 1] = 0;\n\n    for (int i = s - 1, k; i != -1;) {\n        visit[i] = 1;\n        k = -1;\n\n        for (int j = 0; j < n; ++j) {\n            if (G[i][j] != INF && !visit[j]) {\n                if (min_weight[j] > G[i][j] + min_weight[i]) {\n                    min_weight[j] = G[i][j] + min_weight[i];\n                    parent[j] = i;\n                }\n\n                if (k == -1 || min_weight[j] < min_weight[k])\n                    k = j;\n            }\n        }\n\n        i = k;\n    }\n\n    for (auto& it : min_weight)\n        printf("%d ", it);\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["\u9898\u76ee: ",(0,i.jsx)(s.a,{href:"https://leetcode.cn/problems/network-delay-time/",children:"743. \u7f51\u7edc\u5ef6\u8fdf\u65f6\u95f4"})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-C++",children:"class Solution {\npublic:\n    int networkDelayTime(vector<vector<int>>& times, int n, int k) {\n        const int myINF = 1e7;\n        vector<vector<int>> G(n, vector<int>(n, myINF));\n        for (auto& t : times) {\n            G[t[0] - 1][t[1] - 1] = t[2];\n        }\n        // \u8fea\u52a0\u65af\u7279\u62c9\u7b97\u6cd5\n        vector<int> dis(n, myINF);\n        vector<int> runEd(n);\n        dis[k - 1] = 0;\n        for (int i = k - 1, next; ;) {\n            next = -1;\n            for (int j = 0; j < n; ++j) {\n                if (!runEd[j]) {\n                    if (/*G[i][j] != myINF && \u53ef\u6709\u53ef\u65e0*/dis[j] > dis[i] + G[i][j]) {\n                        dis[j] = dis[i] + G[i][j];\n                    }\n\n                    if (next == -1 || dis[next] > dis[j])\n                        next = j;\n                }\n            }\n\n            if (dis[i] == myINF)\n                return -1;\n\n            if (next == -1)\n                break;\n            \n            runEd[i] = 1;\n            i = next;\n        }\n\n        int res = 0;\n        for (int i = 0; i < n; ++i)\n            res = max(res, dis[i]);\n        return res;\n    }\n};\n"})}),"\n",(0,i.jsx)(s.h4,{id:"\u5806\u4f18\u5316-onlogn-\u9002\u5408\u7a00\u758f\u56fe",children:"\u5806\u4f18\u5316 O(NlogN) (\u9002\u5408\u7a00\u758f\u56fe)"}),"\n",(0,i.jsxs)(s.p,{children:["\u5b66\u4e60\u53c2\u8003: ",(0,i.jsx)(s.a,{href:"https://www.bilibili.com/video/BV1wj411G7sH/",children:"Dijkstra \u5355\u6e90\u6700\u77ed\u8def\u3010\u529b\u6263\u5468\u8d5b 334\u3011"})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-py",children:"'''\n1. Dijkstra\n\n1. \u8bbedis[x]\u8868\u793a\u4ece\u8d77\u70b9\u5230x\u7684\u6700\u77ed\u8def\n\u8bbey->x\n\u8003\u8651\u6240\u6709 y\uff0c\u5f53\u6211\u4eec\u66f4\u65b0 dis[x] \u7684\u65f6\u5019\uff0c\u5982\u679c dis[y] \u5df2\u7ecf\u7b97\u597d\u4e86\n\u90a3\u4e48dis[x]\u4e00\u5b9a\u53ef\u4ee5\u6b63\u786e\u5730\u7b97\u51fa\u6765\n\n2. \u600e\u4e48\u4fdd\u8bc1\u7b97\u51fa\u6765\u7684\u4e00\u5b9a\u662f\u6700\u77ed\u8def\uff1f\n\u6570\u5b66\u5f52\u7eb3\u6cd5(\u8bc1\u660e\u8d77\u70b9\u548c\u5176\u4ed6\u4efb\u610f\u65f6\u5019\u7684\u70b9, \u90fd\u6ee1\u8db3)\n\u4e00\u5f00\u59cb\u53ea\u6709\u4e00\u4e2a\u8d77\u70b9st\ndis[st] = 0 \u8fd9\u662f\u5df2\u7ecf\u7b97\u597d\u7684\n\u4ece st \u5f00\u59cb\uff0c\u628ast\u7684\u90bb\u5c45\u7684 dis[] \u90fd\u66f4\u65b0\u4e00\u4e0b\uff08\u6b64\u65f6\u90bb\u5c45\u4e0d\u4e00\u5b9a\u662f\u7b97\u597d\u7684\uff09\n\n\u4ece\u6ca1\u6709\u7b97\u597d\u7684dis\u91cc\u9762\uff0c\u53d6\u4e00\u4e2a\u6700\u5c0f\u7684\n> \u7ed3\u8bba\uff1a\u8fd9\u4e2a\u53d6\u51fa\u6765\u7684\u4e00\u5b9a\u662f\u7b97\u597d\u7684\n'''\n"})}),"\n",(0,i.jsx)(s.p,{children:"\u4e3a\u4ec0\u4e48\u51fa\u5806\u7684\u5df2\u7ecf\u662f\u6700\u77ed\u8def\u5f84? \u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u4f7f\u7528\u8d1f\u6743:"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsx)(s.tr,{children:(0,i.jsx)(s.th,{style:{textAlign:"center"},children:"##container##"})})}),(0,i.jsx)(s.tbody,{children:(0,i.jsx)(s.tr,{children:(0,i.jsx)(s.td,{style:{textAlign:"center"},children:(0,i.jsx)(s.img,{alt:"Clip_2024-03-09_14-01-08.png ##w700##",src:e(82534).A+"",width:"1132",height:"812"})})})})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mtext,{children:"\u5806\u4f18\u5316"}),(0,i.jsx)(s.mi,{children:"D"}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mi,{children:"j"}),(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsx)(s.mi,{children:"r"}),(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mtext,{children:"\uff08\u9002\u7528\u4e8e\u7a00\u758f\u56fe"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"\u5806\u4f18\u5316 Dijkstra\uff08\u9002\u7528\u4e8e\u7a00\u758f\u56fe)"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord cjk_fallback",children:"\u5806\u4f18\u5316"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"D"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"ijk"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mord cjk_fallback",children:"\uff08\u9002\u7528\u4e8e\u7a00\u758f\u56fe"}),(0,i.jsx)(s.span,{className:"mclose",children:")"})]})})]})}),"\n",(0,i.jsx)(s.p,{children:"\u5bfb\u627e\u6700\u5c0f\u503c\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7528\u4e00\u4e2a\u6700\u5c0f\u5806\u6765\u5feb\u901f\u5b8c\u6210:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\u4e00\u5f00\u59cb\u628a ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"["}),(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"(dis[k], k)"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mopen",children:"["}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"mclose",children:"]"}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"mclose",children:")"})]})})]})," \u4e8c\u5143\u7ec4\u5165\u5806\u3002"]}),"\n",(0,i.jsxs)(s.li,{children:["\u5f53\u8282\u70b9 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"x"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"})]})})]})," \u9996\u6b21\u51fa\u5806\u65f6, ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"["}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"dis[x]"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mopen",children:"["}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mclose",children:"]"})]})})]})," \u5c31\u662f\u5199\u6cd5\u4e00\u4e2d\u5bfb\u627e\u7684\u6700\u5c0f\u6700\u77ed\u8def\u3002"]}),"\n",(0,i.jsxs)(s.li,{children:["\u66f4\u65b0 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"["}),(0,i.jsx)(s.mi,{children:"y"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"dis[y]"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mopen",children:"["}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,i.jsx)(s.span,{className:"mclose",children:"]"})]})})]})," \u65f6\uff0c\u628a ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"["}),(0,i.jsx)(s.mi,{children:"y"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"y"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"(dis[y], y)"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mopen",children:"["}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,i.jsx)(s.span,{className:"mclose",children:"]"}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,i.jsx)(s.span,{className:"mclose",children:")"})]})})]})," \u4e8c\u5143\u7ec4\u5165\u5806\u3002 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsxs)(s.mstyle,{mathcolor:"#70865E",children:[(0,i.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(s.mtext,{children:"\xa0\u5806\u7684\u683c\u5f0f\u662f"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"{"}),(0,i.jsx)(s.mtext,{children:"\u4ece\u6307\u5b9a\u8d77\u70b9\xa0"}),(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mtext,{children:"\xa0\u5230\u5f53\u524d\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mtext,{children:"\xa0\u7ed3\u70b9\u7d22\u5f15\u53f7"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"}"})]})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:" \\color{#70865E} //\\ \u5806\u7684\u683c\u5f0f\u662f \\{\u4ece\u6307\u5b9a\u8d77\u70b9\\ k \\ \u5230\u5f53\u524d\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84,\\ \u7ed3\u70b9\u7d22\u5f15\u53f7\\}"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord",style:{color:"#70865E"},children:"//"}),(0,i.jsx)(s.span,{className:"mspace",style:{color:"#70865E"},children:(0,i.jsx)(s.span,{style:{color:"#70865E"},children:"\xa0"})}),(0,i.jsx)(s.span,{className:"mord cjk_fallback",style:{color:"#70865E"},children:"\u5806\u7684\u683c\u5f0f\u662f"}),(0,i.jsx)(s.span,{className:"mopen",style:{color:"#70865E"},children:"{"}),(0,i.jsx)(s.span,{className:"mord cjk_fallback",style:{color:"#70865E"},children:"\u4ece\u6307\u5b9a\u8d77\u70b9"}),(0,i.jsx)(s.span,{className:"mspace",style:{color:"#70865E"},children:(0,i.jsx)(s.span,{style:{color:"#70865E"},children:"\xa0"})}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em",color:"#70865E"},children:"k"}),(0,i.jsx)(s.span,{className:"mspace",style:{color:"#70865E"},children:(0,i.jsx)(s.span,{style:{color:"#70865E"},children:"\xa0"})}),(0,i.jsx)(s.span,{className:"mord cjk_fallback",style:{color:"#70865E"},children:"\u5230\u5f53\u524d\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84"}),(0,i.jsx)(s.span,{className:"mpunct",style:{color:"#70865E"},children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{color:"#70865E"},children:(0,i.jsx)(s.span,{style:{color:"#70865E"},children:"\xa0"})}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord cjk_fallback",style:{color:"#70865E"},children:"\u7ed3\u70b9\u7d22\u5f15\u53f7"}),(0,i.jsx)(s.span,{className:"mclose",style:{color:"#70865E"},children:"}"})]})})]})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["\u6ce8\u610f\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"x"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"})]})})]})," \u5728\u51fa\u5806\u524d\uff0c\u5176\u6700\u77ed\u8def\u957f\u5ea6 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"["}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"dis[x]"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mopen",children:"["}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mclose",children:"]"})]})})]})," \u88ab\u591a\u6b21\u66f4\u65b0\uff0c\u90a3\u4e48\u5806\u4e2d\u4f1a\u6709\u591a\u4e2a\u91cd\u590d\u7684 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"x"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"})]})})]})," \uff0c\u5e76\u4e14\u5305\u542b ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"x"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"})]})})]})," \u7684\u4e8c\u5143\u7ec4\u4e2d\u7684 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"["}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"dis[x]"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mopen",children:"["}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mclose",children:"]"})]})})]})," \u662f\u4e92\u4e0d\u76f8\u540c\u7684\uff08\u56e0\u4e3a\u6211\u4eec\u53ea\u5728\u627e\u5230\u66f4\u5c0f\u7684\u6700\u77ed\u8def\u65f6\u624d\u4f1a\u628a\u4e8c\u5143\u7ec4\u5165\u5806)\u3002"]}),"\n",(0,i.jsxs)(s.p,{children:["\u6240\u4ee5\u5199\u6cd5\u4e00\u4e2d\u7684 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mi,{children:"e"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"done"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"o"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"e"})]})})]})," \u6570\u7ec4\u53ef\u4ee5\u7701\u53bb\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u7528\u51fa\u5806\u7684\u6700\u77ed\u8def\u503c\uff08\u8bb0\u4f5c ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"x"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"dx"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"})]})})]})," \uff09\u4e0e\u5f53\u524d\u7684 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"["}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"dis[x]"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mopen",children:"["}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mclose",children:"]"})]})})]})," \u6bd4\u8f83\uff0c\u5982\u679c ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mo,{children:">"}),(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"["}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"dx > dis[x]"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.7335em",verticalAlign:"-0.0391em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:">"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mopen",children:"["}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mclose",children:"]"})]})]})]})," \u8bf4\u660e ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"x"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"})]})})]})," \u4e4b\u524d\u51fa\u5806\u8fc7\uff0c\u6211\u4eec\u5df2\u7ecf\u66f4\u65b0\u4e86 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"x"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"})]})})]})," \u7684\u90bb\u5c45\u7684\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u8fd9\u6b21\u5c31\u4e0d\u7528\u66f4\u65b0\u4e86\uff0c\u7ee7\u7eed\u5916\u5c42\u5faa\u73af\u3002"]}),"\n",(0,i.jsxs)(s.p,{children:["\u4ee5\u4e0b\u662f",(0,i.jsx)(s.code,{children:"0x3f"}),"\u5927\u4f6c\u7684\u4ee3\u7801: \u5bf9\u4e8e ",(0,i.jsx)(s.a,{href:"https://leetcode.cn/problems/network-delay-time/",children:"743. \u7f51\u7edc\u5ef6\u8fdf\u65f6\u95f4"})," \u5176\u4e2d\u4f7f\u7528\u4e86STL\u7684",(0,i.jsx)(s.code,{children:"\u4f18\u5148\u961f\u5217"}),"\u548c",(0,i.jsx)(s.code,{children:"C++17"}),"\u7684",(0,i.jsx)(s.a,{href:"/HXLoLi/docs/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/C++/tmp%E4%B8%B6C++%E4%B8%B6memo/C++%E6%96%B0%E7%89%B9%E6%80%A7/C++17%E5%B8%B8%E7%94%A8%E6%96%B0%E7%89%B9%E6%80%A7/%E7%BB%93%E6%9E%84%E5%8C%96%E7%BB%91%E5%AE%9A/",children:"\u7ed3\u6784\u5316\u7ed1\u5b9a"})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-C++",children:"class Solution {\npublic:\n    int networkDelayTime(vector<vector<int>> &times, int n, int k) {\n        vector<vector<pair<int, int>>> g(n); // \u90bb\u63a5\u8868\n        for (auto &t : times) {\n            g[t[0] - 1].emplace_back(t[1] - 1, t[2]);\n        } // \u5b58\u50a8\u610f\u601d\u662f \u4ece u \u4e3a\u8d77\u59cb\u70b9 <u -> g[u][0]> \u6743\u4e3a g[u][1]\n\n        vector<int> dis(n, INT_MAX);\n        dis[k - 1] = 0;\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<>> pq;\n        pq.emplace(0, k - 1);\n        while (!pq.empty()) {\n            auto [dx, x] = pq.top();\n            pq.pop();\n            if (dx > dis[x]) { // x \u4e4b\u524d\u51fa\u5806\u8fc7\n                continue;\n            }\n            for (auto &[y, d] : g[x]) {\n                int new_dis = dx + d;\n                if (new_dis < dis[y]) {\n                    dis[y] = new_dis; // \u66f4\u65b0 x \u7684\u90bb\u5c45\u7684\u6700\u77ed\u8def\n                    pq.push({new_dis, y});\n                }\n            }\n        }\n        int mx = ranges::max(dis);\n        return mx < INT_MAX ? mx : -1;\n    }\n};\n\n// \u4f5c\u8005\uff1a\u7075\u8336\u5c71\u827e\u5e9c\n// \u94fe\u63a5\uff1ahttps://leetcode.cn/problems/network-delay-time/solutions/2668220/liang-chong-dijkstra-xie-fa-fu-ti-dan-py-ooe8/\n// \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n// \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\n"})}),"\n",(0,i.jsx)(s.h3,{id:"\u5b66\u4e60\u7248",children:"\u5b66\u4e60\u7248"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-C",children:'#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct\n{\n    char **show;\n    int **weight;\n    int *tagArray;  // \u7528\u4e8e\u904d\u5386\u65f6\u5019\u7684\u6807\u8bb0\n    int add_index;\n    int number;\n} AdjacencyMatrix;\n\nAdjacencyMatrix *initAdjacencyMatrix(int n);                // \u521d\u59cb\u5316AdjacencyMatrix\nvoid addAdjacencyMatrix(AdjacencyMatrix *A, char *show);    // \u6dfb\u52a0\u5143\u7d20\nvoid connectAdjacencyMatrix(AdjacencyMatrix *A, char *show_1, char *show_2, int weight);    // \u8fde\u63a5\u5143\u7d20\nvoid initTagArray(AdjacencyMatrix *A);                      // \u91cd\u7f6e\u904d\u5386\u7684\u6807\u8bb0\u6570\u7ec4 (-1)\nvoid DFS(AdjacencyMatrix *A, int index);                    // \u6df1\u5ea6\u4f18\u5148\u904d\u5386\nvoid BFS(AdjacencyMatrix *A);                               // \u5e7f\u5ea6\u4f18\u5148\u904d\u5386\nvoid freeAdjacencyMatrix(AdjacencyMatrix *A);               // \u514d\u8d39\n\nAdjacencyMatrix *initAdjacencyMatrix(int n)\n{\n    AdjacencyMatrix *A = (AdjacencyMatrix *)malloc(sizeof(AdjacencyMatrix));\n    if (!A)\n    {\n        MALLOC_ERROR:\n        printf("Malloc ERROR!\\n");\n        return NULL;\n    }\n\n    A->show = (char **)malloc(sizeof(char *) * n);\n    if (!A->show)\n        goto MALLOC_ERROR;\n    \n    A->weight = (int **)malloc(sizeof(int *) * n);\n    if (!A->weight)\n        goto MALLOC_ERROR;\n\n    for (int i = 0; i < n; ++i)\n    {\n        A->weight[i] = (int *)malloc(sizeof(int) * n);\n        if (!A->weight[i])\n            goto MALLOC_ERROR;\n        for (int j = 0; j < n; ++j)\n            A->weight[i][j] = 0;        // \u8fd9\u4e2a\u662f\u6807\u8bb0\u6570_\u53ef\u6539, \u8bb00\u4e3a\u672a\u8fde\u63a5\n    }\n    \n    A->add_index = 0;\n    A->number = n;\n    A->tagArray = (int *)malloc(sizeof(int) * n);\n    if (!A->tagArray)\n        goto MALLOC_ERROR;\n    initTagArray(A);\n    return A;\n}\n\nvoid addAdjacencyMatrix(AdjacencyMatrix *A, char *show)\n{\n    if (A->add_index == A->number)\n        return; // ERROR\n    A->show[A->add_index++] = show;\n}\n\nvoid initTagArray(AdjacencyMatrix *A)\n{\n    for (int i = 0; i < A->number; ++i)\n        A->tagArray[i] = -1;\n}\n\nvoid connectAdjacencyMatrix(AdjacencyMatrix *A, char *show_1, char *show_2, int weight)\n{\n    int s_1 = -1;\n    for (int i = 0; i < A->number; ++i)\n    {\n        if (A->show[i] == show_1)\n            s_1 = i;\n    }\n\n    if (s_1 == -1)\n        return; // \u627e\u4e0d\u5230\n    \n    int s_2 = -1;\n    for (int i = 0; i < A->number; ++i)\n    {\n        if (A->show[i] == show_2)\n            s_2 = i;\n    }\n\n    if (s_2 == -1)\n        return; // \u627e\u4e0d\u5230\n    \n    A->weight[s_1][s_2] = weight;\n    //A->weight[s_2][s_1] = weight;\n}\n\n// \u6ce8\u610f\u904d\u5386\u7684\u662f\u8fde\u901a\u56fe\nvoid DFS(AdjacencyMatrix *A, int index)\n{\n    printf("%s ", A->show[index]);\n    A->tagArray[index] = 1;\n    for (int i = 0; i < A->add_index; ++i)\n    {\n        if (A->weight[index][i] != 0 && A->tagArray[i] == -1)\n        {\n            DFS(A, i);\n        }\n    }\n}\n\n// \u4f9d\u65e7\u662f\u8fde\u901a\u56fe\n// \u590d\u6742\u8fc7\u5934\u4e86\u5427...\nvoid BFS(AdjacencyMatrix *A)\n{\n    // \u4e34\u65f6\u961f\u5217\n    int queue[A->add_index];\n    int q_h = 0;\n    int q_t = 0;\n    printf("%s ", A->show[0]);\n    A->tagArray[0] = 1;\n    for (int i = 0; i < A->add_index; ++i)\n    {\n        for (int j = 0; j < A->add_index; ++j)\n        {\n            if (A->weight[i][j] != 0 && A->tagArray[j] == -1)\n            {\n                A->tagArray[j] = 1;\n                queue[q_t++] = j;\n                q_t = q_t % A->add_index;\n            }\n        }\n\n        if (q_h != q_t)\n            break;\n    }\n    \n    while (q_h != q_t)\n    {\n        printf("%s ", A->show[queue[q_h]]);\n        for (int i = 0; i < A->add_index; ++i)\n        {\n            if (A->weight[queue[q_h]][i] != 0 && A->tagArray[i] == -1)\n            {\n                A->tagArray[q_t == 0 ? A->add_index - 1 : q_t - 1] = 1;\n                queue[q_t++] = i;\n                q_t = q_t % A->add_index;\n            }\n        }\n        ++q_h;\n        q_h = q_h % A->add_index;\n    }\n}\n\nvoid freeAdjacencyMatrix(AdjacencyMatrix *A)\n{\n    free(A->show);\n    for (int i = 0; i < A->number; ++i)\n    {\n        free(A->weight[i]);\n    }\n    free(A->weight);\n    free(A->tagArray);\n    free(A);\n}\n\ntypedef struct Dijkstra\n{\n    int *distance;          // \u4ece\u539f\u70b9\u5230\u8be5\u70b9\u7684\u6743\n    int *parentNodeIndex;   // \u8be5\u70b9\u7684\u7236\u7ed3\u70b9\n    int num;                // \u5143\u7d20\u4e2a\u6570 / \u957f\u5ea6\n} Dijkstra;\n\n// Dijkstra \u8fd4\u56de\u4e00\u4e2aDijkstra\u7ed3\u6784\u4f53\nDijkstra *doDijkstra(AdjacencyMatrix *G, int s_index);\nvoid putDijkstra(AdjacencyMatrix *G, Dijkstra* D);\nvoid freeDijkstra(Dijkstra *);  // \u514d\u8d39\n\nvoid putDijkstra(AdjacencyMatrix *G, Dijkstra* D)\n{\n    int kara = -1;\n    for (int i = 0; i < D->num; ++i)\n    {\n        if (D->parentNodeIndex[i] == -1)\n        {\n            kara = i;\n            break;\n        }\n    }\n\n    for (int i = 0; i < D->num; ++i)\n    {\n        if (i != kara)\n            printf("%s --%2d--\x3e %s (\u7236\u8282\u70b9: %s)\\n", G->show[kara], D->distance[i], G->show[i], G->show[D->parentNodeIndex[i]]);\n    }\n}\n\nDijkstra *doDijkstra(AdjacencyMatrix *G, int s_index)\n{\n    Dijkstra *D = (Dijkstra *)malloc(sizeof(Dijkstra));\n    if (!D)\n    {\n        MALLOC_ERROR:\n        printf("malloc error!\\n");\n        return NULL;\n    }\n\n    D->distance = (int *)malloc(sizeof(int) * G->add_index);\n    if (!D->distance)\n        goto MALLOC_ERROR;\n    \n    D->parentNodeIndex = (int *)malloc(sizeof(int) * G->add_index);\n    if (!D->parentNodeIndex)\n        goto MALLOC_ERROR;\n    \n    // \u5df2\u8bbf\u95ee\u6570\u7ec4\n    _Bool *tag_visited = (_Bool *)malloc(sizeof(_Bool) * G->add_index);\n    if (!tag_visited)\n        goto MALLOC_ERROR;\n\n    D->num = G->add_index;\n\n    // init\n    for (int i = 0; i < D->num; ++i)\n    {\n        D->distance[i] = INT_MAX;\n        D->parentNodeIndex[i] = -1;\n        tag_visited[i] = 0;\n    }\n\n    int index = s_index;    // \u6307\u5b9a\u4e00\u4e2a\u539f\u7ed3\u70b9, \u8868\u793a\u9700\u8981\u8ba1\u7b97\u6240\u6709\u7ed3\u70b9\u5230\u5b83\u7684\u6700\u77ed\u8def\u5f84\n    D->distance[s_index] = 0;\n    // Dijkstra \u542f\u52a8!\n    while (1)\n    {\n        tag_visited[index] = 1;\n        int min_node_i = -1;\n        //printf("\\n%d:\\n", index);\n        for (int i = 0; i < D->num; ++i)\n        {\n            if (tag_visited[i])\n                continue;\n\n            if (G->weight[index][i] != 0) // \u8fde\u63a5\n            {\n                if (D->distance[i] > D->distance[index] + G->weight[index][i])\n                {\n                    //printf("%d > %d + %d | [%s]: %s --\x3e %s\\n", D->distance[i], D->distance[index] , G->weight[index][i], G->show[i], D->parentNodeIndex[i] != -1 ? G->show[D->parentNodeIndex[i]] : "\u65e0\u7236\u7ed3\u70b9", G->show[index]);\n                    D->distance[i] = D->distance[index] + G->weight[index][i];\n                    D->parentNodeIndex[i] = index;\n                }\n\n                if (min_node_i == -1 || D->distance[min_node_i] > D->distance[i])\n                        min_node_i = i;\n            }\n            else if ((min_node_i == -1 && D->distance[i] != INT_MAX) || D->distance[min_node_i] > D->distance[i])\n                min_node_i = i;\n        }\n\n        if (min_node_i == -1)\n            break;\n\n        index = min_node_i;\n    }\n\n    free(tag_visited);\n    return D;\n}\n\nint main(void)\n{\n    //  - \u6700\u77ed\u8def\u5f84- Dijkstra\u7b97\u6cd5\n    // \u8fd0\u7528\u4e8e \u6709\u5411\u56fe\n    AdjacencyMatrix *A = initAdjacencyMatrix(7);\n    addAdjacencyMatrix(A, "v0");\n    addAdjacencyMatrix(A, "v1");\n    addAdjacencyMatrix(A, "v2");\n    addAdjacencyMatrix(A, "v3");\n    addAdjacencyMatrix(A, "v4");\n    addAdjacencyMatrix(A, "v5");\n    addAdjacencyMatrix(A, "v6");\n\n    connectAdjacencyMatrix(A, "v0", "v1", 4);\n    connectAdjacencyMatrix(A, "v0", "v2", 6);\n    connectAdjacencyMatrix(A, "v0", "v3", 6);\n\n    connectAdjacencyMatrix(A, "v1", "v4", 7);\n    connectAdjacencyMatrix(A, "v1", "v2", 1);\n\n    connectAdjacencyMatrix(A, "v2", "v4", 6);\n    connectAdjacencyMatrix(A, "v2", "v5", 4);\n\n    connectAdjacencyMatrix(A, "v3", "v2", 2);\n    connectAdjacencyMatrix(A, "v3", "v5", 5);\n\n    connectAdjacencyMatrix(A, "v4", "v6", 6);\n\n    connectAdjacencyMatrix(A, "v5", "v4", 1);\n    connectAdjacencyMatrix(A, "v5", "v6", 8);\n\n    Dijkstra* D = doDijkstra(A, 0);\n    putDijkstra(A, D);\n    getchar();\n    return 0;\n}\n'})})]})}function m(n={}){const{wrapper:s}={...(0,t.R)(),...n.components};return s?(0,i.jsx)(s,{...n,children:(0,i.jsx)(h,{...n})}):h(n)}}}]);