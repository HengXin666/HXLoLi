"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[14129],{28453:(n,e,r)=>{r.d(e,{R:()=>o,x:()=>l});var d=r(96540);const i={},t=d.createContext(i);function o(n){const e=d.useContext(t);return d.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),d.createElement(t.Provider,{value:e},n.children)}},39310:(n,e,r)=>{r.d(e,{A:()=>d});const d=r.p+"assets/images/Clip_2024-01-26_11-05-53-c337638e2bbdbbf3bf1330188ce68d43.png"},46938:(n,e,r)=>{r.d(e,{A:()=>d});const d=r.p+"assets/images/Clip_2024-01-26_11-21-51-7efd779e0b16207d43f47cc5fb7c41d5.png"},74233:(n,e,r)=>{r.d(e,{A:()=>d});const d=r.p+"assets/images/Clip_2024-01-26_11-23-29-db4cba332096c3693e10b68eacfd56e5.png"},75006:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/\u7ebf\u7d22\u4e8c\u53c9\u6811/index","title":"\u7ebf\u7d22\u4e8c\u53c9\u6811","description":"\u80cc\u666f\u4ecb\u7ecd","source":"@site/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/004-\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/004-\u7ebf\u7d22\u4e8c\u53c9\u6811/index.md","sourceDirName":"001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/004-\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/004-\u7ebf\u7d22\u4e8c\u53c9\u6811","slug":"/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/\u7ebf\u7d22\u4e8c\u53c9\u6811/","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/\u7ebf\u7d22\u4e8c\u53c9\u6811/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/004-\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/004-\u7ebf\u7d22\u4e8c\u53c9\u6811/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u4e8c\u53c9\u6811\u7684\u524d\u4e2d\u540e\u5c42\u904d\u5386code","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/\u4e8c\u53c9\u6811\u7684\u524d\u4e2d\u540e\u5c42\u904d\u5386code/"},"next":{"title":"\u4e8c\u53c9\u641c\u7d22\u6811","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/\u4e8c\u53c9\u641c\u7d22\u6811/"}}');var i=r(74848),t=r(28453);const o={},l="\u7ebf\u7d22\u4e8c\u53c9\u6811",s={},c=[{value:"\u80cc\u666f\u4ecb\u7ecd",id:"\u80cc\u666f\u4ecb\u7ecd",level:2},{value:"\u7ebf\u7d22\u5316",id:"\u7ebf\u7d22\u5316",level:2},{value:"\u7ebf\u7d22\u5316\u7684\u6539\u8fdb",id:"\u7ebf\u7d22\u5316\u7684\u6539\u8fdb",level:2},{value:"\u7ebf\u7d22\u5316\u7684\u4f18\u52bf",id:"\u7ebf\u7d22\u5316\u7684\u4f18\u52bf",level:2},{value:"\u4ee3\u7801\u5b9e\u73b0",id:"\u4ee3\u7801\u5b9e\u73b0",level:2}];function a(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"\u7ebf\u7d22\u4e8c\u53c9\u6811",children:"\u7ebf\u7d22\u4e8c\u53c9\u6811"})}),"\n",(0,i.jsx)(e.h2,{id:"\u80cc\u666f\u4ecb\u7ecd",children:"\u80cc\u666f\u4ecb\u7ecd"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u73b0\u6709\u4e00\u68f5\u7ed3\u70b9\u6570\u76ee\u4e3a",(0,i.jsx)(e.code,{children:"n"}),"\u7684\u4e8c\u53c9\u6811\uff0c\u91c7\u7528\u4e8c\u53c9\u94fe\u8868\u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\u5747\u6709\u6307\u5411\u5de6\u53f3\u5b69\u5b50\u7684\u4e24\u4e2a\u6307\u9488\u57df\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u7ed3\u70b9\u4e3a",(0,i.jsx)(e.code,{children:"n"}),"\u7684\u4e8c\u53c9\u6811\u4e00\u5171\u6709",(0,i.jsx)(e.code,{children:"n-1"}),"\u6761\u6709\u6548\u5206\u652f\u8def\u5f84\u3002\u90a3\u4e48\uff0c\u5219\u4e8c\u53c9\u94fe\u8868\u4e2d\u5b58\u5728",(0,i.jsx)(e.code,{children:"2n -\uff08n-1\uff09= n+1"}),"\u4e2a\u7a7a\u6307\u9488\u57df. \u90a3\u4e48\uff0c\u8fd9\u4e9b\u7a7a\u6307\u9488\u9020\u6210\u4e86\u7a7a\u95f4\u6d6a\u8d39\u3002"]}),"\n"]}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"##container##"})})}),(0,i.jsx)(e.tbody,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.td,{style:{textAlign:"center"},children:(0,i.jsx)(e.img,{alt:"Clip_2024-01-26_11-05-53.png ##w600##",src:r(39310).A+"",width:"1305",height:"395"})})})})]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u5f53\u5bf9\u4e8c\u53c9\u6811\u8fdb\u884c\u4e2d\u5e8f\u904d\u5386\u65f6\u53ef\u4ee5\u5f97\u5230\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u5e8f\u5217\u3002"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u5982\u56fe\u6240\u793a\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u4e3aDBEAC\uff0c\u53ef\u4ee5\u5f97\u77e5A\u7684\u524d\u9a71\u7ed3\u70b9\u4e3aE\uff0c\u540e\u7ee7\u7ed3\u70b9\u4e3aC\u3002"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"\u8fd9\u79cd\u5173\u7cfb\u7684\u83b7\u5f97\u662f\u5efa\u7acb\u5728\u5b8c\u6210\u904d\u5386\u540e\u5f97\u5230\u7684\uff0c\u90a3\u4e48\u53ef\u4e0d\u53ef\u4ee5\u5728\u5efa\u7acb\u4e8c\u53c9\u6811\u65f6\u5c31\u8bb0\u5f55\u4e0b\u524d\u9a71\u540e\u7ee7\u7684\u5173\u7cfb\u5462\uff0c\u90a3\u4e48\u5728\u540e\u7eed\u5bfb\u627e\u524d\u9a71\u7ed3\u70b9\u548c\u540e\u7ee7\u7ed3\u70b9\u65f6\u5c06\u5927\u5927\u63d0\u5347\u6548\u7387\u3002"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u7ebf\u7d22\u5316",children:"\u7ebf\u7d22\u5316"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\u5c06\u67d0\u7ed3\u70b9\u7684\u7a7a\u6307\u9488\u57df\u6307\u5411\u8be5\u7ed3\u70b9\u7684\u524d\u9a71\u540e\u7ee7\uff0c\u5b9a\u4e49\u89c4\u5219\u5982\u4e0b:\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u82e5\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u5219\u8be5\u7ed3\u70b9\u7684\u5de6\u5b69\u5b50\u6307\u9488\u6307\u5411\u5176\u524d\u9a71\u7ed3\u70b9\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u82e5\u7ed3\u70b9\u7684\u53f3\u5b50\u6811\u4e3a\u7a7a\uff0c\u5219\u8be5\u7ed3\u70b9\u7684\u53f3\u5b69\u5b50\u6307\u9488\u6307\u5411\u5176\u540e\u7ee7\u7ed3\u70b9\u3002"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"\u8fd9\u79cd\u6307\u5411\u524d\u9a71\u548c\u540e\u7ee7\u7684\u6307\u9488\u79f0\u4e3a\u7ebf\u7d22\u3002\u5c06\u4e00\u68f5\u666e\u901a\u4e8c\u53c9\u6811\u4ee5\u67d0\u79cd\u6b21\u5e8f\u904d\u5386\uff0c\u5e76\u6dfb\u52a0\u7ebf\u7d22\u7684\u8fc7\u7a0b\u79f0\u4e3a\u7ebf\u7d22\u5316\u3002"}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"##container##"})})}),(0,i.jsx)(e.tbody,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.td,{style:{textAlign:"center"},children:(0,i.jsx)(e.img,{alt:"Clip_2024-01-26_11-21-51.png ##w600##",src:r(46938).A+"",width:"1314",height:"503"})})})})]}),"\n",(0,i.jsx)(e.h2,{id:"\u7ebf\u7d22\u5316\u7684\u6539\u8fdb",children:"\u7ebf\u7d22\u5316\u7684\u6539\u8fdb"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\u53ef\u4ee5\u5c06\u4e00\u68f5\u4e8c\u53c9\u6811\u7ebf\u7d22\u5316\u4e3a\u4e00\u68f5\u7ebf\u7d22\u4e8c\u53c9\u6811\uff0c\u90a3\u4e48\u65b0\u7684\u95ee\u9898\u4ea7\u751f\u4e86\u3002\u6211\u4eec\u5982\u4f55\u533a\u5206\u4e00\u4e2a\u7ed3\u70b9\u7684",(0,i.jsx)(e.code,{children:"lchild"}),"\u6307\u9488\u662f\u6307\u5411\u5de6\u5b69\u5b50\u8fd8\u662f\u524d\u9a71\u7ed3\u70b9\u5462?"]}),"\n",(0,i.jsxs)(e.li,{children:["\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u73b0\u9700\u8981\u6dfb\u52a0\u6807\u5fd7\u4f4dltag\uff0crtag\u3002\u5e76\u5b9a\u4e49\u89c4\u5219\u5982\u4e0b:\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"ltag"}),"\u4e3a0\u65f6\uff0c\u6307\u5411\u5de6\u5b69\u5b50\uff0c\u4e3a1\u65f6\u6307\u5411\u524d\u9a71"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"rtag"}),"\u4e3a0\u65f6\uff0c\u6307\u5411\u53f3\u5b69\u5b50\uff0c\u4e3a1\u65f6\u6307\u5411\u540e\u7ee7"]}),"\n"]}),"\n"]}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"##container##"})})}),(0,i.jsx)(e.tbody,{children:(0,i.jsx)(e.tr,{children:(0,i.jsx)(e.td,{style:{textAlign:"center"},children:(0,i.jsx)(e.img,{alt:"Clip_2024-01-26_11-23-29.png ##w500##",src:r(74233).A+"",width:"1158",height:"142"})})})})]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5f53\u524d\u7ed3\u70b9\u6ca1\u6709\u5de6\u5b69\u5b50\uff0c\u9700\u8981\u5c06\u8be5\u7ed3\u70b9\u7684",(0,i.jsx)(e.code,{children:"lchild"}),"\u6307\u9488\u6307\u5411\u904d\u5386\u8fc7\u7a0b\u4e2d\u7684\u524d\u4e00\u4e2a\u7ed3\u70b9\uff0c\u6240\u4ee5\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u6307\u9488\uff08\u540d\u4e3a",(0,i.jsx)(e.code,{children:"pre"}),"\uff09\uff0c\u65f6\u523b\u6307\u5411\u5f53\u524d\u8bbf\u95ee\u7ed3\u70b9\u7684\u524d\u4e00\u4e2a\u7ed3\u70b9\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u7ebf\u7d22\u5316\u7684\u4f18\u52bf",children:"\u7ebf\u7d22\u5316\u7684\u4f18\u52bf"}),"\n",(0,i.jsx)(e.p,{children:"\u9012\u5f52\u904d\u5386\u9700\u8981\u4f7f\u7528\u7cfb\u7edf\u6808\uff0c\u975e\u9012\u5f52\u904d\u5386\u9700\u8981\u4f7f\u7528\u5185\u5b58\u4e2d\u7684\u7a7a\u95f4\u6765\u5e2e\u52a9\u904d\u5386\uff0c\u800c\u7ebf\u7d22\u5316\u4e4b\u540e\u5c31\u4e0d\u9700\u8981\u8fd9\u4e9b\u8f85\u52a9\u4e86\uff0c\u76f4\u63a5\u53ef\u4ee5\u50cf\u904d\u5386\u6570\u7ec4\u4e00\u6837\u904d\u5386\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u7ebf\u7d22\u4e8c\u53c9\u6811\u6838\u5fc3\u76ee\u7684\u5728\u4e8e\u52a0\u5feb\u67e5\u627e\u7ed3\u70b9\u7684\u524d\u9a71\u548c\u540e\u7ee7\u7684\u901f\u5ea6\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u7ebf\u7d22\u7684\u8bdd\uff0c\u5f53\u67e5\u627e\u4e00\u4e2a\u7ed3\u70b9\u7684\u524d\u9a71\u4e0e\u540e\u7ee7\u9700\u8981\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u5f53\u7136\uff0c\u5982\u679c\u4e8c\u53c9\u6811\u6570\u636e\u91cf\u8f83\u5c0f\u65f6\uff0c\u53ef\u80fd\u7ebf\u7d22\u5316\u4e4b\u540e\u4f5c\u7528\u4e0d\u5927\uff0c\u4f46\u662f\u5f53\u6570\u636e\u91cf\u5f88\u5927\u65f6\uff0c\u7ebf\u7d22\u5316\u6240\u5e26\u6765\u7684\u6027\u80fd\u63d0\u5347\u5c31\u4f1a\u6bd4\u8f83\u660e\u663e\u3002"}),"\n",(0,i.jsx)(e.h2,{id:"\u4ee3\u7801\u5b9e\u73b0",children:"\u4ee3\u7801\u5b9e\u73b0"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-C",children:'#include <stdio.h>\n#include <stdlib.h>\n\ntypedef char Element;\n\ntypedef struct _B_tree_node\n{\n    Element data;\n    /* \u7ebf\u7d22\u5316\u7279\u6709\u7684, \u4e3a 0 \u5219\u662f\u666e\u901a\u7684\u6570, \u4e3a 1 \u5219\u662f\u7ebf\u7d22\u5316\u7684\u4e86*/\n    _Bool Ltag;\n    _Bool Rtag;\n    struct _B_tree_node *left;  // \u5de6\u5b50\u6811\n    struct _B_tree_node *right; // \u53f3\u5b50\u6811\n} BTreeNode;\n\ntypedef struct\n{\n    BTreeNode *root;            // \u6811\u6839\n    int nodeNum;                // \u7ed3\u70b9\u6570\n    int tag;                    // <\u72b6\u6001>\u7ebf\u7d22\u5316\u7279\u6709\u7684\n    /*\n     * \u5b9a\u4e49:\n     * 0 \u4e3a\u672a\u7ebf\u7d22\u5316\n     * 1 \u4e3a\u524d\u5e8f\u7ebf\u7d22\u5316\n     * 2 \u4e3a\u4e2d\u5e8f\u7ebf\u7d22\u5316\n     * 3 \u4e3a\u540e\u5e8f\u7ebf\u7d22\u5316\n     * 4 \u4e3a\u5c42\u5e8f\u7ebf\u7d22\u5316\n     * */\n} BTree;\n\nBTree *binaryTreeInitialization(BTreeNode *root);   // \u521d\u59cb\u5316\u6811\u5934\nBTreeNode *addBinaryTreeNode(Element e);            // \u521b\u5efa\u4e00\u4e2a\u8282\u70b9\nvoid linkNodeToBinaryTree(BTree *T, BTreeNode *F, BTreeNode *L, BTreeNode *R);    // \u94fe\u63a5\u8282\u70b9\nvoid inOrderThreadedTree(BTree *T);     // \u7ebf\u7d22\u5316   <\u9012\u5f52>\nvoid inOrderTree(BTree *T);             // \u4e2d\u5e8f\u904d\u5386 <\u7ebf\u7d22\u5316\u7248\u672c>\n// void inOrderTree(BTree *T);          // \u7ebf\u7d22\u5316\u540e\u7684\u904d\u5386 (\u4e0d\u9700\u8981\u9012\u5f52)\nvoid freeBinaryTree_TagTOW(BTree **T);  // \u91ca\u653e\u6811   <\u7ebf\u7d22\u5316\u7248\u672c>\n\nvoid text_01(void);                     // \u7528\u4e8e\u6d4b\u8bd5\u4ee3\u7801\n\nBTree *binaryTreeInitialization(BTreeNode *root)\n{\n    BTree *T = (BTree *)malloc(sizeof(BTree));\n    if (!T)\n    {\n        printf("TREE_ROOT malloc Error!\\n");\n        return NULL;   \n    }\n    T->nodeNum = 0;\n    T->root = root;\n    T->tag = 0;\n    return T;\n}\n\nBTreeNode *addBinaryTreeNode(Element e)\n{\n    BTreeNode *node = (BTreeNode *)malloc(sizeof(BTreeNode));\n    if (!node)\n    {\n        printf("TREE_NODE malloc Error!\\n");\n        return NULL; \n    }\n    node->data = e;\n    node->Ltag = node->Rtag = 0;\n    node->left = node->right = NULL;\n    return node;\n}\n\nvoid linkNodeToBinaryTree(BTree *T, BTreeNode *F, BTreeNode *L, BTreeNode *R)\n{\n    if (!F)\n    {\n        printf("[Error]: Parent Is NULL!\\n");\n        return; \n    }\n    if (L)\n        ++T->nodeNum;\n    if (R)\n        ++T->nodeNum;\n    F->left = L;\n    F->right = R;\n}\n\nstatic BTreeNode *pre = NULL;   // \u79c1\u57df\u5168\u5c40\u53d8\u91cf - \u5c0f\u5f1f: \u59cb\u7ec8\u8ddf\u5728node\u6307\u9488\u540e\u9762\nstatic void zhong_xui_bian_li(BTreeNode *node)  // \u79c1\u57df\u51fd\u6570 <\u94fe\u63a5\u5c5e\u6027\u4e3a\u53ea\u80fd\u5728\u672c\u6587\u4ef6\u4e2d \u8bbf\u95ee || \u4f7f\u7528 >\n{\n    if (node)\n    {\n        zhong_xui_bian_li(node->left);\n        // \u4e2d\u8282\u70b9\n        if (!node->left)        // \u6307\u5411\u524d\u9a71\u7ed3\u70b9\n        {\n            node->left = pre;\n            node->Ltag = 1;\n        }\n        if (pre && !pre->right) // \u6307\u5411\u540e\u7ee7\u7ed3\u70b9\n        {\n            pre->right = node;\n            pre->Rtag = 1;\n        }\n        pre = node; // \u6ce8\u610f! \u8fd9\u4e2a\u662f\u5168\u5c40\u53d8\u91cf, \u5728\u4e0b\u9762\u8fd9\u4e2a\u8bed\u53e5\u7684\u4e0a\u4e0b\u662f\u6709\u533a\u522b\u7684!!!\n                    // \u5728\u4e0a\u662f\u6307\u4e2d, \u5728\u4e0b\u662f\u53bb\u5b8c\u624d\u6307\u4e2d(\u6162\u4e86!)\n        zhong_xui_bian_li(node->right);\n    }\n}\n\nvoid inOrderThreadedTree(BTree *T)\n{\n    /* \u8fd9\u4e2a\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u4e2d\u5e8f\u7ebf\u7d22\u5316qwq */\n    if (T->tag != 0)\n    {\n        printf("[Error]: The Tree \u7ebf\u7d22\u8fc7\u4e86!\\n");\n        return; \n    }\n    zhong_xui_bian_li(T->root);\n    T->tag = 2;\n}\n\nvoid inOrderTree(BTree *T)\n{   \n    // \u4e2d\u5e8f\u904d\u5386\n    if (T->tag != 2)\n    {\n        printf("[Error]: The Tree \u4e2d\u5e8f\u7ebf\u7d22\u4e86\u5417!\\n");\n        return; \n    }\n    BTreeNode *node = T->root;\n    while (node)\n    {   \n        // 1. \u5de6\n        while (!node->Ltag)\n        {\n            node = node->left;\n        }\n        printf("%c ", node->data);\n\n        // 2. \u56de\u6eaf<\u5230\u8fbe\u4e2d\u8282\u70b9>\u8f93\u51fa\u518d\u5f80\u53f3\n        while (node->Rtag && node->right)\n        {\n            node = node->right;\n            printf("%c ", node->data);\n        }\n        node = node->right;\n    }\n}\n\nvoid freeBinaryTree_TagTOW(BTree **T)\n{\n    if ((*T)->tag != 2)\n    {\n        printf("[Error]: The Tree \u4e2d\u5e8f\u7ebf\u7d22\u4e86\u5417!\\n");\n        return; \n    }\n    BTreeNode *node = (*T)->root;\n    BTreeNode *Free_node = NULL;\n\n    while (node)\n    {   \n        // 1. \u5de6\n        while (!node->Ltag)\n        {\n            node = node->left;\n        }\n        Free_node = node;\n\n        // 2. \u56de\u6eaf<\u5230\u8fbe\u4e2d\u8282\u70b9>\u8f93\u51fa\u518d\u5f80\u53f3\n        while (node->Rtag && node->right)\n        {\n            node = node->right;\n            free(Free_node);\n            Free_node = node;\n        }\n        \n        node = node->right;\n        free(Free_node);\n    }\n\n    free(*T);\n    *T = NULL;\n}\n\n/* \u5f53\u7136\u5ffd\u7565 0 1, \u91c7\u7528\u540e\u5e8f\u904d\u5386\u8fdb\u884c\u5220\u9664\u4e5f\u53ef\u4ee5 */\n// static void freeTreeNode(ThreadedBTree *tree, TreeNode *node) {\n//     if (node) {\n//         if (node->lTag == 0)\n//             freeTreeNode(tree, node->left);\n//         if (node->rTag ==0)\n//             freeTreeNode(tree, node->right);\n//         free(node);\n//         --tree->count;\n//     }\n// }\n\nvoid text_01(void)\n{\n    // \u521b\u5efa\u7ed3\u70b9\n    BTreeNode *T_a = addBinaryTreeNode(\'A\');\n    BTreeNode *T_b = addBinaryTreeNode(\'B\');\n    BTreeNode *T_c = addBinaryTreeNode(\'C\');\n    BTreeNode *T_d = addBinaryTreeNode(\'D\');\n    BTreeNode *T_e = addBinaryTreeNode(\'E\');\n\n    BTree *T_head = binaryTreeInitialization(T_a);\n    linkNodeToBinaryTree(T_head, T_a, T_b, T_c);\n    linkNodeToBinaryTree(T_head, T_b, T_d, T_e);\n    inOrderThreadedTree(T_head);\n    inOrderTree(T_head);\n    freeBinaryTree_TagTOW(&T_head);\n}\n\nint main(void)\n{\n    // \u4e8c\u53c9\u94fe\u8868 - \u4e2d\u5e8f\u7ebf\u7d22\u4e8c\u53c9\u6811 - \u5b9e\u8df5\u7248\n    /*\n     * \u7ebf\u7d22\u5316\n     * \u5c06\u67d0\u7ed3\u70b9\u7684\u7a7a\u6307\u9488\u57df\u6307\u5411\u8be5\u7ed3\u70b9\u7684\u524d\u9a71\u540e\u7ee7\uff0c\u5b9a\u4e49\u89c4\u5219\u5982\u4e0b\uff1a\n     *  \u82e5\u7ed3\u70b9\u7684\u5de6\u2f26\u6811\u4e3a\u7a7a\uff0c\u5219\u8be5\u7ed3\u70b9\u7684\u5de6\u5b69\u2f26\u6307\u9488\u6307\u5411\u5176\u524d\u9a71\u7ed3\u70b9\u3002\n     *  \u82e5\u7ed3\u70b9\u7684\u53f3\u2f26\u6811\u4e3a\u7a7a\uff0c\u5219\u8be5\u7ed3\u70b9\u7684\u53f3\u5b69\u2f26\u6307\u9488\u6307\u5411\u5176\u540e\u7ee7\u7ed3\u70b9\u3002\n     * \n     * ltag\u4e3a0\u65f6\uff0c\u6307\u5411\u5de6\u5b69\u2f26\uff0c\u4e3a1\u65f6\u6307\u5411\u524d\u9a71\n     * rtag\u4e3a0\u65f6\uff0c\u6307\u5411\u53f3\u5b69\u2f26\uff0c\u4e3a1\u65f6\u6307\u5411\u540e\u7ee7\n     * \n     * \u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5f53\u524d\u7ed3\u70b9\u6ca1\u6709\u5de6\u5b69\u2f26\uff0c\u9700\u8981\u5c06\u8be5\u7ed3\u70b9\u7684 lchild \u6307\u9488\u6307\u5411\u904d\u5386\u8fc7\u7a0b\u4e2d\u7684\u524d\u2f00\u4e2a\u7ed3\u70b9\uff0c\n     * \u6240\u4ee5\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u8bbe\u7f6e\u2f00\u4e2a\u6307\u9488\uff08\u540d\u4e3a pre \uff09\uff0c\u65f6\u523b\u6307\u5411\u5f53\u524d\u8bbf\u95ee\u7ed3\u70b9\u7684\u524d\u2f00\u4e2a\u7ed3\u70b9\u3002\n    **/\n    text_01();\n    \n    return 0;\n}\n'})})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(a,{...n})}):a(n)}}}]);