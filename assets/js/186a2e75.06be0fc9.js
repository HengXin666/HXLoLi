"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[86536],{28453:(n,t,e)=>{e.d(t,{R:()=>o,x:()=>d});var s=e(96540);const r={},i=s.createContext(r);function o(n){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function d(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),s.createElement(i.Provider,{value:t},n.children)}},32269:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u6e90\u7801\u9605\u8bfb/\u96c5\u5170\u4ead\u5e93/C++\u65e0\u5b8f\u53cd\u5c04\u7814\u7a76/\u7ec6\u8282\u7814\u7a76","title":"\u7ec6\u8282\u7814\u7a76","description":"\u4e00\u3001\u5224\u65ad\u6210\u5458\u4e2a\u6570","source":"@site/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/800-\u6e90\u7801\u9605\u8bfb/001-\u96c5\u5170\u4ead\u5e93/001-C++\u65e0\u5b8f\u53cd\u5c04\u7814\u7a76/\u7ec6\u8282\u7814\u7a76.md","sourceDirName":"002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/800-\u6e90\u7801\u9605\u8bfb/001-\u96c5\u5170\u4ead\u5e93/001-C++\u65e0\u5b8f\u53cd\u5c04\u7814\u7a76","slug":"/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u6e90\u7801\u9605\u8bfb/\u96c5\u5170\u4ead\u5e93/C++\u65e0\u5b8f\u53cd\u5c04\u7814\u7a76/\u7ec6\u8282\u7814\u7a76","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u6e90\u7801\u9605\u8bfb/\u96c5\u5170\u4ead\u5e93/C++\u65e0\u5b8f\u53cd\u5c04\u7814\u7a76/\u7ec6\u8282\u7814\u7a76","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/002-\u7a0b\u5e8f\u8bed\u8a00/001-C++/003-\u73b0\u4ee3C++/800-\u6e90\u7801\u9605\u8bfb/001-\u96c5\u5170\u4ead\u5e93/001-C++\u65e0\u5b8f\u53cd\u5c04\u7814\u7a76/\u7ec6\u8282\u7814\u7a76.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1753338396000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u65e0\u5b8f\u53cd\u5c04","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u6e90\u7801\u9605\u8bfb/\u96c5\u5170\u4ead\u5e93/C++\u65e0\u5b8f\u53cd\u5c04\u7814\u7a76/"},"next":{"title":"http\u670d\u52a1\u7aef\u67b6\u6784","permalink":"/HXLoLi/docs/\u7a0b\u5e8f\u8bed\u8a00/C++/\u73b0\u4ee3C++/\u6e90\u7801\u9605\u8bfb/\u96c5\u5170\u4ead\u5e93/http\u670d\u52a1\u7aef\u67b6\u6784/"}}');var r=e(74848),i=e(28453);const o={},d="\u7ec6\u8282\u7814\u7a76",a={},c=[{value:"\u4e00\u3001\u5224\u65ad\u6210\u5458\u4e2a\u6570",id:"\u4e00\u5224\u65ad\u6210\u5458\u4e2a\u6570",level:2}];function l(n){const t={code:"code",div:"div",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",span:"span",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"\u7ec6\u8282\u7814\u7a76",children:"\u7ec6\u8282\u7814\u7a76"})}),"\n",(0,r.jsx)(t.h2,{id:"\u4e00\u5224\u65ad\u6210\u5458\u4e2a\u6570",children:"\u4e00\u3001\u5224\u65ad\u6210\u5458\u4e2a\u6570"}),"\n",(0,r.jsx)(t.p,{children:"\u4e4b\u524d\u8bb2\u89e3\u7684\u5224\u65ad\u5143\u7d20\u4e2a\u6570\u7684\u65b9\u6cd5, \u5bf9\u4e8e\u666e\u901a\u7684\u6570\u636e\u7c7b\u578b, \u662f\u6b63\u786e\u7684. \u4f46\u662f\u5bf9\u4e8e\u67d0\u4e9b\u6a21\u7248; \u751a\u81f3\u662f\u67d0\u4e9b\u7f16\u8bd1\u5668, \u5b83\u7684\u7ed3\u679c\u90fd\u662f\u4e0d\u4e00\u6837\u7684..."}),"\n",(0,r.jsx)(t.p,{children:"\u4f8b\u5982:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",metastring:"[c1-\u805a\u5408\u521d\u59cb\u5316] vscode",children:'// https://godbolt.org/z/1abP8orMh\n// \u4e0b\u9762\u7ed3\u679c:\n// GCC:   N = 1\n// Clang: N = 2\n// MSVC:  N = 0\n\nstruct Any {\n    template <typename T>\n    operator T();\n};\n\ntemplate <typename T, typename... Args>\ninline constexpr std::size_t membersCount() {\n    if constexpr (requires {\n        T { {Args{}}..., {Any{}} }; // \u805a\u5408\u521d\u59cb\u5316\n    }) {\n        return membersCount<T, Args..., Any>();\n    } else {\n        return sizeof...(Args);\n    }\n}\n\nint main() {\n    struct AJson {\n        std::optional<std::string> d;\n        std::shared_ptr<std::string> e;\n    } t{};\n    constexpr auto N = membersCount<AJson>();\n    printf("N = %zu\\n", N);\n    return 0;\n}\n'})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",metastring:"[c1-\u5217\u8868\u521d\u59cb\u5316] vscode",children:'// https://godbolt.org/z/GaP8YEKhE\n// \u4e0b\u9762\u7ed3\u679c:\n// GCC:   N = 0\n// Clang: N = 0\n// MSVC:  N = 2\n\nstruct Any {\n    template <typename T>\n    operator T();\n};\n\ntemplate <typename T, typename... Args>\ninline constexpr std::size_t membersCount() {\n    if constexpr (requires {\n        T { Args{}..., Any{} }; // \u5217\u8868\u521d\u59cb\u5316\n    }) {\n        return membersCount<T, Args..., Any>();\n    } else {\n        return sizeof...(Args);\n    }\n}\n\nint main() {\n    struct AJson {\n        std::optional<std::string> d;\n        std::shared_ptr<std::string> e;\n    } t{};\n    constexpr auto N = membersCount<AJson>();\n    printf("N = %zu\\n", N);\n    return 0;\n}\n'})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",metastring:"[c1-\u6392\u5217\u7ec4\u5408] vscode",children:'// https://godbolt.org/z/nGse74hnx\n// \u4e0b\u9762\u7ed3\u679c:\n// GCC:   N = 4\n// Clang: N = 6\n// MSVC:  N = 6\n\nstruct Any {\n    template <typename T>\n    operator T();\n};\n\ntemplate <typename T, typename... Args>\ninline constexpr std::size_t membersCount() {\n    if constexpr (requires {\n        T { {Args{}}..., {Any{}} }; // \u6392\u5217\u7ec4\u5408\n    }) {\n        return membersCount<T, Args..., Any>();\n    } else if constexpr (requires {\n        T { Args{}..., Any{} }; // \u6392\u5217\u7ec4\u5408\n    }) {\n        return membersCount<T, Args..., Any>();\n    } else if constexpr (requires {\n        T { Args{}..., {Any{}} }; // \u6392\u5217\u7ec4\u5408\n    }) {\n        return membersCount<T, Args..., Any>();\n    } else if constexpr (requires {\n        T { {Args{}}..., Any{} }; // \u6392\u5217\u7ec4\u5408\n    }) {\n        return membersCount<T, Args..., Any>();\n    } else {\n        return sizeof...(Args);\n    }\n}\n\nint main() {\n    struct AJson {\n        std::optional<std::string> d;\n        std::optional<std::string> d2;\n        std::optional<std::string> d3;\n        std::shared_ptr<std::string> e;\n        std::shared_ptr<std::string> e2;\n        std::shared_ptr<std::string> e3;\n    } t{};\n    constexpr auto N = membersCount<AJson>();\n    printf("N = %zu\\n", N);\n    return 0;\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:"\u5b9e\u9645\u4e0a\u53d1\u73b0, \u6211\u4eec\u76ee\u7684\u53ea\u662f\u9700\u8981\u83b7\u53d6\u6210\u5458\u4e2a\u6570, \u6211\u7ba1\u4f60\u662f\u600e\u4e48\u521d\u59cb\u5316\u7684..."}),"\n",(0,r.jsxs)(t.p,{children:["\u800c\u4e14, \u4e0a\u9762\u7684",(0,r.jsx)(t.code,{children:"\u6392\u5217\u7ec4\u5408"}),", \u660e\u663e\u662f\u4e0d\u5bf9\u7684, \u4ec5\u6392\u5217\u4e86\u4f20\u53c2, \u5374\u6ca1\u6709\u6392\u5217\u6a21\u7248\u9012\u5f52\u7684\u4f20\u53c2, \u8fd9\u4e0d\u884c\u554a..."]}),"\n",(0,r.jsx)(t.p,{children:"\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5b83\u662f\u4f7f\u7528\u4ec0\u4e48\u53d8\u91cf\u7c7b\u578b, \u4e0d\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u8fdb\u884c\u6784\u9020\u4e86\u5417?"}),"\n",(0,r.jsx)(t.p,{children:"\u4f46\u662f\u6211\u4eec\u5f88\u96be\u8fd9\u6837\u505a..."}),"\n",(0,r.jsx)(t.p,{children:"\u4f46\u662f\u4e0d\u5982\u6362\u4e2a\u89d2\u5ea6, \u6211\u4eec\u4ec5\u4e3a\u81ea\u5df1\u7684\u76ee\u7684\u800c\u505a, \u6bd4\u5982\u6211\u4eec\u9700\u8981\u7c7b\u578bA, \u5c31\u4e0d\u9700\u8981\u8003\u8651\u517c\u5bb9B\u4e86, \u56e0\u4e3a\u6211\u4eec\u7528\u4e0d\u4e0aB."}),"\n",(0,r.jsx)(t.p,{children:"\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u679a\u4e3e, \u628a\u53ef\u80fd\u4f1a\u5931\u8d25\u7684\u5168\u90e8\u7279\u5316\u6784\u5efa\u5c31\u597d\u5566!"}),"\n",(0,r.jsxs)(t.div,{className:"markdown-alert markdown-alert-tip",children:["\n",(0,r.jsxs)(t.p,{className:"markdown-alert-title",children:[(0,r.jsx)(t.span,{className:"octicon octicon-tip",style:{"--oct-icon":"url(\"data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' class='octicon octicon-light-bulb mr-2' viewBox='0 0 16 16' version='1.1' width='16' height='16' aria-hidden='true'%3E%3Cpath d='M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z'%3E%3C/path%3E%3C/svg%3E\")"}}),"Tip"]}),"\n",(0,r.jsx)(t.p,{children:"\u6b64\u5904\u7ea6\u675f\u5931\u8d25\u7684\u539f\u56e0\u4e0d\u662f\u6784\u9020\u51fd\u6570\u9519\u4e86, \u800c\u53ea\u662f\u5339\u914d\u5931\u8d25. \u6bd4\u5982\u6709\u591a\u4e2a\u5408\u6cd5\u7684\u53c2\u6570, \u4ea6\u6216\u8005\u662f\u53c2\u6570\u5faa\u73af\u4f9d\u8d56\u4e86, \u6bd4\u5982\u671f\u671b\u4f20\u5165\u7684\u53c2\u6570\u4e5f\u662f\u4e00\u4e2a\u7c7b\u578bT, \u800c\u9700\u8981\u5b83\u6211\u5c31\u9700\u8981\u63a8\u5bfc, \u800c\u4f20\u5165\u662f\u4f9d\u8d56\u9690\u5f0f\u8f6c\u6362\u7684, \u9690\u5f0f\u8f6c\u6362\u53c8\u4f9d\u8d56\u4f20\u53c2\u7c7b\u578b, \u8fd9\u6837\u5faa\u73af\u4f9d\u8d56\u5c31\u5339\u914d\u5931\u8d25\u4e86."}),"\n",(0,r.jsxs)(t.p,{children:["\u518d\u6216\u8005\u662f GCC \u7684 ",(0,r.jsx)(t.code,{children:"std::string_view"}),", \u5b83\u867d\u7136\u5339\u914d\u5230 \u4e00\u4e2a\u53c2\u6570 (",(0,r.jsx)(t.code,{children:"const char*"}),"), \u4f46\u662f\u53c8\u56e0\u4e3a\u53c8\u6709\u4e00\u4e2a\u6784\u9020\u53c2\u6570\u662f\u4ece (",(0,r.jsx)(t.code,{children:"const char*. std::size_t len"}),") \u6784\u9020\u7684, \u5bfc\u81f4\u63a8\u5bfc\u5931\u8d25\u4e86 (\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u8fd9\u6837..., \u603b\u4e4b\u5c31GCC\u6709\u8fd9\u4e2a\u95ee\u9898. \u6b64\u65f6\u5982\u679c\u4f20\u53c2",(0,r.jsx)(t.code,{children:"std::nullptr_t"}),"\u5c31ok~)"]}),"\n",(0,r.jsxs)(t.p,{children:["\u518d\u6216\u8005\u662f\u5339\u914d\u5230",(0,r.jsx)(t.code,{children:"\u521d\u59cb\u5316\u5217\u8868"}),"\u91cc\u9762\u53bb\u4e86 (\u4f46\u662f\u5199\u6210\u805a\u5408\u7c7b\u6784\u9020\u7684\u65b9\u5f0f, \u5e94\u8be5\u4e0d\u4f1a\u4f18\u5148\u8fd9\u6837)"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"\u603b\u4e4b\u4e00\u756a\u7814\u7a76, \u53d1\u73b0 GCC \u548c MSVC \u8fd9\u4e24\u96be\u5144\u96be\u5f1f, \u603b\u6709\u4e00\u4e2a\u4f1a\u6389\u94fe\u5b50, \u800c Clang \u5c31\u7a33\u7684\u4e00\u6279..."}),"\n",(0,r.jsx)(t.p,{children:"\u6700\u7ec8:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",metastring:"vscode",children:'// https://godbolt.org/z/aEecMdnPf\n\nstruct Any {\n    template <typename T>\n    operator T() { return T{}; }\n};\n\ntemplate <typename T, typename U, typename... Args>\nconstexpr bool isConstructible = requires {\n    T {{Args{}}..., {U{}}};\n};\n\nstruct AnyOpt {\n    template <typename T>\n        requires(requires(T t) {\n            typename T::value_type;\n            t.has_value();\n            t.value();\n            t.operator*();\n        })\n    operator T();\n};\n\nstruct AnyPtr {\n    operator std::nullptr_t(); // \u667a\u80fd\u6307\u9488\n                               // GCC \u7684 std::string_view \u90fd\u4f9d\u9760\u6b64\n};\n\ntemplate <typename T, typename... Args>\ninline constexpr std::size_t membersCountImpl() {\n    if constexpr (isConstructible<T, Any, Args...>) {\n        return membersCountImpl<T, Args..., Any>();\n    } else if constexpr (isConstructible<T, AnyOpt, Args...>) {\n        return membersCountImpl<T, Args..., AnyOpt>();\n    } else if constexpr (isConstructible<T, AnyPtr, Args...>) {\n        return membersCountImpl<T, Args..., AnyPtr>();\n    } else {\n        return sizeof...(Args);\n    }\n}\n\ntemplate <typename T>\ninline constexpr std::size_t membersCount() {\n    if constexpr (std::is_aggregate_v<T>) {\n        return membersCountImpl<T>();\n    } else {\n        static_assert(!sizeof(T), "\u4e0d\u662f\u805a\u5408\u7c7b");\n    }\n}\n\nint main() {\n    // \u6ce8\u91ca\u6389\u7684\u90fd\u662f gcc / msvc \u4f1a\u51fa\u73b0\u7684\u95ee\u9898...\n    struct AJson {\n        std::initializer_list<std::initializer_list<std::string_view>> __;\n        std::span<std::string_view> _0;\n        std::string _1;\n        std::string_view _2;\n        std::optional<int> _3;\n        std::variant<int, float, std::string> _4;\n        std::any _5;\n\n        std::unique_ptr<int> _6;\n        std::shared_ptr<int> _7;\n        std::weak_ptr<int> _8;\n\n        std::vector<int> _9;\n        std::deque<int> _10;\n        std::list<int> _11;\n        std::forward_list<int> _12;\n\n        std::array<int, 5> _13;\n\n        std::set<int> _14;\n        std::unordered_set<int> _15;\n        std::map<int, int> _16;\n        std::unordered_map<int, int> _17;\n\n        std::multiset<int> _18;\n        std::unordered_multiset<int> _19;\n        std::multimap<int, int> _20;\n        std::unordered_multimap<int, int> _21;\n\n        // std::stack<int> _22;\n        // std::queue<int> _23;\n        // std::priority_queue<int> _24;\n\n        // std::chrono::system_clock::time_point _25;\n        std::chrono::duration<int> _26;\n\n        std::pair<int, int> _27;\n        std::tuple<int, double, std::string> _28;\n\n        // std::bitset<32> _29;\n        // std::complex<double> _30;\n\n        int _31;\n        double _32;\n        bool _33;\n    };\n    constexpr auto N = membersCount<AJson>();\n    printf("N = %zu\\n", N);\n    return 0;\n}\n'})})]})}function p(n={}){const{wrapper:t}={...(0,i.R)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}}}]);