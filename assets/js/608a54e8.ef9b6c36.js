"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[9516],{19964:(n,s,e)=>{e.r(s),e.d(s,{assets:()=>r,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/\u62d3\u6251\u6392\u5e8f/index","title":"\u62d3\u6251\u6392\u5e8f","description":"\u4e00\u3001\u57fa\u672c\u6982\u5ff5","source":"@site/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/005-\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/007-\u62d3\u6251\u6392\u5e8f/index.md","sourceDirName":"001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/005-\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/007-\u62d3\u6251\u6392\u5e8f","slug":"/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/\u62d3\u6251\u6392\u5e8f/","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/\u62d3\u6251\u6392\u5e8f/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/005-\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/007-\u62d3\u6251\u6392\u5e8f/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"floyd\u7b97\u6cd5","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/\u6700\u77ed\u8def\u5f84/floyd\u7b97\u6cd5/"},"next":{"title":"\u5173\u952e\u8def\u5f84","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/\u5173\u952e\u8def\u5f84/"}}');var a=e(74848),t=e(28453);const l={},c="\u62d3\u6251\u6392\u5e8f",r={},d=[{value:"\u4e00\u3001\u57fa\u672c\u6982\u5ff5",id:"\u4e00\u57fa\u672c\u6982\u5ff5",level:2},{value:"1.\u4ec0\u4e48\u662f\u6709\u5411\u65e0\u73af\u56fe",id:"1\u4ec0\u4e48\u662f\u6709\u5411\u65e0\u73af\u56fe",level:3},{value:"2.\u4ec0\u4e48\u662f\u6d3b\u52a8",id:"2\u4ec0\u4e48\u662f\u6d3b\u52a8",level:3},{value:"3.\u4ec0\u4e48\u662fAOV\u7f51",id:"3\u4ec0\u4e48\u662faov\u7f51",level:3},{value:"4.\u4ec0\u4e48\u662f\u62d3\u6251\u5e8f\u5217",id:"4\u4ec0\u4e48\u662f\u62d3\u6251\u5e8f\u5217",level:3},{value:"5.\u4ec0\u4e48\u662f\u62d3\u6251\u6392\u5e8f",id:"5\u4ec0\u4e48\u662f\u62d3\u6251\u6392\u5e8f",level:3},{value:"\u4e8c\u3001\u7b97\u6cd5\u601d\u60f3",id:"\u4e8c\u7b97\u6cd5\u601d\u60f3",level:2},{value:"\u4e09\u3001\u7b97\u6cd5\u5b9e\u73b0",id:"\u4e09\u7b97\u6cd5\u5b9e\u73b0",level:2},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u5bf9\u4e8e\u65e0\u5411\u56fe",id:"\u5bf9\u4e8e\u65e0\u5411\u56fe",level:4},{value:"\u7ade\u8d5b\u7248",id:"\u7ade\u8d5b\u7248",level:4},{value:"\u5b66\u4e60\u7248",id:"\u5b66\u4e60\u7248",level:4}];function h(n){const s={a:"a",annotation:"annotation",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msub:"msub",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"\u62d3\u6251\u6392\u5e8f",children:"\u62d3\u6251\u6392\u5e8f"})}),"\n",(0,a.jsx)(s.h2,{id:"\u4e00\u57fa\u672c\u6982\u5ff5",children:"\u4e00\u3001\u57fa\u672c\u6982\u5ff5"}),"\n",(0,a.jsx)(s.h3,{id:"1\u4ec0\u4e48\u662f\u6709\u5411\u65e0\u73af\u56fe",children:"1.\u4ec0\u4e48\u662f\u6709\u5411\u65e0\u73af\u56fe"}),"\n",(0,a.jsx)(s.p,{children:"\u987e\u540d\u601d\u4e49"}),"\n",(0,a.jsx)(s.h3,{id:"2\u4ec0\u4e48\u662f\u6d3b\u52a8",children:"2.\u4ec0\u4e48\u662f\u6d3b\u52a8"}),"\n",(0,a.jsx)(s.p,{children:"\u6240\u6709\u7684\u5de5\u7a0b\u6216\u8005\u67d0\u79cd\u6d41\u7a0b\u90fd\u53ef\u4ee5\u5206\u4e3a\u82e5\u5e72\u4e2a\u5c0f\u7684\u5de5\u7a0b\u6216\u8005\u9636\u6bb5\uff0c\u6211\u4eec\u79f0\u8fd9\u4e9b\u5c0f\u7684\u5de5\u7a0b\u6216\u9636\u6bb5\u4e3a\u201c\u6d3b\u52a8\u201d\u3002\u6253\u4e2a\u6bd4\u65b9\uff0c\u5982\u4f55\u628a\u4e00\u53ea\u5927\u8c61\u88c5\u5230\u51b0\u7bb1\u91cc\uff0c\u5f88\u7b80\u5355\uff0c\u5206\u4e09\u6b65\u3002\u7b2c\u4e00\uff0c\u6253\u5f00\u51b0\u7bb1\u95e8\uff1b\u7b2c\u4e8c\uff0c\u5c06\u5927\u8c61\u88c5\u8fdb\u53bb\uff1b\u7b2c\u4e09\uff0c\u5173\u4e0a\u51b0\u7bb1\u95e8\u3002\u8fd9\u4e09\u6b65\u4e2d\u7684\u6bcf\u4e00\u6b65\u4fbf\u662f\u4e00\u4e2a\u201c\u6d3b\u52a8\u201d"}),"\n",(0,a.jsx)(s.h3,{id:"3\u4ec0\u4e48\u662faov\u7f51",children:"3.\u4ec0\u4e48\u662fAOV\u7f51"}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsxs)(s.span,{style:{marginLeft:"30px"},children:["\u5728\u4e00\u4e2a\u8868\u793a\u5de5\u7a0b\u7684\u6709\u5411\u56fe\u4e2d\uff0c\u7528\u9876\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u7528\u5f27\u8868\u793a\u6d3b\u52a8\u4e4b\u95f4\u7684\u4f18\u5148\u5173\u7cfb\u7684\u6709\u5411\u56fe\u79f0\u4e3a",(0,a.jsx)(s.strong,{children:"\u9876\u70b9\u8868\u793a\u6d3b\u52a8\u7684\u7f51(Activity OnVertex Network)"}),"\uff0c\u7b80\u79f0",(0,a.jsx)(s.code,{children:"AOV"}),"\u7f51\u3002"]})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.span,{style:{marginLeft:"30px"},children:"\u65e5\u5e38\u751f\u6d3b\u4e2d\uff0c\u4e00\u9879\u5927\u7684\u5de5\u7a0b\u53ef\u4ee5\u770b\u4f5c\u662f\u7531\u82e5\u5e72\u4e2a\u5b50\u5de5\u7a0b\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u8fd9\u4e9b\u5b50\u5de5\u7a0b\u4e4b\u95f4\u5fc5\u5b9a\u5b58\u5728\u4e00\u5b9a\u7684\u5148\u540e\u987a\u5e8f\uff0c\u5373\u67d0\u4e9b\u5b50\u5de5\u7a0b\u5fc5\u987b\u5728\u5176\u4ed6\u7684\u4e00\u4e9b\u5b50\u5de5\u7a0b\u5b8c\u6210\u540e\u624d\u80fd\u5f00\u59cb\u3002"})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.span,{style:{marginLeft:"30px"},children:"AOV\u7f51\u4e2d\u7684\u5f27\u8868\u793a\u6d3b\u52a8\u4e4b\u95f4\u5b58\u5728\u7684\u67d0\u79cd\u5236\u7ea6\u5173\u7cfb\uff0c\u6bd4\u5982\u4e0a\u9762\u8bf4\u5230\u5c06\u5927\u8c61\u88c5\u5165\u51b0\u7bb1\uff0c\u5fc5\u987b\u5148\u6253\u5f00\u51b0\u7bb1\u95e8\uff0c\u624d\u80fd\u5c06\u5927\u8c61\u88c5\u8fdb\u53bb\uff0c\u5927\u8c61\u88c5\u8fdb\u53bb\u624d\u80fd\u5173\u4e0a\u51b0\u7bb1\u95e8\uff0c\u4ece\u800c\u5b8c\u6210\u6211\u4eec\u7684\u4efb\u52a1\u3002\u8fd8\u6709\u4e00\u4e2a\u7ecf\u5178\u7684\u4f8b\u5b50\u90a3\u5c31\u662f\u9009\u8bfe\uff0c\u901a\u5e38\u6211\u4eec\u662f\u5b66\u4e86C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u624d\u80fd\u5b66\u4e60\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u91cc\u7684\u5236\u7ea6\u5173\u7cfb\u5c31\u662f\u8bfe\u7a0b\u4e4b\u95f4\u7684\u4f18\u5148\u5173\u7cfb\u3002"})}),"\n",(0,a.jsx)(s.h3,{id:"4\u4ec0\u4e48\u662f\u62d3\u6251\u5e8f\u5217",children:"4.\u4ec0\u4e48\u662f\u62d3\u6251\u5e8f\u5217"}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsxs)(s.span,{style:{marginLeft:"30px"},children:["\u8bbe ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"G"}),(0,a.jsx)(s.mo,{children:"="}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsx)(s.mi,{children:"V"}),(0,a.jsx)(s.mo,{separator:"true",children:","}),(0,a.jsx)(s.mi,{children:"E"}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"G=(V,E)"})]})})}),(0,a.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"G"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(s.span,{className:"mrel",children:"="}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mopen",children:"("}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"}),(0,a.jsx)(s.span,{className:"mpunct",children:","}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"E"}),(0,a.jsx)(s.span,{className:"mclose",children:")"})]})]})]})," \u662f\u4e00\u4e2a\u5177\u6709 ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsx)(s.mi,{children:"n"})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]})," \u4e2a\u9876\u70b9\u7684\u6709\u5411\u56fe, ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsx)(s.mi,{children:"V"})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"V"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"})]})})]})," \u4e2d\u7684\u9876\u70b9\u5e8f\u5217 ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"V"}),(0,a.jsx)(s.mn,{children:"1"})]}),(0,a.jsx)(s.mo,{separator:"true",children:","}),(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"V"}),(0,a.jsx)(s.mn,{children:"2"})]}),(0,a.jsx)(s.mo,{separator:"true",children:","}),(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"V"}),(0,a.jsx)(s.mn,{children:"3"})]}),(0,a.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,a.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,a.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"V"}),(0,a.jsx)(s.mi,{children:"n"})]})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"V_1,V_2,V_3...V_n"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.2222em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"1"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(s.span,{})})})]})})]}),(0,a.jsx)(s.span,{className:"mpunct",children:","}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.2222em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"2"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(s.span,{})})})]})})]}),(0,a.jsx)(s.span,{className:"mpunct",children:","}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.2222em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"3"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(s.span,{})})})]})})]}),(0,a.jsx)(s.span,{className:"mord",children:"..."}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.1514em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.2222em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"n"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(s.span,{})})})]})})]})]})})]})," \u6ee1\u8db3\u82e5\u4ece\u9876\u70b9 ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"V"}),(0,a.jsx)(s.mi,{children:"i"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"V_i"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.2222em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(s.span,{})})})]})})]})]})})]})," \u5230 ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"V"}),(0,a.jsx)(s.mi,{children:"j"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"V_j"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.9694em",verticalAlign:"-0.2861em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.2222em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.05724em"},children:"j"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.2861em"},children:(0,a.jsx)(s.span,{})})})]})})]})]})})]})," \u6709\u4e00\u6761\u8def\u5f84\uff0c\u5219\u5728\u9876\u70b9\u5e8f\u5217\u4e2d\u9876\u70b9 ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"V"}),(0,a.jsx)(s.mi,{children:"i"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"V_i"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.2222em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(s.span,{})})})]})})]})]})})]})," \u5fc5\u5728\u9876\u70b9 ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"V"}),(0,a.jsx)(s.mi,{children:"j"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"V_j"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.9694em",verticalAlign:"-0.2861em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.2222em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.05724em"},children:"j"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.2861em"},children:(0,a.jsx)(s.span,{})})})]})})]})]})})]})," \u4e4b\u524d\u3002\u5219\u6211\u4eec\u79f0\u8fd9\u6837\u7684\u9876\u70b9\u5e8f\u5217\u4e3a\u4e00\u4e2a",(0,a.jsx)(s.strong,{children:"\u62d3\u6251\u5e8f\u5217"}),"\u3002"]})}),"\n",(0,a.jsx)(s.h3,{id:"5\u4ec0\u4e48\u662f\u62d3\u6251\u6392\u5e8f",children:"5.\u4ec0\u4e48\u662f\u62d3\u6251\u6392\u5e8f"}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsxs)(s.span,{style:{marginLeft:"30px"},children:["\u6240\u8c13\u7684\u62d3\u6251\u6392\u5e8f\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u4e00\u4e2a",(0,a.jsx)(s.code,{children:"\u6709\u5411\u65e0\u73af\u56fe"}),"\u6784\u9020",(0,a.jsx)(s.code,{children:"\u62d3\u6251\u5e8f\u5217"}),"\u7684",(0,a.jsx)(s.strong,{children:"\u8fc7\u7a0b"}),"\u3002"]})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.span,{style:{marginLeft:"30px"},children:"\u4f8b\u5982\uff0c\u4e00\u4e2a\u9879\u76ee\u5305\u62ecA\u3001B\u3001C\u3001D\u56db\u4e2a\u5b50\u90e8\u5206\u6765\u5b8c\u6210\uff0c\u5e76\u4e14A\u4f9d\u8d56\u4e8eB\u548cD\uff0cC\u4f9d\u8d56\u4e8eD\u3002\u73b0\u5728\u8981\u5236\u5b9a\u4e00\u4e2a\u8ba1\u5212\uff0c\u5199\u51faA\u3001B\u3001C\u3001D\u7684\u6267\u884c\u987a\u5e8f\u3002\u8fd9\u65f6\uff0c\u5c31\u53ef\u4ee5\u5229\u7528\u5230\u62d3\u6251\u6392\u5e8f\uff0c\u5b83\u5c31\u662f\u7528\u6765\u786e\u5b9a\u4e8b\u7269\u53d1\u751f\u7684\u987a\u5e8f\u7684\u3002"})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.span,{style:{marginLeft:"30px"},children:"\u5728\u62d3\u6251\u6392\u5e8f\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece\u9876\u70b9A\u5230\u9876\u70b9B\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u5728\u6392\u5e8f\u7ed3\u679c\u4e2dB\u51fa\u73b0\u5728A\u7684\u540e\u9762\u3002"})}),"\n",(0,a.jsx)(s.h2,{id:"\u4e8c\u7b97\u6cd5\u601d\u60f3",children:"\u4e8c\u3001\u7b97\u6cd5\u601d\u60f3"}),"\n",(0,a.jsx)(s.p,{children:"\u62d3\u6251\u6392\u5e8f\u7684\u7b97\u6cd5\u6b65\u9aa4\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u4e24\u6b65\uff1a"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"(1\uff09\u5728\u56fe\u4e2d\u9009\u62e9\u4e00\u4e2a\u6ca1\u6709\u524d\u9a71\u7684\u9876\u70b9V;"}),"\n",(0,a.jsx)(s.li,{children:"(2\uff09\u4ece\u56fe\u4e2d\u5220\u9664\u9876\u70b9\u221a\u548c\u6240\u6709\u4ee5\u8be5\u9876\u70b9\u4e3a\u5c3e\u7684\u5f27\u3002"}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"\u91cd\u590d\u4e0a\u8ff0\u4e24\u6b65\uff0c\u76f4\u81f3\u5168\u90e8\u9876\u70b9\u5747\u5df2\u8f93\u51fa\uff0c\u6216\u8005\u5f53\u524d\u56fe\u4e0d\u5b58\u5728\u65e0\u524d\u9a71\u7684\u9876\u70b9\u4e3a\u6b62\uff0c\u540e\u4e00\u79cd\u60c5\u51b5\u8bf4\u660e\u6709\u5411\u56fe\u4e2d\u5b58\u5728\u73af"}),"\n",(0,a.jsx)(s.p,{children:"\u9762\u8bd5\u65f6\uff0c\u5224\u65ad\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\u662f\u5426\u5b58\u5728\u73af\uff1a"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Kruskal\u7b97\u6cd5\u601d\u60f3\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"\u4f7f\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6, \u521d\u59cb\u65f6\u5019\u6240\u6709\u7ed3\u70b9\u7684\u5e76\u67e5\u96c6\u6807\u8bb0\u4e3a\u81ea\u5df1, \u7136\u540e\u987a\u7740\u8fb9\u4f9d\u6b21\u8fdb\u884c\u5408\u5e76, \u5e76\u4e14\u5408\u5e76\u4e4b\u524d\u5224\u65ad\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u4e2a\u96c6\u5408, \u5982\u679c\u5c5e\u4e8e\u8bf4\u660e\u8be5\u56fe\u6709\u73af."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\u62d3\u6251\u6392\u5e8f\u601d\u60f3\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"\u5728\u6709\u5411\u56fe\u4e2d\u9009\u62e9\u4e00\u4e2a\u6ca1\u6709\u524d\u9a71\u7684\u9876\u70b9\u5e76\u8f93\u51fa;\u53d1\u73b0\u5f53\u524d\u56fe\u4e0d\u5b58\u5728\u65e0\u524d\u9a71\u7684\u9876\u70b9\uff0c\u4f46\u62d3\u6251\u5e8f\u5217\u4e2d\u5e76\u672a\u8f93\u51fa\u6240\u6709\u7684\u9876\u70b9\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u9876\u70b9\u6784\u6210\u4e86\u73af\uff0c\u4e5f\u8bc1\u660e\u4e86\u8be5\u6709\u5411\u56fe\u5b58\u5728\u73af\u3002"}),"\n"]}),"\n"]}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsx)(s.tr,{children:(0,a.jsx)(s.th,{style:{textAlign:"center"},children:"##container##"})})}),(0,a.jsx)(s.tbody,{children:(0,a.jsx)(s.tr,{children:(0,a.jsx)(s.td,{style:{textAlign:"center"},children:(0,a.jsx)(s.img,{alt:"Clip_2024-02-11_10-18-47.png ##w600##",src:e(73234).A+"",width:"1117",height:"628"})})})})]}),"\n",(0,a.jsx)(s.h2,{id:"\u4e09\u7b97\u6cd5\u5b9e\u73b0",children:"\u4e09\u3001\u7b97\u6cd5\u5b9e\u73b0"}),"\n",(0,a.jsx)(s.p,{children:"\u6211\u4eec\u91c7\u7528\u90bb\u63a5\u8868\u4f5c\u4e3a\u6709\u5411\u56fe\u7684\u5b58\u50a8\u7ed3\u6784\uff0c\u5e76\u4e14\u5728\u5934\u7ed3\u70b9\u4e2d\u589e\u52a0\u4e00\u4e2a\u5b58\u653e\u9876\u70b9\u5165\u5ea6\u7684\u6570\u7ec4(indegree\uff09\u3002\u5165\u5ea6\u4e3a\u96f6\u7684\u9876\u70b9\u5373\u4e3a\u6ca1\u6709\u524d\u9a71\u7684\u9876\u70b9\uff0c\u5220\u9664\u9876\u70b9\u53ca\u4ee5\u5b83\u4e3a\u5c3e\u7684\u5f27\u7684\u64cd\u4f5c\uff0c\u5219\u53ef\u6362\u4ee5\u5f27\u5934\u9876\u70b9\u7684\u5165\u5ea6\u51cf1\u6765\u5b9e\u73b0\u3002"}),"\n",(0,a.jsx)(s.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,a.jsx)(s.h4,{id:"\u5bf9\u4e8e\u65e0\u5411\u56fe",children:"\u5bf9\u4e8e\u65e0\u5411\u56fe"}),"\n",(0,a.jsxs)(s.p,{children:["\u53ef\u4ee5\u53c2\u8003\u5b83\u7684\u4ee3\u7801, \u4f9d\u65e7\u9700\u8981\u8bb0\u5f55",(0,a.jsx)(s.code,{children:"\u5ea6"}),"\u7684\u6570\u7ec4!"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"/HXLoLi/docs/%E5%88%B7%E9%A2%98%E6%97%A5%E5%BF%97/%E5%8A%9B%E6%89%A3/%E6%9C%AA%E5%88%86%E7%B1%BB%E9%A2%98%E8%A7%A3/%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91/",children:"310. \u6700\u5c0f\u9ad8\u5ea6\u6811"}),", \u6216\u8005 ",(0,a.jsx)(s.a,{href:"/HXLoLi/docs/%E5%88%B7%E9%A2%98%E6%97%A5%E5%BF%97/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E8%80%81%E9%A2%98/%E3%80%90%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%9B%BDB%E3%80%91%E5%8F%91%E7%8E%B0%E7%8E%AF/",children:"[\u84dd\u6865\u676f 2017 \u56fd B] \u53d1\u73b0\u73af"}),"(\u6709",(0,a.jsx)(s.del,{children:"\u8bc1\u660e"}),"\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u6837\u5199(\u6709\u5411\u56fe\u53ea\u9700\u8981\u628a du[i] == 1 \u6539\u4e3a == 0 \u4ee5\u53ca \u90bb\u63a5\u8868\u548c du \u5b9a\u4e49\u4e3a\u5165\u5ea6\u6570\u7ec4\u5373\u53ef))"]}),"\n",(0,a.jsx)(s.h4,{id:"\u7ade\u8d5b\u7248",children:"\u7ade\u8d5b\u7248"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/B3644",children:"B3644 \u3010\u6a21\u677f\u3011\u62d3\u6251\u6392\u5e8f / \u5bb6\u8c31\u6811"})," / ",(0,a.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/T397291",children:"T397291 \u3010\u6a21\u677f\u3011\u62d3\u6251\u6392\u5e8f\uff08\u52a0\u5f3a\u7248\uff09"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-C++",children:'void demo_002(void)\n{\n    typedef struct {\n        int to;\n        int next;\n    } E;\n    int n;\n    scanf("%d", &n);            // n \u7684\u9876\u70b9, m \u6761\u8fb9\n    vector<E> e(1, { 0, 0});    // \u8fb9\n    vector<int> p(n + 1);        // \u9876\u70b9 - \u5934\u7ed3\u70b9\n    vector<int> r(n + 1);        // \u5165\u5ea6\n    for (int i = 1, j = 1, v; i <= n; ++i) {\n        for (; ;) {\n            scanf("%d", &v);\n            if (!v)\n                break;\n            e.push_back({ 0, 0 });\n            e[j].to = v;\n            e[j].next = p[i];\n            p[i] = j++;\n            ++r[v]; // \u5165\u5ea6+1\n        }\n    }\n\n    // \u62d3\u6251\u6392\u5e8f\n    queue<int> que; // \u4e34\u65f6\u961f\u5217\n    \n    for (int i = 1; i <= n; ++i)\n        if (!r[i]) {\n            que.push(i);\n            printf("%d ", i);\n        }\n    \n    while (que.size())\n    {\n        int x = que.front();\n        que.pop();\n\n        for (int j = p[x]; j; j = e[j].next) {\n            --r[e[j].to];\n            if (!r[e[j].to]) {\n                que.push(e[j].to);\n                printf("%d ", e[j].to);\n            }\n        }\n    }\n    \n    return;\n}\n'})}),"\n",(0,a.jsx)(s.h4,{id:"\u5b66\u4e60\u7248",children:"\u5b66\u4e60\u7248"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-C",children:'#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct _AdjacencyListNode\n{\n    int index;\n    struct _AdjacencyListNode *next;    // \u6709\u6743\u4e5f\u53ef\u518d\u52a0\n} AdjacencyListNode;\n\ntypedef struct\n{\n    char **show;                // data \u53ef\u4ee5\u641e\u4e2a\u552f\u4e00\u8bc6\u522b\u7801\n    AdjacencyListNode **list;\n\n    /* \u7528\u4e8e\u5feb\u901f\u63d2\u5165 */\n    int n;\n    int add_index;\n\n    /* \u7528\u4e8e\u904d\u5386 */\n    _Bool *tag_arr;\n} AdjacencyList;\n\nAdjacencyList *initAdjacencyList(int n);                    // \u521d\u59cb\u5316\u90bb\u63a5\u8868\nvoid addAdjacencyListNode(AdjacencyList *A, char *show);    // \u6dfb\u52a0\u5143\u7d20\n_Bool connectAdjacencyListNode(AdjacencyList *A, char *show_1, char *show_2/*, int \u6743*/);   // \u8fde\u63a5\u7ed3\u70b9\nvoid DFS(AdjacencyList *A, int index);                      // \u6df1\u5ea6\u4f18\u5148\u904d\u5386\nvoid BFS(AdjacencyList *A, int index);                      // \u5e7f\u5ea6\u4f18\u5148\u904d\u5386\nvoid initTagArr(AdjacencyList *A);\nvoid freeAdjacencyList(AdjacencyList *A);\n\nvoid initTagArr(AdjacencyList *A)\n{\n    for (int i = 0; i < A->n; ++i)\n    {\n        A->tag_arr[i] = 0;\n    }\n}\n\nAdjacencyList *initAdjacencyList(int n)\n{\n    AdjacencyList* A = (AdjacencyList *)malloc(sizeof(AdjacencyList));\n    if (!A)\n    {\n        MALLOC_ERROR:\n        printf("MALLOC ERROR!\\n");\n        return NULL;\n    }\n    A->show = (char **)malloc(sizeof(char *) * n);\n    if (!A->show)\n        goto MALLOC_ERROR;\n    \n    A->list = (AdjacencyListNode **)malloc(sizeof(AdjacencyListNode *) * n);\n    if (!A->list)\n        goto MALLOC_ERROR;\n    \n    A->tag_arr = (_Bool *)malloc(sizeof(_Bool) * n);\n    if (!A->tag_arr)\n        goto MALLOC_ERROR;\n    A->n = n;\n    initTagArr(A);\n    for (int i = 0; i < n; ++i)\n    {\n        A->list[i] = NULL;\n    }\n    A->add_index = 0;\n    return A;\n}\n\nvoid addAdjacencyListNode(AdjacencyList *A, char *show)\n{\n    if (A->add_index == A->n)\n        return; // \u6ee1\n    \n    A->show[A->add_index++] = show;\n}\n\n// \u5b9a\u4e49\u4e3a show_1 --\x3e show_2 (\u6709\u5411\u56fe)\n_Bool connectAdjacencyListNode(AdjacencyList *A, char *show_1, char *show_2/*, int \u6743*/)\n{\n    int i_1 = -1;\n    for (int i = 0; i < A->add_index; ++i)\n    {\n        if (A->show[i] == show_1)\n        {\n            i_1 = i;\n            break;\n        }\n    }\n\n    if (i_1 == -1)\n        return 0;   // \u6ca1\u627e\u5230\n    \n    int i_2 = -1;\n    for (int i = 0; i < A->add_index; ++i)\n    {\n        if (A->show[i] == show_2)\n        {\n            i_2 = i;\n            break;\n        }\n    }\n\n    if (i_2 == -1)\n        return 0;   // \u6ca1\u627e\u5230\n    \n    AdjacencyListNode *p = (AdjacencyListNode *)malloc(sizeof(AdjacencyListNode));\n    if (!p)\n        return 0; // malloc error!\n    \n    p->index = i_2;\n    p->next = A->list[i_1];\n    A->list[i_1] = p;\n    return 1;\n}\n\nvoid DFS(AdjacencyList *A, int index)\n{\n    printf("%s ", A->show[index]);\n    A->tag_arr[index] = 1;\n    AdjacencyListNode *p = A->list[index];\n    while (p)\n    {\n        if (!A->tag_arr[p->index])\n            DFS(A, p->index);\n        p = p->next;\n    }\n}\n\n// \u53ea\u80fd\u904d\u5386\u8fde\u901a\u56fe, \u4e0d\u8fde\u901a\u9700\u8981\u518d\u52a0\u4e2afor!\nvoid BFS(AdjacencyList *A, int index)\n{\n    // \u4e34\u65f6\u961f\u5217\n    int queue[A->add_index + 1];\n    int q_h = 0, q_t = 0;\n    queue[q_t++] = index;\n    A->tag_arr[index] = 1;\n    while (q_t != q_h)\n    {\n        printf("%s ", A->show[queue[q_h]]);\n        AdjacencyListNode *p = A->list[queue[q_h]];\n        while (p)\n        {\n            if (!A->tag_arr[p->index])\n            {\n                queue[q_t] = p->index;\n                A->tag_arr[p->index] = 1;\n                q_t = (q_t + 1) % (A->add_index + 1);\n            }\n            p = p->next;\n        }\n        q_h = (q_h + 1) % (A->add_index + 1);\n    }\n}\n\nvoid freeAdjacencyList(AdjacencyList *A)\n{\n    for (int i = 0; i < A->add_index; ++i)\n    {\n        AdjacencyListNode *p = A->list[i];\n        AdjacencyListNode *tmp = NULL;\n        while (p)\n        {\n            tmp = p;\n            p = p->next;\n            free(tmp);\n        }\n    }\n\n    free(A->tag_arr);\n    free(A->show);\n    free(A->list);\n    free(A);\n}\n\nint *topologicalSort(AdjacencyList *A); // \u4f20\u5165\u90bb\u63a5\u8868, \u8fd4\u56de\u62d3\u6251\u6392\u5e8f\u7684\u7ed3\u679c, \u8fd4\u56de\u5143\u7d20\u662f\u7d22\u5f15\n\n\nint *topologicalSort(AdjacencyList *A)\n{\n    // \u6784\u5efa\u4e00\u4e2a\u8fd4\u56de\u6570\u7ec4\n    int *resArr = (int *)malloc(sizeof(int) * A->add_index);\n    if (!resArr)\n        goto ERROR;\n\n    // \u6784\u5efa\u4e00\u4e2a\u6570\u7ec4, \u901a\u8fc7\u4e00\u6b21\u90bb\u63a5\u8868\u7684\u904d\u5386, \u5f97\u5230\u5bf9\u4e8e\u5143\u7d20\u7684\u5165\u5ea6\n    int *penetration = (int *)malloc(sizeof(int) * A->add_index);   // \u5165\u5ea6\u6570\u7ec4\n    if (!penetration)\n    {\n        ERROR:\n        printf("malloc error!\\n");\n        return NULL;\n    }\n\n    // \u521d\u59cb\u5316\u5165\u5ea6\u6570\u7ec4\n    for (int i = 0; i < A->add_index; ++i)\n        penetration[i] = 0;\n\n    AdjacencyListNode *tmp = NULL;\n    // \u904d\u5386\u90bb\u63a5\u8868\n    for (int i = 0; i < A->add_index; ++i)\n    {\n        tmp = A->list[i];\n        \n        while (tmp)\n        {\n            ++penetration[tmp->index];\n            tmp = tmp->next;\n        }\n    }\n    \n    // \u6784\u5efa\u4e00\u4e2a\u4e34\u65f6\u961f\u5217, \u4ee5\u7f13\u5b58\u6570\u636e\n\n    // \u7ed3\u70b9\n    typedef struct _queue_node\n    {\n        int index;\n        struct _queue_node *next;   // \u4e0b\u4e00\u4e2a\u7ed3\u70b9\n        struct _queue_node *mae;    // \u7236\u7ed3\u70b9\n    } _queue_node;\n\n    // \u961f\u5217\u8868\u5934\n    typedef struct _queue\n    {\n        int num;            // \u961f\u5217\u5143\u7d20\u6570\u91cf\n        _queue_node *head;  // \u961f\u5934\u6307\u9488(\u6b64\u5904\u5165\u961f)\n        _queue_node *tail;  // \u961f\u5c3e\u6307\u9488(\u6b64\u5904\u51fa\u961f)\n    } _queue;\n\n    _queue Q;\n    Q.num = 0;\n    Q.head = Q.tail = NULL;\n    int resArr_index = 0;\n    int v_num = A->add_index;   // \u7ed3\u70b9\u6570\n    do\n    {\n        for (int i = 0; i < A->add_index; ++i)\n        {\n            // \u5165\u5ea6\u4e3a\u96f6\n            if (penetration[i] == 0)\n            {\n                penetration[i] = -1;    // \u6807\u8bb0\u4e3a\u5df2\u5904\u7406\n                // // \u5c06\u5176\u51fa\u5ea6\u5220\u9664\n                // (\u653e\u8fd9\u91cc\u6ca1\u95ee\u9898, \u53ea\u662f\u6211\u50cf\u660e\u663e\u4e00\u70b9)\n                // tmp = A->list[i];\n                // while (tmp)\n                // {\n                //     --penetration[tmp->index];\n                //     tmp = tmp->next;\n                // }\n\n                // \u5165\u961f\n                _queue_node *p = (_queue_node *)malloc(sizeof(_queue_node));\n                if (!p)\n                    goto ERROR;\n                ++Q.num;\n\n                // \u6b64\u5904\u662f\u5bf9\u5c3e\u6307\u9488\u5220\u9664\u7684\u4f18\u5316, \u8ba9\u5c3e\u6307\u9488\u6307\u5411\u5c3e\u7684\u524d\u4e00\u4e2a\u5143\u7d20 [\u9519\u8bef]\n                /*\n                 *  \u60c5\u51b5\u5982\u4e0b:   \u4e00\u4e2a\u8282\u70b9 head -> A -> NULL\n                 *             \u5c3e\u6307\u9488->NULL (\u91ca\u653e\u4e3a\u91ca\u653ehead, head->NULL)\n                 *\n                 *  2\u4e2a\u7ed3\u70b9:    head -> B -> A-> NULL\n                 *             \u5c3e\u6307\u9488-> B (\u4e5f\u5c31\u662fp)\n                 * \n                 *  2+\u4e2a\u7ed3\u70b9    \u6211\u4e0d\u53d8\u52a8\n                 * \n                 *  \u9519\u8bef\u7684\u60f3\u6cd5, \u5982\u679c\u5220\u9664\u4e86\u5c3e\u7ed3\u70b9, \u90a3\u4e48\u5c3e\u6307\u9488\u4e5f\u662f\u8981\u53d8\u52a8\u7684!!!\n                 *  \u6240\u4ee5\u8981\u4e48\u53cc\u5411\u6307\u9488\u8981\u4e48\u8d39\u7a7a\u95f4, \u8981\u4e48\u904d\u5386!\n                 * */\n                // if (Q.num == 2)\n                // {\n                //     Q.tail = p;\n                // }\n                if (Q.head)\n                    Q.head->mae = p;\n                p->index = i;\n                p->next = Q.head;\n                Q.head = p;\n                p->mae = NULL;\n                if (!Q.tail)\n                    Q.tail = p;\n            }\n        }\n\n\n        // \u9000\u51fa\u6761\u4ef6\n        if (!Q.tail && (Q.num == 0 && v_num > 0))\n        {\n            printf("\u6709\u73af!!!\\n");\n            break;\n        }\n        else\n            --v_num;\n\n        // \u51fa\u961f\u5904\u7406, \u6bd4\u5982\u8f93\u51fa\n        printf("%s ", A->show[Q.tail->index]);\n        resArr[resArr_index++] = Q.tail->index;\n\n        // \u5c06\u5176\u51fa\u5ea6\u5220\u9664\n        tmp = A->list[Q.tail->index];\n        while (tmp)\n        {\n            --penetration[tmp->index];\n            tmp = tmp->next;\n        }\n\n        // \u51fa\u961f\n        _queue_node *cache = Q.tail;\n        if (Q.tail && Q.tail->mae)\n        {\n            Q.tail = Q.tail->mae;\n            Q.tail->next = NULL;\n        }\n        else\n            Q.tail = NULL;\n\n        if (cache == Q.head)\n            Q.head = NULL;\n        free(cache);\n        --Q.num;\n\n        // \u7406\u8bba\u4e0a\u8981\u518d\u52a0\u4e2a\u5224\u65ad\u505a\u9000\u51fa\u6761\u4ef6, \u56e0\u4e3a\u73b0\u5728\u53ea\u80fd\u4fdd\u8bc1\u901a\u8fc7\u6709\u5411\u65e0\u73af\u56fe, \u6709\u73af\u4f1a\u6b7b\u5faa\u73af\n        // \u6dfb\u52a0\u4e00\u4e2a\u53d8\u91cf, \u5728\u5f00\u5934\u8bb0\u5f55\u4e00\u4e0bv_num\u503c, \u518d\u548c\u7ed3\u5c3e\u5339\u5bf9\u4e00\u4e0b\u5c31\u884c\u4e86\n    } while (Q.num || v_num);\n\n    free(penetration);\n    return resArr;\n}\n\n\nint main(void)\n{\n    //  - \u62d3\u6251\u6392\u5e8f\u7b97\u6cd5 - \u6709\u5411\u65e0\u73af\u56fe\n    AdjacencyList *A = initAdjacencyList(7);\n    addAdjacencyListNode(A, "v0");\n    addAdjacencyListNode(A, "v1");\n    addAdjacencyListNode(A, "v2");\n    addAdjacencyListNode(A, "v3");\n    addAdjacencyListNode(A, "v4");\n    addAdjacencyListNode(A, "v5");\n    addAdjacencyListNode(A, "v6");\n\n    connectAdjacencyListNode(A, "v0", "v1");\n    connectAdjacencyListNode(A, "v0", "v2");\n    connectAdjacencyListNode(A, "v0", "v3");\n    connectAdjacencyListNode(A, "v1", "v2");\n    connectAdjacencyListNode(A, "v1", "v4");\n    connectAdjacencyListNode(A, "v2", "v4");\n    connectAdjacencyListNode(A, "v3", "v5");\n    connectAdjacencyListNode(A, "v2", "v5");\n    connectAdjacencyListNode(A, "v5", "v4");\n    connectAdjacencyListNode(A, "v5", "v6");\n\n    int *arr = topologicalSort(A);\n    freeAdjacencyList(A);\n    free(arr);\n    getchar();\n    return 0;\n}\n'})})]})}function m(n={}){const{wrapper:s}={...(0,t.R)(),...n.components};return s?(0,a.jsx)(s,{...n,children:(0,a.jsx)(h,{...n})}):h(n)}},28453:(n,s,e)=>{e.d(s,{R:()=>l,x:()=>c});var i=e(96540);const a={},t=i.createContext(a);function l(n){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(s):{...s,...n}}),[s,n])}function c(n){let s;return s=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:l(n.components),i.createElement(t.Provider,{value:s},n.children)}},73234:(n,s,e)=>{e.d(s,{A:()=>i});const i=e.p+"assets/images/Clip_2024-02-11_10-18-47-bf54a7a80441afef1cfec8e2f08a4610.png"}}]);