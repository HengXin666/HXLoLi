"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[80014],{28453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>o});var t=i(96540);const s={},a=t.createContext(s);function r(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(a.Provider,{value:e},n.children)}},95506:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>m,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5e38\u7528\u6280\u5de7/\u5bf9\u89d2\u7ebf\u679a\u4e3e/index","title":"\u5bf9\u89d2\u7ebf\u679a\u4e3e","description":"- \u4f8b\u9898 \u3010\u6a21\u677f\u3011\u904d\u5386\u5bf9\u89d2\u7ebf\uff0c\u9644\u76f8\u4f3c\u9898\u76ee\uff08Python/Java/C++/Go\uff09","source":"@site/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/014-\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/006-\u5e38\u7528\u6280\u5de7/001-\u5bf9\u89d2\u7ebf\u679a\u4e3e/index.md","sourceDirName":"001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/014-\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/006-\u5e38\u7528\u6280\u5de7/001-\u5bf9\u89d2\u7ebf\u679a\u4e3e","slug":"/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5e38\u7528\u6280\u5de7/\u5bf9\u89d2\u7ebf\u679a\u4e3e/","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5e38\u7528\u6280\u5de7/\u5bf9\u89d2\u7ebf\u679a\u4e3e/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/014-\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/006-\u5e38\u7528\u6280\u5de7/001-\u5bf9\u89d2\u7ebf\u679a\u4e3e/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u6811\u72b6\u6570\u7ec4","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5e38\u7528\u6570\u636e\u7ed3\u6784/\u6811\u72b6\u6570\u7ec4/"},"next":{"title":"\u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u677f\u5b50\u3011\u7b97\u6cd5\u6a21\u7248/\u5e38\u7528\u6280\u5de7/\u679a\u4e3e\u66f4\u5927\u7684\u56de\u6587\u6570\u5b57/"}}');var s=i(74848),a=i(28453);const r={},o="\u5bf9\u89d2\u7ebf\u679a\u4e3e",m={},c=[];function l(n){const e={a:"a",annotation:"annotation",code:"code",h1:"h1",header:"header",li:"li",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",ul:"ul",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"\u5bf9\u89d2\u7ebf\u679a\u4e3e",children:"\u5bf9\u89d2\u7ebf\u679a\u4e3e"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u4f8b\u9898: ",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/sort-matrix-by-diagonals/",children:"3446. \u6309\u5bf9\u89d2\u7ebf\u8fdb\u884c\u77e9\u9635\u6392\u5e8f"})," | \u8be6\u7ec6\u63a8\u5bfc: ",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/sort-matrix-by-diagonals/solutions/3068709/mo-ban-mei-ju-dui-jiao-xian-pythonjavacg-pjxp/",children:"\u3010\u6a21\u677f\u3011\u904d\u5386\u5bf9\u89d2\u7ebf\uff0c\u9644\u76f8\u4f3c\u9898\u76ee\uff08Python/Java/C++/Go\uff09"})]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["\u7ed9\u4f60\u4e00\u4e2a ",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mi,{children:"n"}),(0,s.jsx)(e.mo,{children:"\xd7"}),(0,s.jsx)(e.mi,{children:"m"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"n \\times m"})]})})}),(0,s.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.jsx)(e.span,{className:"mbin",children:"\xd7"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"m"})]})]})]})," \u7684\u77e9\u9635, \u8bf7\u5bf9\u5bf9\u89d2\u7ebf\u6392\u5e8f."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-C++",children:"class Solution {\npublic:\n    vector<vector<int>> sortMatrix(vector<vector<int>>& grid) {\n        // \u5bf9\u89d2\u7ebf\u904d\u5386\n        // \u600e\u4e48\u786e\u5b9a\u5bf9\u89d2\u7ebf\u5462? -> \u4ed6\u4eec i - j \u76f8\u540c, \u5373 \u659c\u7387\u662f -1\n        // \u8bbe\u6700\u53f3\u4e0a\u7684\u5bf9\u89d2\u7ebf\u662f k = 1\n        // \u5219\u6700\u5de6\u4e0b\u7684\u5bf9\u89d2\u7ebf\u662f k = n + m - 1\n        // \u6709 k = i - j + m\n        int n = grid.size(), m = grid[0].size();\n        for (int k = 1; k < n + m; ++k) {\n            // \u786e\u5b9a j \u7684\u8303\u56f4 (\u4ece i = 0, i = n - 1\u63a8\u5bfc)\n            // \u6ce8\u610f j \u9700\u8981\u6ee1\u8db3\u5728 [0, m - 1] \u4e2d\n            int j_min = max(0, m - k),             // i = 0\n                j_max = min(m - 1, n - 1 - k + m); // i = n - 1\n            vector<int> tmp;\n            // \u679a\u4e3e\u5bf9\u89d2\u7ebf \u5df2\u7ecf j \u53ef\u4ee5\u53cd\u63a8 i\n            for (int j = j_min; j <= j_max; ++j)\n                tmp.push_back(grid[j + k - m][j]);\n            if (k < m) {\n                sort(tmp.begin(), tmp.end(), [&](int a, int b) {\n                    return a < b;\n                });\n            } else {\n                sort(tmp.begin(), tmp.end(), [&](int a, int b) {\n                    return a > b;\n                });\n            }\n            for (int j = j_min, idx = 0; j <= j_max; ++j)\n                grid[j + k - m][j] = tmp[idx++];\n        }\n        return grid;\n    }\n};\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u5c0f\u7ec3\u4e60: ",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/difference-of-number-of-distinct-values-on-diagonals/",children:"2711. \u5bf9\u89d2\u7ebf\u4e0a\u4e0d\u540c\u503c\u7684\u6570\u91cf\u5dee"})]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-C++",children:"class Solution {\n    using ll = uint64_t;\npublic:\n    vector<vector<int>> differenceOfDistinctValues(\n        vector<vector<int>>& grid\n    ) {\n        int n = grid.size(), m = grid[0].size();\n        // k = i - j + m;\n        for (int k = 1; k <= n + m - 1; ++k) {\n            int min_j = max(0, m - k),             // i = 0\n                max_j = min(m - 1, n - 1 - k + m); // i = n - 1\n            int len = max_j - min_j + 1;\n            vector<ll> usiro(len + 1);\n            for (int j = max_j, idx = len - 1; j >= min_j; --j, --idx) {\n                usiro[idx] = usiro[idx + 1] | 1ULL << grid[j + k - m][j];\n            }\n            ll mae = 0;\n            for (int j = min_j, idx = 0; j <= max_j; ++j, ++idx) {\n                int v = grid[j + k - m][j];\n                grid[j + k - m][j] = abs(\n                    popcount(mae) - popcount(usiro[idx + 1])\n                );\n                mae |= 1ULL << v;\n            }\n        }\n        return grid;\n    }\n};\n"})})]})}function d(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}}}]);