"use strict";(self.webpackChunkhx_loli=self.webpackChunkhx_loli||[]).push([[75282],{28453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>r});var s=i(96540);const a={},t=s.createContext(a);function l(n){const e=s.useContext(t);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:l(n.components),s.createElement(t.Provider,{value:e},n.children)}},46628:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/Clip_2024-01-28_11-47-32-8ad1bdca2999bb045a3f4512c46f8abf.png"},55068:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>m,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/\u8d6b\u592b\u66fc\u6811\u548c\u8d6b\u592b\u66fc\u7f16\u7801/index","title":"\u8d6b\u592b\u66fc\u6811","description":"\u54c8\u592b\u66fc\u6811\u76f8\u5173\u7684\u51e0\u4e2a\u540d\u8bcd","source":"@site/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/004-\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/008-\u8d6b\u592b\u66fc\u6811\u548c\u8d6b\u592b\u66fc\u7f16\u7801/index.md","sourceDirName":"001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/004-\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/008-\u8d6b\u592b\u66fc\u6811\u548c\u8d6b\u592b\u66fc\u7f16\u7801","slug":"/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/\u8d6b\u592b\u66fc\u6811\u548c\u8d6b\u592b\u66fc\u7f16\u7801/","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/\u8d6b\u592b\u66fc\u6811\u548c\u8d6b\u592b\u66fc\u7f16\u7801/","draft":false,"unlisted":false,"editUrl":"https://github.com/HengXin666/HXLoLi/edit/main/docs/001-\u8ba1\u4f6c\u5e38\u8b58/001-\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/004-\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/008-\u8d6b\u592b\u66fc\u6811\u548c\u8d6b\u592b\u66fc\u7f16\u7801/index.md","tags":[],"version":"current","lastUpdatedBy":"Heng_Xin_666","lastUpdatedAt":1745851959000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u5e76\u67e5\u96c6","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u6811/\u5e76\u67e5\u96c6/"},"next":{"title":"\u56fe\u7684\u6982\u5ff5\u53ca\u91cd\u8981\u672f\u8bed","permalink":"/HXLoLi/docs/\u8ba1\u4f6c\u5e38\u8b58/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u3010\u6570\u636e\u7ed3\u6784\u3011\u56fe/\u56fe\u7684\u6982\u5ff5\u53ca\u91cd\u8981\u672f\u8bed/"}}');var a=i(74848),t=i(28453);const l={},r="\u8d6b\u592b\u66fc\u6811",m={},c=[{value:"\u54c8\u592b\u66fc\u6811\u76f8\u5173\u7684\u51e0\u4e2a\u540d\u8bcd",id:"\u54c8\u592b\u66fc\u6811\u76f8\u5173\u7684\u51e0\u4e2a\u540d\u8bcd",level:2},{value:"\u4ec0\u4e48\u662f\u8d6b\u592b\u66fc\u6811",id:"\u4ec0\u4e48\u662f\u8d6b\u592b\u66fc\u6811",level:2},{value:"\u6784\u5efa\u8d6b\u592b\u66fc\u6811",id:"\u6784\u5efa\u8d6b\u592b\u66fc\u6811",level:2},{value:"\u4ec0\u4e48\u662f\u8d6b\u592b\u66fc\u7f16\u7801",id:"\u4ec0\u4e48\u662f\u8d6b\u592b\u66fc\u7f16\u7801",level:2},{value:"\u8d6b\u592b\u66fc\u7f16\u7801\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u51fa\u73b0\u91cd\u590d\u524d\u7f00?",id:"\u8d6b\u592b\u66fc\u7f16\u7801\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u51fa\u73b0\u91cd\u590d\u524d\u7f00",level:2},{value:"\u4ee3\u7801\u5b9e\u73b0",id:"\u4ee3\u7801\u5b9e\u73b0",level:2}];function d(n){const e={annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"\u8d6b\u592b\u66fc\u6811",children:"\u8d6b\u592b\u66fc\u6811"})}),"\n",(0,a.jsx)(e.h2,{id:"\u54c8\u592b\u66fc\u6811\u76f8\u5173\u7684\u51e0\u4e2a\u540d\u8bcd",children:"\u54c8\u592b\u66fc\u6811\u76f8\u5173\u7684\u51e0\u4e2a\u540d\u8bcd"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\u8def\u5f84\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\u5728\u4e00\u68f5\u6811\u4e2d\uff0c\u4e00\u4e2a\u7ed3\u70b9\u5230\u53e6\u4e00\u4e2a\u7ed3\u70b9\u4e4b\u95f4\u7684\u901a\u8def\uff0c\u79f0\u4e3a\u8def\u5f84\u3002"}),"\n",(0,a.jsx)(e.li,{children:"\u4ece\u6839\u7ed3\u70b9\u5230\u7ed3\u70b9a\u4e4b\u95f4\u7684\u901a\u8def\u5c31\u662f\u4e00\u6761\u8def\u5f84\u3002"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\u8def\u5f84\u957f\u5ea6\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\u5728\u4e00\u6761\u8def\u5f84\u4e2d\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u7ed3\u70b9\uff0c\u8def\u5f84\u957f\u5ea6\u90fd\u8981\u52a01\u3002"}),"\n",(0,a.jsx)(e.li,{children:"\u4f8b\u5982\u5728\u4e00\u68f5\u6811\u4e2d\uff0c\u89c4\u5b9a\u6839\u7ed3\u70b9\u6240\u5728\u5c42\u6570\u4e3a1\u5c42\uff0c\u90a3\u4e48\u4ece\u6839\u7ed3\u70b9\u5230\u7b2ci\u5c42\u7ed3\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e3ai\uff0d1\u3002"}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.em,{children:"\u4ece\u6839\u7ed3\u70b9\u5230\u7ed3\u70b9c \u7684\u8def\u5f84\u957f\u5ea6\u4e3a 3\u3002"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\u8282\u70b9\u7684\u6743\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\u7ed9\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u8d4b\u4e88\u4e00\u4e2a\u65b0\u7684\u6570\u503c\uff0c\u88ab\u79f0\u4e3a\u8fd9\u4e2a\u7ed3\u70b9\u7684\u6743\u3002"}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.em,{children:"\u4f8b\u5982\uff0c\u7ed3\u70b9 a \u7684\u6743\u4e3a 7\uff0c\u7ed3\u70b9 b \u7684\u6743\u4e3a 5\u3002"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\u8282\u70b9\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\u6307\u7684\u662f\u4ece\u6839\u7ed3\u70b9\u5230\u8be5\u7ed3\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u4e0e\u8be5\u7ed3\u70b9\u7684\u6743\u7684\u4e58\u79ef\u3002"}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.em,{children:"\u4f8b\u5982\uff0c\u7ed3\u70b9 b \u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u4e3a 2 * 5 = 10\u3002"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["\u6811\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u4e3a\u6811\u4e2d\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\u3002\u901a\u5e38\u8bb0\u4f5c",(0,a.jsx)(e.code,{children:"WPL"}),"."]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.em,{children:"\u4f8b\u5982\u56fe\u4e2d\u6240\u793a\u7684\u8fd9\u9897\u6811\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u4e3a:"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsxs)(e.span,{className:"katex",children:[(0,a.jsx)(e.span,{className:"katex-mathml",children:(0,a.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(e.semantics,{children:[(0,a.jsxs)(e.mrow,{children:[(0,a.jsx)(e.mi,{children:"W"}),(0,a.jsx)(e.mi,{children:"P"}),(0,a.jsx)(e.mi,{children:"L"}),(0,a.jsx)(e.mo,{children:"="}),(0,a.jsx)(e.mn,{children:"1"}),(0,a.jsx)(e.mo,{children:"\u2217"}),(0,a.jsx)(e.mn,{children:"7"}),(0,a.jsx)(e.mo,{children:"+"}),(0,a.jsx)(e.mn,{children:"2"}),(0,a.jsx)(e.mo,{children:"\u2217"}),(0,a.jsx)(e.mn,{children:"5"}),(0,a.jsx)(e.mo,{children:"+"}),(0,a.jsx)(e.mn,{children:"3"}),(0,a.jsx)(e.mo,{children:"\u2217"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"("}),(0,a.jsx)(e.mn,{children:"2"}),(0,a.jsx)(e.mo,{children:"+"}),(0,a.jsx)(e.mn,{children:"4"}),(0,a.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(e.annotation,{encoding:"application/x-tex",children:"WPL = 1 * 7 + 2 * 5 + 3 * (2 + 4)"})]})})}),(0,a.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.6833em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"W"}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"P"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"L"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(e.span,{className:"mrel",children:"="}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,a.jsx)(e.span,{className:"mord",children:"1"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"\u2217"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(e.span,{className:"mord",children:"7"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"+"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,a.jsx)(e.span,{className:"mord",children:"2"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"\u2217"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(e.span,{className:"mord",children:"5"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"+"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,a.jsx)(e.span,{className:"mord",children:"3"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"\u2217"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mopen",children:"("}),(0,a.jsx)(e.span,{className:"mord",children:"2"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"+"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord",children:"4"}),(0,a.jsx)(e.span,{className:"mclose",children:")"})]})]})]})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Clip_2024-01-28_11-47-32.png ##w200##",src:i(46628).A+"",width:"285",height:"327"})}),"\n",(0,a.jsx)(e.h2,{id:"\u4ec0\u4e48\u662f\u8d6b\u592b\u66fc\u6811",children:"\u4ec0\u4e48\u662f\u8d6b\u592b\u66fc\u6811"}),"\n",(0,a.jsxs)(e.p,{children:["\u5f53\u7528n\u4e2a\u7ed3\u70b9\uff08\u90fd\u505a\u53f6\u5b50\u7ed3\u70b9\u4e14\u90fd\u6709\u5404\u81ea\u7684\u6743\u503c\uff09\u8bd5\u56fe\u6784\u5efa\u4e00\u68f5\u6811\u65f6\uff0c\u5982\u679c\u6784\u5efa\u7684\u8fd9\u68f5\u6811\u7684",(0,a.jsx)(e.code,{children:"\u5e26\u6743\u8def\u5f84\u957f\u5ea6"}),"\u6700\u5c0f\uff0c\u79f0\u8fd9\u68f5\u6811\u4e3a",(0,a.jsx)(e.code,{children:"\u201c\u6700\u4f18\u4e8c\u53c9\u6811\u201d"}),"\uff0c\u6709\u65f6\u4e5f\u53eb",(0,a.jsx)(e.code,{children:"\u201c\u8d6b\u592b\u66fc\u6811\u201d"}),"\u6216\u8005",(0,a.jsx)(e.code,{children:"\u201c\u54c8\u592b\u66fc\u6811\u201d"}),"\u3002"]}),"\n",(0,a.jsx)(e.h2,{id:"\u6784\u5efa\u8d6b\u592b\u66fc\u6811",children:"\u6784\u5efa\u8d6b\u592b\u66fc\u6811"}),"\n",(0,a.jsx)(e.p,{children:"\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6709\u5404\u81ea\u6743\u503c\u7684n\u4e2a\u7ed3\u70b9\uff0c\u6784\u5efa\u54c8\u592b\u66fc\u6811\u6709\u4e00\u4e2a\u884c\u4e4b\u6709\u6548\u7684\u529e\u6cd5\uff1a"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"\u5728n\u4e2a\u6743\u503c\u4e2d\u9009\u51fa\u4e24\u4e2a\u6700\u5c0f\u7684\u6743\u503c\uff0c\u5bf9\u5e94\u7684\u4e24\u4e2a\u7ed3\u70b9\u7ec4\u6210\u4e00\u4e2a\u65b0\u7684\u4e8c\u53c9\u6811\uff0c\u4e14\u65b0\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\u7684\u6743\u503c\u4e3a\u5de6\u53f3\u5b69\u5b50\u6743\u503c\u7684\u548c;"}),"\n",(0,a.jsx)(e.li,{children:"\u5728\u539f\u6709\u7684 n \u4e2a\u6743\u503c\u4e2d\u5220\u9664\u90a3\u4e24\u4e2a\u6700\u5c0f\u7684\u6743\u503c\uff0c\u540c\u65f6\u5c06\u65b0\u7684\u6743\u503c\u52a0\u5165\u5230 n-2 \u4e2a\u6743\u503c\u7684\u884c\u5217\u4e2d\uff0c\u4ee5\u6b64\u7c7b\u63a8;"}),"\n",(0,a.jsx)(e.li,{children:"\u91cd\u590d1\u548c2\uff0c\u76f4\u5230\u6240\u4ee5\u7684\u7ed3\u70b9\u6784\u5efa\u6210\u4e86\u4e00\u68f5\u4e8c\u53c9\u6811\u4e3a\u6b62\uff0c\u8fd9\u68f5\u6811\u5c31\u662f\u54c8\u592b\u66fc\u6811\u3002"}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsx)(e.tr,{children:(0,a.jsx)(e.th,{style:{textAlign:"center"},children:"##container##"})})}),(0,a.jsx)(e.tbody,{children:(0,a.jsx)(e.tr,{children:(0,a.jsx)(e.td,{style:{textAlign:"center"},children:(0,a.jsx)(e.img,{alt:"Clip_2024-01-28_11-52-20.png ##w380##",src:i(69623).A+"",width:"639",height:"632"})})})})]}),"\n",(0,a.jsx)(e.h1,{id:"\u8d6b\u592b\u66fc\u7f16\u7801",children:"\u8d6b\u592b\u66fc\u7f16\u7801"}),"\n",(0,a.jsx)(e.h2,{id:"\u4ec0\u4e48\u662f\u8d6b\u592b\u66fc\u7f16\u7801",children:"\u4ec0\u4e48\u662f\u8d6b\u592b\u66fc\u7f16\u7801"}),"\n",(0,a.jsx)(e.p,{children:"\u5728\u6570\u636e\u4f20\u9001\u65f6\uff0c\u4fe1\u606f\u8868\u73b0\u4e3a0\u548c1\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u3002\u4e3a\u4e86\u63d0\u9ad8\u4f20\u8f93\u7684\u901f\u5ea6\uff0c\u53ef\u4ee5\u91c7\u7528\u53d8\u957f\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u5bfb\u627e\u66f4\u4f18\u7684\u7f16\u7801\u65b9\u5f0f\u3002\u540c\u65f6\uff0c\u5fc5\u987b\u8981\u4fdd\u8bc1\u7f16\u7801\u4e0d\u5b58\u5728\u4e8c\u4e49\u6027\uff08\u4efb\u610f\u5b57\u7b26\u7f16\u7801\u90fd\u4e0d\u662f\u5176\u5b83\u5b57\u7b26\u7f16\u7801\u7684\u524d\u7f00\uff09\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u54c8\u592b\u66fc\u7f16\u7801\u5c31\u662f\u7b26\u5408\u4e0a\u8ff0\u8981\u6c42\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u91c7\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u5f62\u5f0f\u6784\u9020\u54c8\u592b\u66fc\u6811\u3002\u6309\u7167\u5b57\u7b26\u7684\u6982\u7387\u5206\u914d\u7801\u957f\uff0c\u5b9e\u73b0\u5e73\u5747\u7801\u957f\u6700\u77ed\u7684\u7f16\u7801\u3002"}),"\n",(0,a.jsx)(e.h2,{id:"\u8d6b\u592b\u66fc\u7f16\u7801\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u51fa\u73b0\u91cd\u590d\u524d\u7f00",children:"\u8d6b\u592b\u66fc\u7f16\u7801\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u51fa\u73b0\u91cd\u590d\u524d\u7f00?"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\u4f8b\u5982: \u6709 100 \u7edd\u5bf9\u6ca1\u6709 1001\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\u4e3a\u4ec0\u4e48\u5462? \u56e0\u4e3a\u5982\u679c\u6709 100 \u8bf4\u660e \u8fd9\u4e2a\u5df2\u7ecf\u662f\u53f6\u7ed3\u70b9\u4e86, \u800c1001\u7684\u51fa\u73b0\u662f\u9700\u8981 \u4e00\u4e2a\u53cc\u4eb2\u7ed3\u70b9 100 \u4f5c\u4e3a\u524d\u7f6e\u6761\u4ef6\u7684, \u800c\u8fd9\u4e2a\u5006\u4e0d\u4f1a\u540c\u65f6\u6ee1\u8db3, \u8bc1\u6bd5"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"\u4ee3\u7801\u5b9e\u73b0",children:"\u4ee3\u7801\u5b9e\u73b0"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-C",children:"#include <stdio.h>\n#include <stdlib.h>\n\n#define OK 1        // \u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\n#define ERROR 0     // \u7a0b\u5e8f\u8fd0\u884c\u62a5\u9519\n\ntypedef char ElemType;\n\ntypedef struct\n{\n    ElemType *data; // \u6570\u636e\n    int *weight;    // \u6743\n    int *parent;    // \u7236\u7ed3\u70b9 (\u7ebf\u6027\u5b58\u50a8\u9700\u8981\u7684, \u4e0d\u7136\u6ca1\u6709\u5934\u6307\u9488, \u627e\u4e0d\u5230\u6839\u5f00\u59cb, \u9700\u8981\u4e00\u4e2a\u6761\u4ef6 i == parent_index)\n    int *left;      // \u5de6\u5b50\u6811\n    int *right;     // \u53f3\u5b50\u6811\n} HuffmanTree;\n\nHuffmanTree *initHuffmanTree(int NodeNum);                                      // \u521b\u5efa\u4e00\u9897\u8d6b\u592b\u66fc\u6811\n_Bool structureHuffmanTree(HuffmanTree *H, ElemType *e, int *w, int NodeNum);   // \u6784\u5efa\u8d6b\u592b\u66fc\u6811\nchar **getHuffmanCode(HuffmanTree *H, int NodeNum);                             // \u751f\u6210\u8d6b\u592b\u66fc\u7f16\u7801\n_Bool freeHuffmanTree(HuffmanTree **H);                                         // \u91ca\u653e\u8d6b\u592b\u66fc\u6811\n_Bool freeHuffmanCode(char ***HC, int NodeNum);                                 // \u91ca\u653e\u8d6b\u592b\u66fc\u7f16\u7801\n\nHuffmanTree *initHuffmanTree(int NodeNum)\n{\n    int n = 2 * NodeNum - 1;\n    HuffmanTree *H = (HuffmanTree *)malloc(sizeof(HuffmanTree));\n    if (!H)\n    {\n        MALLOC_ERROR:\n        printf(\"Malloc ERROR!\\n\");\n        return NULL;\n    }\n\n    H->data = (ElemType *)malloc(sizeof(ElemType) * n);\n    if (!H->data)\n        goto MALLOC_ERROR;\n    \n    H->parent = (int *)malloc(sizeof(int) * n);\n    if (!H->parent)\n        goto MALLOC_ERROR;\n\n    H->left = (int *)malloc(sizeof(int) * n);\n    if (!H->left)\n        goto MALLOC_ERROR;\n\n    H->right = (int *)malloc(sizeof(int) * n);\n    if (!H->right)\n        goto MALLOC_ERROR;\n    \n    H->weight = (int *)malloc(sizeof(int) * n);\n    if (!H->weight)\n        goto MALLOC_ERROR;\n    \n    return H;\n}\n\n// static void _bubble_sort(ElemType *e, int *w, int NodeNum)\n// {\n//     // \u5192\u6ce1\u6392\u5e8f, \u4e0d\u8981, \u56e0\u4e3a\u672c\u6765\u5c31\u662f\u5168\u904d\u5386\u7684...\n//     _Bool tag = 1;\n//     for (int i = 0; i < NodeNum; ++i)\n//     {\n//         tag = 1;\n//         for (int j = i + 1; j < NodeNum; ++j)\n//         {\n//             if (w[i] > w[j])\n//             {\n//                 w[i] = w[i] ^ w[j];\n//                 w[j] = w[i] ^ w[j];\n//                 w[i] = w[i] ^ w[j];\n\n//                 e[i] = e[i] ^ e[j];\n//                 e[j] = e[i] ^ e[j];\n//                 e[i] = e[i] ^ e[j];\n\n//                 tag = 0;\n//             }\n//         }\n//         if (tag)\n//             break;\n//     }\n// }\n\n_Bool structureHuffmanTree(HuffmanTree *H, ElemType *e, int *w, int NodeNum)\n{\n    // _bubble_sort(e, w, NodeNum);\n    // for (int i = 0 ; i < NodeNum; ++i)\n    //     printf(\"%d --- %c\\n\", w[i], e[i]);\n    for (int i = 0; i < NodeNum; ++i)\n    {\n        H->data[i] = e[i];\n        H->parent[i] = i;\n        H->weight[i] = w[i];\n        // -1 \u4ee3\u8868\u662f\u53f6\u7ed3\u70b9\n        H->left[i] = -1;\n        H->right[i] = -1;\n    }\n\n    int n = 2 * NodeNum - 1;\n    for (int i = NodeNum; i < n; ++i)\n    {\n        H->parent[i] = i;\n    }\n\n   \n    \n    int zero_node = n - NodeNum;\n    int min_i = -1, min_2_i = -1;\n    while (zero_node)\n    {\n        for (int i = 0; i < NodeNum; ++i) // \u5bfb\u627e\u4e24\u4e2a\u6743\u6700\u5c0f\u7684\u7ed3\u70b9\n        {\n            if (H->parent[i] == i && (min_i == -1 || H->weight[i] < H->weight[min_i]))\n            {\n                min_2_i = min_i;\n                min_i = i;\n            }\n\n            if (H->parent[i] == i && (min_2_i == -1 || H->weight[i] < H->weight[min_2_i]) && min_i != i)\n            {\n                min_2_i = i;\n            }\n        }\n\n        for (int i = NodeNum; i < n; ++i) // \u5bfb\u627e\u4e00\u4e2a\u7a7a\u7684\u7ed3\u70b9, \u4f5c\u4e3a\u5408\u5e76\u540e\u7684\u7ed3\u70b9\n        {\n            // \u627e\u5230\u5408\u9002\u4eba\u9009\n            ++NodeNum;\n            H->parent[min_i] = i;\n            H->parent[min_2_i] = i;\n            H->data[i] = 1;\n            H->left[i] = min_i;\n            H->right[i] = min_2_i;\n            H->weight[i] = H->weight[min_i] + H->weight[min_2_i];\n            --zero_node;\n            break;\n        }\n        min_i = -1, min_2_i = -1;\n    }\n}\n\nchar **getHuffmanCode(HuffmanTree *H, int NodeNum)\n{\n    char **str_arr = (char **)malloc(sizeof(char *) * NodeNum);\n    for (int i = 0; i < NodeNum; ++i)\n    {\n        str_arr[i] = (char *)malloc(sizeof(char) * (NodeNum + 1));\n        if (!str_arr[i])\n        {\n            printf(\"Malloc ERROR!\\n\");\n            return NULL;\n        }\n    }\n\n    // lz\u77e5\u9053\u7236\u8282\u70b9az\n    for (int i = 0; i < NodeNum; ++i)\n    {\n        int k = i, tmp = k;\n        for (int j = 0; j < NodeNum + 1; ++j)\n        {\n            if (H->parent[k] != k)\n            {\n                tmp = k;\n                k = H->parent[k];\n                str_arr[i][j] = H->left[k] == tmp ? '0' : '1';\n            }\n            else\n            {\n                str_arr[i][j] = '\\0';\n            }\n        }\n    }\n\n    return str_arr;\n}\n\n_Bool freeHuffmanTree(HuffmanTree **H)\n{\n    free(*H);\n    *H = NULL;\n    return OK;\n}\n\n_Bool freeHuffmanCode(char ***HC, int NodeNum)\n{\n    for (int i = 0; i < NodeNum; ++i)\n    {\n        free((*HC)[i]);\n    }\n    free(*HC);\n    *HC = NULL;\n    return 1;\n}\n\nvoid text(void);\n\nvoid text(void)\n{\n    int w[] = {9,8,7,6,5,5};\n    ElemType data[] = {'A', 'B', 'C', 'D', 'E', 'F'};\n    int len = sizeof(w) / sizeof(w[0]);\n    HuffmanTree *tree = initHuffmanTree(len);\n    structureHuffmanTree(tree, data, w, len);\n\n    // for (int i = 0; i < 2 * len - 1; ++i)\n    //     printf(\"[%d] \u7ed3\u70b9%c: \u7236\u7ed3\u70b9[%d], \u5de6\u5b50\u6811[%d], \u53f3\u5b50\u6811[%d], \u6743\u4e3a[%d]\\n\", i, tree->data[i], tree->parent[i], tree->left[i], tree->right[i], tree->weight[i]);\n\n    char **HuffmanCode = getHuffmanCode(tree, len);\n    for (int i = 0; i < len; ++i)\n        printf(\"%c --\x3e %s\\n\", data[i], HuffmanCode[i]);\n\n    freeHuffmanTree(&tree);\n    freeHuffmanCode(&HuffmanCode, len);\n}\n\nint main(void)\n{\n    //  - \u8d6b\u592b\u66fc\u7f16\u7801 - \u7ebf\u6027\u5b58\u50a8 \u7684 \u5b9e\u73b0\n    text();\n    \n    return 0;\n}\n\n"})})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},69623:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/Clip_2024-01-28_11-52-20-e4060905cf3406c7455f836b045fe386.png"}}]);